{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { client } from \"../lib/api/client\";\nimport { useRecoilState } from 'recoil';\nimport { ApiKeyValue } from '../store/ApiKeyValue';\nimport { useMessage } from './message/useMessage';\nimport { AnimeList } from '../store/AnimeLists';\nexport const useAnimeApiSearch = () => {\n  _s();\n\n  const [apiKeyValue, setApiKeyValue] = useRecoilState(ApiKeyValue);\n  const [animeList, setAnimeList] = useRecoilState(AnimeList);\n  const {\n    showMessage\n  } = useMessage(); // useEffect(() => {\n\n  const getAnimes = async () => {\n    try {\n      const filter_season = `${apiKeyValue.year}-${apiKeyValue.cour}`;\n      const getanime = await client.get('/api/annicts/search', {\n        params: {\n          filter_season\n        }\n      });\n      const anime_date = getanime.data.works;\n      setAnimeList(anime_date);\n    } catch (error) {\n      showMessage({\n        title: 'アニメ一覧の取得に失敗しました',\n        status: \"error\"\n      });\n    }\n  }; // return () => {\n  // }    \n  // }, [apiKeyValue])    \n\n\n  return {\n    animeLists,\n    getAnimes\n  };\n};\n\n_s(useAnimeApiSearch, \"L7KBFb8bZePpLIJ7lbGULdt1H3g=\", false, function () {\n  return [useRecoilState, useRecoilState, useMessage];\n});","map":{"version":3,"sources":["/usr/src/app/react-app/src/customHooks/useAnimeApiSearch.ts"],"names":["client","useRecoilState","ApiKeyValue","useMessage","AnimeList","useAnimeApiSearch","apiKeyValue","setApiKeyValue","animeList","setAnimeList","showMessage","getAnimes","filter_season","year","cour","getanime","get","params","anime_date","data","works","error","title","status","animeLists"],"mappings":";;AACA,SAASA,MAAT,QAAuB,mBAAvB;AAGA,SAASC,cAAT,QAA+C,QAA/C;AAGA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,SAASC,SAAT,QAA0B,qBAA1B;AAOA,OAAO,MAAMC,iBAAiC,GAAG,MAAM;AAAA;;AACnD,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCN,cAAc,CAACC,WAAD,CAAtD;AACA,QAAM,CAAEM,SAAF,EAAaC,YAAb,IAA8BR,cAAc,CAACG,SAAD,CAAlD;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAkBP,UAAU,EAAlC,CAHmD,CAInD;;AAEI,QAAMQ,SAAS,GAAG,YAAW;AACzB,QAAI;AACA,YAAMC,aAAa,GAAI,GAAEN,WAAW,CAACO,IAAK,IAAGP,WAAW,CAACQ,IAAK,EAA9D;AACA,YAAMC,QAAQ,GAAG,MAAMf,MAAM,CAACgB,GAAP,CAAW,qBAAX,EAAkC;AACrDC,QAAAA,MAAM,EAAE;AACJL,UAAAA;AADI;AAD6C,OAAlC,CAAvB;AAKA,YAAMM,UAA2B,GAAGH,QAAQ,CAACI,IAAT,CAAcC,KAAlD;AACAX,MAAAA,YAAY,CAACS,UAAD,CAAZ;AAEH,KAVD,CAUE,OAAOG,KAAP,EAAc;AACZX,MAAAA,WAAW,CAAC;AAACY,QAAAA,KAAK,EAAE,iBAAR;AAA2BC,QAAAA,MAAM,EAAE;AAAnC,OAAD,CAAX;AACH;AACH,GAdF,CAN+C,CAsB/C;AACA;AACJ;;;AAGA,SAAO;AAAEC,IAAAA,UAAF;AAAcb,IAAAA;AAAd,GAAP;AACH,CA5BM;;GAAMN,iB;UAC+BJ,c,EACJA,c,EACZE,U","sourcesContent":["import { useEffect } from 'react'\nimport { client } from \"../lib/api/client\"\nimport { useCourFactory } from './useCourFactory'\nimport { useYearFactory } from './useYearFactory'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { Year } from '../store/Year'\nimport { Cour } from '../store/Cour'\nimport { ApiKeyValue } from '../store/ApiKeyValue'\nimport { useMessage } from './message/useMessage'\nimport { AnnictApiType } from '../types/api/AnnictApiType'\nimport { AnimeList } from '../store/AnimeLists'\n\ntype AnimeApiSearch = () => {\n        animeList: AnnictApiType[];\n        getAnimes: () => Promise<void>;\n    }\n\nexport const useAnimeApiSearch: AnimeApiSearch = () => {\n    const [ apiKeyValue, setApiKeyValue ] = useRecoilState(ApiKeyValue)\n    const [ animeList, setAnimeList ] = useRecoilState(AnimeList)\n    const { showMessage } = useMessage()\n    // useEffect(() => {\n\n        const getAnimes = async() => {\n            try {\n                const filter_season = `${apiKeyValue.year}-${apiKeyValue.cour}`\n                const getanime = await client.get('/api/annicts/search', {\n                    params: {\n                        filter_season,\n                    }\n                })\n                const anime_date: AnnictApiType[] = getanime.data.works\n                setAnimeList(anime_date)\n            \n            } catch (error) {\n                showMessage({title: 'アニメ一覧の取得に失敗しました', status: \"error\"})\n            }\n         }\n\n        // return () => {\n        // }    \n    // }, [apiKeyValue])    \n\n\n    return { animeLists, getAnimes }\n}"]},"metadata":{},"sourceType":"module"}