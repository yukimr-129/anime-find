{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-app/src/components/pages/auth/SigninForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Divider, Flex, FormControl, FormErrorMessage, FormLabel, Heading, Input, VStack } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { BeatLoader } from \"react-spinners\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SigninForm = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    formState\n  } = useForm({\n    mode: 'all',\n    defaultValues: {\n      email: '',\n      password: ''\n    }\n  });\n\n  const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n  const handleOnSubmit = async data => {\n    await sleep(5000);\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      justify: \"center\",\n      align: \"center\",\n      h: \"100%\",\n      mt: \"90px\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        bg: \"white\",\n        w: \"sm\",\n        p: 4,\n        borderRadius: \"10px\",\n        shadow: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h1\",\n          size: \"lg\",\n          textAlign: \"center\",\n          children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          my: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(handleOnSubmit),\n          children: /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 5,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              id: \"email\",\n              isRequired: true,\n              isInvalid: errors.email ? true : false,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"email\" // name='email' \n                ,\n                placeholder: \"test@example.com\",\n                ...register('email', {\n                  required: \"メールアドレスは必須です。\",\n                  pattern: {\n                    value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                    message: \"メールアドレス形式で入力してください。\"\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                children: errors.email && errors.email.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              id: \"password\",\n              isRequired: true,\n              isInvalid: errors.password ? true : false,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"password\" // name='password'\n                ,\n                ...register('password', {\n                  required: \"パスワードは必須です。\"\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                children: errors.password && errors.password.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              disabled: !formState.isValid,\n              isLoading: formState.isSubmitting,\n              w: \"100%\",\n              color: \"white\",\n              bg: \"blue.400\",\n              _hover: {\n                opacity: 0.8\n              },\n              spinner: /*#__PURE__*/_jsxDEV(BeatLoader, {\n                size: 8,\n                color: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 190\n              }, this),\n              children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(SigninForm, \"mvL8Z4Z7LI04GDQeI6dVtJdIGJM=\", false, function () {\n  return [useForm];\n});\n\n_c = SigninForm;\nexport default SigninForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SigninForm\");","map":{"version":3,"sources":["/usr/src/app/react-app/src/components/pages/auth/SigninForm.tsx"],"names":["Box","Button","Divider","Flex","FormControl","FormErrorMessage","FormLabel","Heading","Input","VStack","useState","useForm","BeatLoader","SigninForm","email","setEmail","password","setPassword","register","formState","errors","handleSubmit","mode","defaultValues","sleep","ms","Promise","resolve","setTimeout","handleOnSubmit","data","console","log","required","pattern","value","message","isValid","isSubmitting","opacity"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,OAAtB,EAA+BC,IAA/B,EAAqCC,WAArC,EAAkDC,gBAAlD,EAAoEC,SAApE,EAA+EC,OAA/E,EAAwFC,KAAxF,EAAqGC,MAArG,QAAmH,kBAAnH;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,UAAT,QAA2B,gBAA3B;;;;AAOA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAqBL,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAAEM,QAAF,EAAYC,WAAZ,IAA2BP,QAAQ,CAAC,EAAD,CAAzC;AAEA,QAAM;AAAEQ,IAAAA,QAAF;AAAYC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF,KAAvB;AAAmCC,IAAAA,YAAnC;AAAiDF,IAAAA;AAAjD,MAA+DR,OAAO,CAAa;AACrFW,IAAAA,IAAI,EAAE,KAD+E;AAErFC,IAAAA,aAAa,EAAE;AACXT,MAAAA,KAAK,EAAE,EADI;AAEXE,MAAAA,QAAQ,EAAE;AAFC;AAFsE,GAAb,CAA5E;;AAQA,QAAMQ,KAAK,GAAIC,EAAD,IAAgB,IAAIC,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAnC,CAA9B;;AAEA,QAAMI,cAAc,GAAG,MAAMC,IAAN,IAA2B;AAC9C,UAAMN,KAAK,CAAC,IAAD,CAAX;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,GAHD;;AAIA,sBACI;AAAA,2BAGQ,QAAC,IAAD;AAAM,MAAA,OAAO,EAAC,QAAd;AAAuB,MAAA,KAAK,EAAC,QAA7B;AAAsC,MAAA,CAAC,EAAC,MAAxC;AAA+C,MAAA,EAAE,EAAC,MAAlD;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,OAAR;AAAgB,QAAA,CAAC,EAAC,IAAlB;AAAuB,QAAA,CAAC,EAAE,CAA1B;AAA6B,QAAA,YAAY,EAAC,MAA1C;AAAiD,QAAA,MAAM,EAAC,IAAxD;AAAA,gCACI,QAAC,OAAD;AAAS,UAAA,EAAE,EAAC,IAAZ;AAAiB,UAAA,IAAI,EAAC,IAAtB;AAA2B,UAAA,SAAS,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,OAAD;AAAS,UAAA,EAAE,EAAE;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAM,UAAA,QAAQ,EAAET,YAAY,CAACQ,cAAD,CAA5B;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,CAAjB;AAAA,oCACI,QAAC,WAAD;AAAa,cAAA,EAAE,EAAC,OAAhB;AAAwB,cAAA,UAAU,MAAlC;AAAmC,cAAA,SAAS,EAAET,MAAM,CAACN,KAAP,GAAe,IAAf,GAAsB,KAApE;AAAA,sCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,KAAD;AACI,gBAAA,IAAI,EAAC,OADT,CAEI;AAFJ;AAGI,gBAAA,WAAW,EAAC,kBAHhB;AAAA,mBAIQI,QAAQ,CAAC,OAAD,EAAU;AAAEe,kBAAAA,QAAQ,EAAE,eAAZ;AAA6BC,kBAAAA,OAAO,EAAE;AAACC,oBAAAA,KAAK,EAAE,uJAAR;AAAiKC,oBAAAA,OAAO,EAAE;AAA1K;AAAtC,iBAAV;AAJhB;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAQI,QAAC,gBAAD;AAAA,0BACKhB,MAAM,CAACN,KAAP,IAAgBM,MAAM,CAACN,KAAP,CAAasB;AADlC;AAAA;AAAA;AAAA;AAAA,sBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAaI,QAAC,WAAD;AAAa,cAAA,EAAE,EAAC,UAAhB;AAA2B,cAAA,UAAU,MAArC;AAAsC,cAAA,SAAS,EAAEhB,MAAM,CAACJ,QAAP,GAAkB,IAAlB,GAAyB,KAA1E;AAAA,sCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,KAAD;AACI,gBAAA,IAAI,EAAC,UADT,CAEI;AAFJ;AAAA,mBAGQE,QAAQ,CAAC,UAAD,EAAa;AAACe,kBAAAA,QAAQ,EAAE;AAAX,iBAAb;AAHhB;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAOI,QAAC,gBAAD;AAAA,0BACKb,MAAM,CAACJ,QAAP,IAAmBI,MAAM,CAACJ,QAAP,CAAgBoB;AADxC;AAAA;AAAA;AAAA;AAAA,sBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ,eAwBI,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,QAAQ,EAAE,CAACjB,SAAS,CAACkB,OAA3C;AAAoD,cAAA,SAAS,EAAElB,SAAS,CAACmB,YAAzE;AAAuF,cAAA,CAAC,EAAC,MAAzF;AAAgG,cAAA,KAAK,EAAC,OAAtG;AAA8G,cAAA,EAAE,EAAC,UAAjH;AAA4H,cAAA,MAAM,EAAE;AAACC,gBAAAA,OAAO,EAAE;AAAV,eAApI;AAAoJ,cAAA,OAAO,eAAE,QAAC,UAAD;AAAY,gBAAA,IAAI,EAAE,CAAlB;AAAqB,gBAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,sBAA7J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAHR,mBADJ;AA2CH,CA7DD;;GAAM1B,U;UAImEF,O;;;KAJnEE,U;AA+DN,eAAeA,UAAf","sourcesContent":["import { Box, Button, Divider, Flex, FormControl, FormErrorMessage, FormLabel, Heading, Input, Text, VStack } from \"@chakra-ui/react\"\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\"\nimport { BeatLoader } from \"react-spinners\"\n\ntype FormInputs = {\n    email: string;\n    password: string;\n  };\n\nconst SigninForm = () => {\n    const [ email, setEmail] = useState('')\n    const [ password, setPassword] = useState('')\n    \n    const { register, formState: { errors }, handleSubmit, formState } = useForm<FormInputs>({\n        mode: 'all',\n        defaultValues: {\n            email: '',\n            password: '',\n          }\n    })\n\n    const sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n\n    const handleOnSubmit = async(data: FormInputs) => {\n        await sleep(5000)\n        console.log(data);\n    }\n    return (\n        <>\n            {/* <Header /> */}\n            {/* <Box> */}\n                <Flex justify='center' align='center' h='100%' mt='90px'>\n                    <Box bg='white' w='sm' p={4} borderRadius='10px' shadow='md'>\n                        <Heading as='h1' size='lg' textAlign='center'>ログイン</Heading>\n                        <Divider my={4}/>\n                        <form onSubmit={handleSubmit(handleOnSubmit)}>\n                            <VStack spacing={5}>\n                                <FormControl id=\"email\" isRequired isInvalid={errors.email ? true : false}>\n                                    <FormLabel>メールアドレス</FormLabel>\n                                    <Input \n                                        type='email'\n                                        // name='email' \n                                        placeholder=\"test@example.com\" \n                                        {...register('email', { required: \"メールアドレスは必須です。\", pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"メールアドレス形式で入力してください。\"}, })}\n                                    />\n                                    <FormErrorMessage>\n                                        {errors.email && errors.email.message}\n                                    </FormErrorMessage>\n                                </FormControl>\n                                <FormControl id=\"password\" isRequired isInvalid={errors.password ? true : false}>\n                                    <FormLabel>パスワード</FormLabel>\n                                    <Input \n                                        type=\"password\" \n                                        // name='password'\n                                        {...register('password', {required: \"パスワードは必須です。\"})}\n                                    />\n                                    <FormErrorMessage>\n                                        {errors.password && errors.password.message}\n                                    </FormErrorMessage>\n                                </FormControl>\n                                <Button type=\"submit\" disabled={!formState.isValid} isLoading={formState.isSubmitting} w='100%' color='white' bg='blue.400' _hover={{opacity: 0.8}} spinner={<BeatLoader size={8} color=\"white\" />}>ログイン</Button>\n                            </VStack>\n                        </form>\n                        \n                    </Box>\n                </Flex>  \n            {/* </Box> */}\n\n        </>\n    )\n}\n\nexport default SigninForm"]},"metadata":{},"sourceType":"module"}