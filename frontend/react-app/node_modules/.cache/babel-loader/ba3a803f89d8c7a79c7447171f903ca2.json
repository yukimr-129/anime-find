{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-app/src/routing/Router.tsx\",\n    _s = $RefreshSig$();\n\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport TopPage from \"../components/pages/TopPage\";\nimport SignUpForm from '../components/pages/auth/SigninForm';\nimport SigninForm from '../components/pages/auth/SigninForm';\nimport { AuthLoding } from \"store/loding/AuthLoding\";\nimport { IsSignedIn } from \"store/auth/Auth\";\nimport { useRecoilValue } from \"recoil\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Router = () => {\n  _s();\n\n  const authLoding = useRecoilValue(AuthLoding);\n  const isSignedIn = useRecoilValue(IsSignedIn);\n  const history = useHistory(); // ユーザーが認証済みかどうかでルーティングを決定\n  // 未認証だった場合は「/signin」ページに促す\n\n  const Private = ({\n    children\n  }) => {\n    if (!authLoding) {\n      if (IsSignedIn) {\n        return children;\n      } else {\n        history.push({\n          pathname: '/signin'\n        });\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/_jsxDEV(TopPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: () => /*#__PURE__*/_jsxDEV(SignUpForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => /*#__PURE__*/_jsxDEV(SigninForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Router, \"5cTwYnsncJD2v28s4PFO9inD6h8=\", false, function () {\n  return [useRecoilValue, useRecoilValue, useHistory];\n});\n\n_c = Router;\nexport default Router;\n\nvar _c;\n\n$RefreshReg$(_c, \"Router\");","map":{"version":3,"sources":["/usr/src/app/react-app/src/routing/Router.tsx"],"names":["Route","Switch","useHistory","TopPage","SignUpForm","SigninForm","AuthLoding","IsSignedIn","useRecoilValue","Router","authLoding","isSignedIn","history","Private","children","push","pathname"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,QAA0C,kBAA1C;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,cAAT,QAA+B,QAA/B;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAMC,UAAU,GAAGF,cAAc,CAACF,UAAD,CAAjC;AACA,QAAMK,UAAU,GAAGH,cAAc,CAACD,UAAD,CAAjC;AAEA,QAAMK,OAAO,GAAGV,UAAU,EAA1B,CAJiB,CAKjB;AACA;;AACA,QAAMW,OAAO,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAoD;AAChE,QAAI,CAACJ,UAAL,EAAiB;AACb,UAAIH,UAAJ,EAAgB;AACZ,eAAOO,QAAP;AACH,OAFD,MAEO;AACHF,QAAAA,OAAO,CAACG,IAAR,CAAa;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAb;AACH;AACJ,KAND,MAMO;AACH,0BAAO,qCAAP;AACH;AACJ,GAVD;;AAWA,sBACI,QAAC,MAAD;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,MAAM,EAAE,mBAC1B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,SAAlB;AAA4B,MAAA,MAAM,EAAE,mBAChC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,SAAlB;AAA4B,MAAA,MAAM,EAAE,mBAChC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ,eAmBI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAzCD;;GAAMP,M;UACiBD,c,EACAA,c,EAEHN,U;;;KAJdO,M;AA2CN,eAAeA,MAAf","sourcesContent":["import { Route, Switch, useHistory } from \"react-router-dom\"\nimport TopPage from \"../components/pages/TopPage\"\nimport SignUpForm from '../components/pages/auth/SigninForm'\nimport SigninForm from '../components/pages/auth/SigninForm'\nimport { AuthLoding } from \"store/loding/AuthLoding\"\nimport { IsSignedIn } from \"store/auth/Auth\"\nimport { useRecoilValue } from \"recoil\"\n\nconst Router = () => {\n    const authLoding = useRecoilValue(AuthLoding)\n    const isSignedIn = useRecoilValue(IsSignedIn)\n\n    const history = useHistory()\n    // ユーザーが認証済みかどうかでルーティングを決定\n    // 未認証だった場合は「/signin」ページに促す\n    const Private = ({ children }: { children: React.ReactElement }) => {\n        if (!authLoding) {\n            if (IsSignedIn) {\n                return children\n            } else {\n                history.push({pathname: '/signin'})\n            }\n        } else {\n            return <></>\n        }\n    }\n    return (\n        <Switch>\n            <Route exact path='/' render={() => (\n                <TopPage />\n            )} />\n            <Route exact path=\"/signup\" render={() => (\n                <SignUpForm />\n            )} />\n            <Route exact path=\"/signin\" render={() => (\n                <SigninForm />\n            )} />\n            {/* <Route path='' render={() => (\n                <LikeAnime />\n            )} /> */}\n            {/* <Route path='' render={() => (\n                <Login />\n            )} /> */}\n            {/* <Route path='' render={() => (\n                <MyAccount />\n            )} /> */}\n            <Route />\n        </Switch>\n    )\n}\n\nexport default Router"]},"metadata":{},"sourceType":"module"}