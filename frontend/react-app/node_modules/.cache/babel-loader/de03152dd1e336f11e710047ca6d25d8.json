{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-app/src/components/pages/auth/UserProfile.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Divider, Flex, FormControl, FormErrorMessage, FormLabel, Heading, Input, VStack, Image, Center } from \"@chakra-ui/react\";\nimport { useState, useCallback } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { MdPhotoCamera, MdCancel } from \"react-icons/md\";\nimport { BeatLoader } from \"react-spinners\";\nimport { useRecoilState } from \"recoil\";\nimport imageCompression from \"browser-image-compression\";\nimport { CurrentUser } from \"store/auth/Auth\";\nimport { getCurrentUser, updateUserProfile } from \"lib/api/auth/auth\";\nimport { useMessage } from \"customHooks/message/useMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserProfile = () => {\n  _s();\n\n  var _errors$name, _errors$name2;\n\n  const defaultSrc = \"https://www.pngkit.com/png/full/301-3012694_account-user-profile-avatar-comments-fa-user-circle.png\";\n  const [currentUser, setCurrentUser] = useRecoilState(CurrentUser);\n  const [preview, setPreview] = useState('');\n  const [image, setImage] = useState();\n  const {\n    showMessage\n  } = useMessage();\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    formState\n  } = useForm({\n    mode: 'all',\n    defaultValues: {\n      name: currentUser === null || currentUser === void 0 ? void 0 : currentUser.name,\n      email: currentUser === null || currentUser === void 0 ? void 0 : currentUser.email\n    }\n  });\n\n  const handleUpdateProfile = async data => {\n    const {\n      name,\n      email,\n      password\n    } = data;\n    const formData = new FormData();\n    formData.append(\"user[name]\", name);\n    formData.append(\"user[email]\", email); //画像ファイルがあれば実行\n\n    if (image) {\n      //ファイル圧縮オプション 3MB以下\n      const compressOptions = {\n        maxSizeMB: 3\n      };\n      const imageData = await imageCompression(image, compressOptions);\n      formData.append(\"user[image]\", imageData);\n    }\n\n    console.log(formData.get('user[name]'), formData.get('user[email]'), formData.get('user[image]'));\n    console.log(image);\n\n    try {\n      const user = {\n        name: formData.get('user[name]'),\n        email: formData.get('user[email]'),\n        image: formData.get('user[image]')\n      };\n      console.log('更新処理開始');\n      const res = await updateUserProfile(user);\n      console.log('更新失敗');\n\n      if (res.status === 200) {\n        const res = await getCurrentUser();\n        setCurrentUser(res === null || res === void 0 ? void 0 : res.data.data);\n        showMessage({\n          title: 'プロフィールを更新しました。',\n          status: 'success'\n        });\n      } else {\n        console.log('422');\n        showMessage({\n          title: 'プロフィールの更新に失敗しました。',\n          status: 'error'\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      showMessage({\n        title: 'プロフィールの更新に失敗しました。',\n        status: 'error'\n      });\n    }\n  }; // プレビュー機能\n\n\n  const previewImage = useCallback(e => {\n    const file = e.target.files[0];\n    setPreview(window.URL.createObjectURL(file));\n  }, []); // アップロード\n\n  const uploadImage = useCallback(e => {\n    const file = e.target.files[0];\n    setImage(file);\n  }, []); // アップロードキャンセル\n\n  const ImageUploadCansel = useCallback(() => {\n    setPreview('');\n    setImage(undefined);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      justify: \"center\",\n      align: \"center\",\n      h: \"100%\",\n      mt: \"90px\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        bg: \"white\",\n        w: \"2xl\",\n        p: 4,\n        borderRadius: \"10px\",\n        shadow: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h1\",\n          size: \"lg\",\n          textAlign: \"center\",\n          children: \"\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u7DE8\\u96C6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          my: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(handleUpdateProfile),\n          children: /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 5,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              id: \"image\",\n              mb: \"20px\",\n              children: /*#__PURE__*/_jsxDEV(Center, {\n                children: /*#__PURE__*/_jsxDEV(Flex, {\n                  flexDirection: \"column\",\n                  align: \"center\",\n                  justify: \"center\",\n                  position: \"relative\",\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    position: \"absolute\",\n                    top: \"0\",\n                    left: \"10px\",\n                    cursor: \"pointer\",\n                    _hover: {\n                      bg: 'none'\n                    },\n                    onClick: ImageUploadCansel,\n                    children: /*#__PURE__*/_jsxDEV(MdCancel, {\n                      size: \"25px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    w: \"200px\",\n                    h: \"200px\",\n                    borderRadius: \"999px\",\n                    mb: \"20px\",\n                    children: /*#__PURE__*/_jsxDEV(Image, {\n                      src: preview ? preview : defaultSrc,\n                      alt: \"preview img\",\n                      w: \"200px\",\n                      h: \"200px\",\n                      objectFit: \"cover\",\n                      borderRadius: \"999px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n                    htmlFor: \"avatar\",\n                    children: [/*#__PURE__*/_jsxDEV(Input, {\n                      display: \"none\",\n                      type: \"file\",\n                      id: \"avatar\",\n                      name: \"image\",\n                      accept: \"image/*\",\n                      onChange: e => {\n                        uploadImage(e);\n                        previewImage(e);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      leftIcon: /*#__PURE__*/_jsxDEV(MdPhotoCamera, {\n                        size: \"25px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 122,\n                        columnNumber: 63\n                      }, this),\n                      as: \"span\",\n                      cursor: \"pointer\",\n                      colorScheme: \"teal\",\n                      variant: \"solid\",\n                      children: \"\\u753B\\u50CF\\u3092\\u30A2\\u30C3\\u30D7\\u30ED\\u30FC\\u30C9\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              id: \"name\",\n              isRequired: true,\n              isInvalid: errors.name ? true : false,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u30CD\\u30FC\\u30E0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                ...register('name', {\n                  required: true,\n                  maxLength: 10\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                children: [((_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.type) === 'required' && 'ユーザーネームは必須です。', ((_errors$name2 = errors.name) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.type) === 'maxLength' && 'ユーザーネームは10文字以内で設定してください。']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              id: \"email\",\n              isRequired: true,\n              isInvalid: errors.email ? true : false,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"email\" // name='email' \n                ,\n                placeholder: \"test@example.com\",\n                ...register('email', {\n                  required: 'メールアドレスは必須です。',\n                  pattern: {\n                    value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                    message: \"メールアドレス形式で入力してください。\"\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                children: errors.email && errors.email.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              disabled: !formState.isValid,\n              isLoading: formState.isSubmitting,\n              w: \"100%\",\n              color: \"white\",\n              bg: \"blue.400\",\n              _hover: {\n                opacity: 0.8\n              },\n              spinner: /*#__PURE__*/_jsxDEV(BeatLoader, {\n                size: 8,\n                color: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 186\n              }, this),\n              children: \"\\u66F4\\u65B0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(UserProfile, \"a89JUB2Wc38KEgp0ZZ7bsqLQCi8=\", false, function () {\n  return [useRecoilState, useMessage, useForm];\n});\n\n_c = UserProfile;\nexport default UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["/usr/src/app/react-app/src/components/pages/auth/UserProfile.tsx"],"names":["Box","Button","Divider","Flex","FormControl","FormErrorMessage","FormLabel","Heading","Input","VStack","Image","Center","useState","useCallback","useForm","MdPhotoCamera","MdCancel","BeatLoader","useRecoilState","imageCompression","CurrentUser","getCurrentUser","updateUserProfile","useMessage","UserProfile","defaultSrc","currentUser","setCurrentUser","preview","setPreview","image","setImage","showMessage","register","formState","errors","handleSubmit","mode","defaultValues","name","email","handleUpdateProfile","data","password","formData","FormData","append","compressOptions","maxSizeMB","imageData","console","log","get","user","res","status","title","error","previewImage","e","file","target","files","window","URL","createObjectURL","uploadImage","ImageUploadCansel","undefined","bg","required","maxLength","type","pattern","value","message","isValid","isSubmitting","opacity"],"mappings":"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","sourcesContent":["import { IconButton, Box, Button, Divider, Flex, FormControl, FormErrorMessage, FormLabel, Heading, Input, VStack, Image, Center } from \"@chakra-ui/react\"\nimport { VFC, useState, useCallback, ChangeEvent } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { MdPhotoCamera, MdCancel } from \"react-icons/md\";\nimport { BeatLoader } from \"react-spinners\"\nimport { useRecoilState } from \"recoil\";\nimport imageCompression from \"browser-image-compression\";\n\nimport { CurrentUser } from \"store/auth/Auth\";\nimport { UserProfileUpdate } from \"types/form/FormInputs\"\nimport { getCurrentUser, updateUserProfile } from \"lib/api/auth/auth\";\nimport { useMessage } from \"customHooks/message/useMessage\";\n\nconst UserProfile: VFC = () => {\n    const defaultSrc =　\"https://www.pngkit.com/png/full/301-3012694_account-user-profile-avatar-comments-fa-user-circle.png\";\n    const [ currentUser, setCurrentUser ] = useRecoilState(CurrentUser)\n    const [ preview, setPreview ] = useState<string>('')\n    const [ image, setImage ] = useState<File>()\n    const { showMessage } = useMessage()\n\n    const { register, formState: { errors }, handleSubmit, formState } = useForm<UserProfileUpdate>({\n        mode: 'all',\n        defaultValues: {\n            name: currentUser?.name,\n            email: currentUser?.email,\n          }\n    })\n\n    const handleUpdateProfile = async(data: UserProfileUpdate) => {\n        const { name, email, password } = data\n\n        const formData = new FormData()\n        formData.append(\"user[name]\", name)\n        formData.append(\"user[email]\", email)\n\n        //画像ファイルがあれば実行\n        if(image) {\n            //ファイル圧縮オプション 3MB以下\n            const compressOptions = {\n                maxSizeMB: 3,\n            }\n    \n            const imageData = await imageCompression(image, compressOptions)\n            formData.append(\"user[image]\", imageData)\n        }\n        console.log(formData.get('user[name]'), formData.get('user[email]'), formData.get('user[image]'))\n        console.log(image)\n\n        try {            \n            const user = {\n                name: formData.get('user[name]'),\n                email: formData.get('user[email]'),\n                image: formData.get('user[image]')\n            }\n            console.log('更新処理開始')\n            const res = await updateUserProfile(user)\n            console.log('更新失敗')\n            if (res.status === 200) {\n                const res = await getCurrentUser()\n                setCurrentUser(res?.data.data)\n                showMessage({title: 'プロフィールを更新しました。', status: 'success'})\n            } else {\n                console.log('422')\n                showMessage({title: 'プロフィールの更新に失敗しました。', status: 'error'})\n            }\n        } catch (error) {\n            console.log(error)\n            showMessage({title: 'プロフィールの更新に失敗しました。', status: 'error'})\n        }\n    }\n\n    // プレビュー機能\n    const previewImage = useCallback((e) => {\n        const file = e.target.files[0]\n        setPreview(window.URL.createObjectURL(file))\n    }, [])\n\n    // アップロード\n    const uploadImage = useCallback((e) => {\n        const file = e.target.files[0]\n        setImage(file)\n    }, [])\n\n    // アップロードキャンセル\n    const ImageUploadCansel = useCallback(() => {\n        setPreview('')\n        setImage(undefined)\n    }, [])\n\n    return (\n        <>\n            <Flex justify='center' align='center' h='100%' mt='90px'>\n                <Box bg='white' w='2xl' p={4} borderRadius='10px' shadow='md'>\n                    <Heading as='h1' size='lg' textAlign='center'>プロフィール編集</Heading>\n                    <Divider my={4}/>\n                    <form onSubmit={handleSubmit(handleUpdateProfile)}>\n                        <VStack spacing={5}>\n                            <FormControl id='image' mb='20px'>\n                                <Center>\n                                    <Flex flexDirection='column' align='center' justify='center' position='relative'>\n                                        <Box position='absolute' top='0' left='10px' cursor='pointer' _hover={{bg: 'none'}} onClick={ImageUploadCansel}>\n                                            <MdCancel size='25px'/>\n                                        </Box>\n                                        <Box w='200px' h='200px' borderRadius='999px' mb='20px'>\n                                            <Image src={preview ? preview : defaultSrc} alt=\"preview img\" w='200px' h='200px' objectFit='cover' borderRadius='999px'/>\n                                        </Box>\n                                        <FormLabel htmlFor=\"avatar\">\n                                            <Input\n                                                display=\"none\"\n                                                type=\"file\"\n                                                id=\"avatar\"\n                                                name=\"image\"\n                                                accept=\"image/*\"\n                                                onChange={(e: ChangeEvent<HTMLInputElement>) => {\n                                                    uploadImage(e)\n                                                    previewImage(e)\n                                                }}\n                                            />\n                                            {/* <IconButton as='span' id=\"avatar\" cursor='pointer' aria-label='upload picture'>\n                                                <MdPhotoCamera size='30px'/>\n                                            </IconButton> */}\n                                            <Button leftIcon={<MdPhotoCamera size='25px'/>} as='span' cursor='pointer' colorScheme=\"teal\" variant=\"solid\">\n                                                画像をアップロード\n                                            </Button>\n                                        </FormLabel>\n                                    </Flex>\n                                </Center>\n                            </FormControl>\n                            <FormControl id='name' isRequired isInvalid={errors.name ? true : false}>\n                                <FormLabel>ユーザーネーム</FormLabel>\n                                <Input \n                                    type='text'\n                                    {...register('name', {required: true, maxLength: 10})}\n                                />\n                                <FormErrorMessage>\n                                    {errors.name?.type === 'required' && 'ユーザーネームは必須です。' }\n                                    {errors.name?.type === 'maxLength' && 'ユーザーネームは10文字以内で設定してください。' }\n                                </FormErrorMessage>\n                            </FormControl>\n                            <FormControl id='email' isRequired isInvalid={errors.email ? true : false}>\n                                <FormLabel>メールアドレス</FormLabel>\n                                <Input \n                                    type='email'\n                                    // name='email' \n                                    placeholder='test@example.com' \n                                    {...register('email', { required: 'メールアドレスは必須です。', pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"メールアドレス形式で入力してください。\"}, })}\n                                />\n                                <FormErrorMessage>\n                                    {errors.email && errors.email.message}\n                                </FormErrorMessage>\n                            </FormControl>\n                            {/* <FormControl id='password' isRequired isInvalid={errors.password ? true : false}>\n                                <FormLabel>パスワード</FormLabel>\n                                <Input \n                                    type='password' \n                                    // name='password'\n                                    {...register('password', {required: 'パスワードは必須です。'})}\n                                />\n                                <FormErrorMessage>\n                                    {errors.password && errors.password.message}\n                                </FormErrorMessage>\n                            </FormControl> */}\n                            <Button type=\"submit\" disabled={!formState.isValid} isLoading={formState.isSubmitting} w='100%' color='white' bg='blue.400' _hover={{opacity: 0.8}} spinner={<BeatLoader size={8} color=\"white\" />}>更新</Button>\n                        </VStack>\n                    </form>\n                </Box>\n            </Flex>\n        </>\n    )\n}\n\nexport default UserProfile"]},"metadata":{},"sourceType":"module"}