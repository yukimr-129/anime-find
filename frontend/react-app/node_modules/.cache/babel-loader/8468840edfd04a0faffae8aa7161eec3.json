{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { client } from \"../lib/api/client\";\nimport { useRecoilState } from 'recoil';\nimport { ApiKeyValue } from '../store/ApiKeyValue';\nimport { useMessage } from './message/useMessage';\nexport const useAnimeApiSearch = () => {\n  _s();\n\n  // const selectYear = useRecoilValue(Year)\n  // const selectCour = useRecoilValue(Cour)\n  const [apiKeyValue, setApiKeyValue] = useRecoilState(ApiKeyValue);\n  const {\n    showMessage\n  } = useMessage(); // const { current_season } = useCourFactory()\n\n  const testData = 'Hello';\n  useEffect(() => {\n    try {\n      const getAnimes = async () => {\n        const getanime = await client.get('/annicts/response', {\n          params: {\n            year: apiKeyValue.year,\n            cour: apiKeyValue.cour\n          }\n        });\n      };\n\n      console.log(getAnimes);\n    } catch (error) {\n      showMessage({\n        title: 'アニメ一覧の取得に失敗しました',\n        status: \"error\"\n      });\n    }\n\n    return () => {};\n  }, [apiKeyValue]);\n  return {\n    testData\n  };\n};\n\n_s(useAnimeApiSearch, \"iyHvwnPZcl8WEXEnm/A6xan3HGY=\", false, function () {\n  return [useRecoilState, useMessage];\n});","map":{"version":3,"sources":["/usr/src/app/react-app/src/customHooks/useAnimeApiSearch.ts"],"names":["useEffect","client","useRecoilState","ApiKeyValue","useMessage","useAnimeApiSearch","apiKeyValue","setApiKeyValue","showMessage","testData","getAnimes","getanime","get","params","year","cour","console","log","error","title","status"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,SAASC,MAAT,QAAuB,mBAAvB;AAGA,SAASC,cAAT,QAA+C,QAA/C;AAGA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AACnC;AACA;AACA,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCL,cAAc,CAACC,WAAD,CAAtD;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAkBJ,UAAU,EAAlC,CAJmC,CAKnC;;AACA,QAAMK,QAAQ,GAAG,OAAjB;AACAT,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAI;AACA,YAAMU,SAAS,GAAG,YAAW;AACzB,cAAMC,QAAQ,GAAG,MAAMV,MAAM,CAACW,GAAP,CAAW,mBAAX,EAAgC;AACnDC,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAER,WAAW,CAACQ,IADd;AAEJC,YAAAA,IAAI,EAAET,WAAW,CAACS;AAFd;AAD2C,SAAhC,CAAvB;AAMH,OAPD;;AAQAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AAEH,KAXD,CAWE,OAAOQ,KAAP,EAAc;AACZV,MAAAA,WAAW,CAAC;AAACW,QAAAA,KAAK,EAAE,iBAAR;AAA2BC,QAAAA,MAAM,EAAE;AAAnC,OAAD,CAAX;AACH;;AAED,WAAO,MAAM,CACZ,CADD;AAEH,GAnBQ,EAmBN,CAACd,WAAD,CAnBM,CAAT;AAsBA,SAAO;AAAEG,IAAAA;AAAF,GAAP;AACH,CA9BM;;GAAMJ,iB;UAG+BH,c,EAChBE,U","sourcesContent":["import { useEffect } from 'react'\nimport axios from \"axios\"\nimport { client } from \"../lib/api/client\"\nimport { useCourFactory } from './useCourFactory'\nimport { useYearFactory } from './useYearFactory'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { Year } from '../store/Year'\nimport { Cour } from '../store/Cour'\nimport { ApiKeyValue } from '../store/ApiKeyValue'\nimport { useMessage } from './message/useMessage'\n\nexport const useAnimeApiSearch = () => {\n    // const selectYear = useRecoilValue(Year)\n    // const selectCour = useRecoilValue(Cour)\n    const [ apiKeyValue, setApiKeyValue ] = useRecoilState(ApiKeyValue)\n    const { showMessage } = useMessage()\n    // const { current_season } = useCourFactory()\n    const testData = 'Hello'\n    useEffect(() => {\n\n        try {\n            const getAnimes = async() => {\n                const getanime = await client.get('/annicts/response', {\n                    params: {\n                        year: apiKeyValue.year,\n                        cour: apiKeyValue.cour\n                    }\n                })\n            }\n            console.log(getAnimes);\n            \n        } catch (error) {\n            showMessage({title: 'アニメ一覧の取得に失敗しました', status: \"error\"})\n        }\n\n        return () => {\n        }    \n    }, [apiKeyValue])    \n\n\n    return { testData }\n}"]},"metadata":{},"sourceType":"module"}