{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-app/src/components/atoms/button/PraimaryButton.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from '@chakra-ui/button';\nimport { SearchIcon } from '@chakra-ui/icons';\nimport { Text } from '@chakra-ui/layout';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PraimaryButton = props => {\n  _s();\n\n  // const { onClickAnimeSearch } = props\n  const [apiKeyValue, setApiKeyValue] = useRecoilState(ApiKeyValue);\n  const selectYear = useRecoilValue(Year);\n  const selectCour = useRecoilValue(Cour);\n  const {\n    select_season\n  } = useCourFactory();\n  const {\n    testData\n  } = useAnimeApiSearch();\n  const onClickAnimeSearch = useCallback(() => {\n    const rep = {\n      year: selectYear,\n      cour: select_season\n    };\n    setApiKeyValue(rep);\n    console.log(selectYear);\n    console.log(select_season);\n  }, [selectYear, select_season]);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: onClickAnimeSearch,\n    leftIcon: /*#__PURE__*/_jsxDEV(SearchIcon, {\n      color: \"white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 56\n    }, this),\n    iconSpacing: \"5px\",\n    colorScheme: \"pink\",\n    variant: \"solid\",\n    _hover: {\n      opacity: 0.7\n    },\n    children: /*#__PURE__*/_jsxDEV(Text, {\n      as: \"p\",\n      lineHeight: \"40px\",\n      children: \"\\u30A2\\u30CB\\u30E1\\u3092\\u691C\\u7D22\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PraimaryButton, \"snw82CaY6DewM6bj05ovJNAJgNI=\", true);\n\n_c = PraimaryButton;\nexport default PraimaryButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"PraimaryButton\");","map":{"version":3,"sources":["/usr/src/app/react-app/src/components/atoms/button/PraimaryButton.tsx"],"names":["Button","SearchIcon","Text","React","PraimaryButton","props","apiKeyValue","setApiKeyValue","useRecoilState","ApiKeyValue","selectYear","useRecoilValue","Year","selectCour","Cour","select_season","useCourFactory","testData","useAnimeApiSearch","onClickAnimeSearch","useCallback","rep","year","cour","console","log","opacity"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,KAAP,MAAiC,OAAjC;;;AAMA,MAAMC,cAA0B,GAAIC,KAAD,IAAW;AAAA;;AAC1C;AACA,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAiCC,cAAc,CAACC,WAAD,CAArD;AACA,QAAMC,UAAU,GAAGC,cAAc,CAACC,IAAD,CAAjC;AACA,QAAMC,UAAU,GAAGF,cAAc,CAACG,IAAD,CAAjC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAoBC,cAAc,EAAxC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeC,iBAAiB,EAAtC;AAEA,QAAMC,kBAAkB,GAAGC,WAAW,CAAC,MAAM;AACzC,UAAMC,GAAG,GAAG;AAACC,MAAAA,IAAI,EAAEZ,UAAP;AAAmBa,MAAAA,IAAI,EAAER;AAAzB,KAAZ;AACAR,IAAAA,cAAc,CAACc,GAAD,CAAd;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAYf,UAAZ;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYV,aAAZ;AACH,GANqC,EAMnC,CAACL,UAAD,EAAaK,aAAb,CANmC,CAAtC;AAOA,sBACI,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEI,kBAAjB;AAAqC,IAAA,QAAQ,eAAE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YAA/C;AAA6E,IAAA,WAAW,EAAC,KAAzF;AAA+F,IAAA,WAAW,EAAC,MAA3G;AAAkH,IAAA,OAAO,EAAC,OAA1H;AAAkI,IAAA,MAAM,EAAE;AAACO,MAAAA,OAAO,EAAE;AAAV,KAA1I;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,UAAU,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAtBD;;GAAMtB,c;;KAAAA,c;AAwBN,eAAeA,cAAf","sourcesContent":["import { Button } from '@chakra-ui/button'\nimport { SearchIcon } from '@chakra-ui/icons'\nimport { Text } from '@chakra-ui/layout';\nimport React, { memo, VFC } from 'react'\n\ntype Props = {\n    onClickAnimeSearch: () => void\n}\n\nconst PraimaryButton: VFC<Props> = (props) => {\n    // const { onClickAnimeSearch } = props\n    const [ apiKeyValue, setApiKeyValue] = useRecoilState(ApiKeyValue)\n    const selectYear = useRecoilValue(Year)\n    const selectCour = useRecoilValue(Cour)\n    const { select_season } = useCourFactory()\n    const { testData } = useAnimeApiSearch()\n\n    const onClickAnimeSearch = useCallback(() => {\n        const rep = {year: selectYear, cour: select_season}\n        setApiKeyValue(rep)  \n        \n        console.log(selectYear);          \n        console.log(select_season);          \n    }, [selectYear, select_season])\n    return (\n        <Button onClick={onClickAnimeSearch} leftIcon={<SearchIcon color=\"white\" />} iconSpacing='5px' colorScheme=\"pink\" variant=\"solid\" _hover={{opacity: 0.7}}>\n            <Text as='p' lineHeight='40px'>\n                アニメを検索\n            </Text>\n        </Button>\n    )\n}\n\nexport default PraimaryButton"]},"metadata":{},"sourceType":"module"}