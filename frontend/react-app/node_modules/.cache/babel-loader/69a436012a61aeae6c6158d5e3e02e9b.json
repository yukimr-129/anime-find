{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-app/src/index.tsx\";\nimport { ChakraProvider } from '@chakra-ui/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { RecoilRoot, myLookupOfAtomWithKey } from 'recoil';\nimport App from './App';\nimport theme from './defaultStyle/theme';\nimport reportWebVitals from './reportWebVitals';\nimport RecoilStatePersist from './RecoilStatePersist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst initializeState = ({\n  set\n}) => {\n  for (const [key, value] of Storage.entries()) {\n    set(myLookupOfAtomWithKey(key), JSON.parse(value).value);\n  }\n};\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(RecoilRoot, {\n      initializeState: initializeState,\n      children: [/*#__PURE__*/_jsxDEV(RecoilStatePersist, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChakraProvider, {\n        theme: theme,\n        children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/usr/src/app/react-app/src/index.tsx"],"names":["ChakraProvider","React","ReactDOM","BrowserRouter","RecoilRoot","myLookupOfAtomWithKey","App","theme","reportWebVitals","RecoilStatePersist","initializeState","set","key","value","Storage","entries","JSON","parse","render","document","getElementById"],"mappings":";AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,UAAT,EAAqBC,qBAArB,QAAkD,QAAlD;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAW;AACjC,OAAI,MAAM,CAACC,GAAD,EAAMC,KAAN,CAAV,IAA0BC,OAAO,CAACC,OAAR,EAA1B,EAA6C;AAC3CJ,IAAAA,GAAG,CAACN,qBAAqB,CAACO,GAAD,CAAtB,EAA6BI,IAAI,CAACC,KAAL,CAAWJ,KAAX,EAAkBA,KAA/C,CAAH;AACD;AACF,CAJD;;AAMAX,QAAQ,CAACgB,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,aAAD;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,eAAe,EAAER,eAA7B;AAAA,8BACE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAEH,KAAvB;AAAA,+BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAWEY,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAXF,E,CAcA;AACA;AACA;;AACAZ,eAAe","sourcesContent":["import { ChakraProvider } from '@chakra-ui/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { RecoilRoot, myLookupOfAtomWithKey } from 'recoil';\nimport App from './App';\nimport theme from './defaultStyle/theme';\nimport reportWebVitals from './reportWebVitals';\nimport RecoilStatePersist from './RecoilStatePersist';\n\nconst initializeState = ({set}) => {\n  for(const [key, value] of Storage.entries()) {\n    set(myLookupOfAtomWithKey(key), JSON.parse(value).value);\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <RecoilRoot initializeState={initializeState}>\n        <RecoilStatePersist />\n        <ChakraProvider theme={theme}>\n          <App />\n        </ChakraProvider>\n      </RecoilRoot>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}