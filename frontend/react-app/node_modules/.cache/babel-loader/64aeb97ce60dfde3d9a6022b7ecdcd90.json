{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-app/src/components/molecules/reviewModal/ReviewModal.tsx\",\n    _s = $RefreshSig$();\n\nimport { EditIcon } from \"@chakra-ui/icons\";\nimport { Box, Button, Text, FormControl, FormLabel, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Textarea, useDisclosure, VStack, FormErrorMessage } from \"@chakra-ui/react\";\nimport { memo, useRef, useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { BeatLoader } from \"react-spinners\";\nimport ReactStars from 'react-stars';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ReviewModal = /*#__PURE__*/memo(_c = _s(props => {\n  _s();\n\n  const {\n    id\n  } = props;\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const initialRef = useRef(null);\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    formState\n  } = useForm({\n    mode: 'all',\n    defaultValues: {\n      comment: ''\n    }\n  }); //レビュー初期値\n\n  const [rating, setRating] = useState(0);\n\n  const getRating = rate => {\n    setRating(rate);\n  }; //レビュー送信\n\n\n  const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n  const onSubmitReview = data => {\n    sleep(10);\n  }; //モーダルを閉じた場合、評価を初期化\n\n\n  useEffect(() => {\n    return () => {\n      setRating(0);\n    };\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      pl: 0,\n      size: \"xs\",\n      leftIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 48\n      }, this),\n      variant: \"none\",\n      onClick: onOpen,\n      children: \"\\u30EC\\u30D3\\u30E5\\u30FC\\u3092\\u66F8\\u304F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      initialFocusRef: initialRef,\n      isOpen: isOpen,\n      onClose: onClose,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"\\u30A2\\u30CB\\u30E1\\u30EC\\u30D3\\u30E5\\u30FC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          pb: 6,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(VStack, {\n              align: \"left\",\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                children: \"\\u30EC\\u30D3\\u30E5\\u30FC\\u8A55\\u4FA1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(ReactStars, {\n                value: rating,\n                size: 30,\n                half: false,\n                onChange: getRating\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onSubmitReview),\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              mt: 4,\n              id: \"reviewArea\",\n              isRequired: true,\n              isInvalid: errors.comment ? true : false,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"\\u30EC\\u30D3\\u30E5\\u30FC\\u30B3\\u30E1\\u30F3\\u30C8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Textarea // name='reviewArea'\n              , { ...register('comment', {\n                  required: 'レビューコメントを入力してください',\n                  maxLength: {\n                    value: 500,\n                    message: '500文字以下で入力してください'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                children: errors.comment && errors.comment.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            colorScheme: \"blue\",\n            size: 8,\n            mr: 3,\n            disabled: !formState.isValid,\n            isLoading: formState.isSubmitting,\n            spinner: /*#__PURE__*/_jsxDEV(BeatLoader, {\n              size: 8,\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 152\n            }, this),\n            _hover: {\n              opacity: 0.8\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}, \"EomSAm7Kz/uUS8ZSqGWzlrWI7HI=\", false, function () {\n  return [useDisclosure, useForm];\n}));\n_c2 = ReviewModal;\nexport default ReviewModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReviewModal$memo\");\n$RefreshReg$(_c2, \"ReviewModal\");","map":{"version":3,"sources":["/usr/src/app/react-app/src/components/molecules/reviewModal/ReviewModal.tsx"],"names":["EditIcon","Box","Button","Text","FormControl","FormLabel","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","Textarea","useDisclosure","VStack","FormErrorMessage","memo","useRef","useState","useEffect","useForm","BeatLoader","ReactStars","ReviewModal","props","id","isOpen","onOpen","onClose","initialRef","register","formState","errors","handleSubmit","mode","defaultValues","comment","rating","setRating","getRating","rate","sleep","ms","Promise","resolve","setTimeout","onSubmitReview","data","required","maxLength","value","message","isValid","isSubmitting","opacity"],"mappings":"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","sourcesContent":["import { EditIcon } from \"@chakra-ui/icons\";\nimport { Box, Button, Text, FormControl, FormLabel, Input, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Textarea, useDisclosure, VStack, FormErrorMessage } from \"@chakra-ui/react\";\nimport { memo, useRef, useState, VFC, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { BeatLoader } from \"react-spinners\";\nimport ReactStars from 'react-stars'\n\nimport { Submitreview } from \"types/form/FormInputs\";\n\ntype  Props = {\n    id: number\n}\n\nconst ReviewModal: VFC<Props> = memo((props) => {\n    const { id } = props\n    const { isOpen, onOpen, onClose } = useDisclosure()\n    const initialRef = useRef<HTMLInputElement>(null)\n    const { register,  formState: { errors }, handleSubmit, formState } = useForm<Submitreview>({\n        mode: 'all',\n        defaultValues: {\n            comment: '',\n        }\n    })\n\n    //レビュー初期値\n    const [ rating, setRating ] = useState(0)\n    const getRating = (rate: number) => {        \n        setRating(rate)       \n    }\n\n    //レビュー送信\n    const sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n    const onSubmitReview = (data: Submitreview) => {\n        sleep(10)\n    }\n    \n    //モーダルを閉じた場合、評価を初期化\n    useEffect(() => {\n    \n        return () => {\n            setRating(0)\n        }\n    }, [isOpen])\n\n    return (\n        <>\n            <Button pl={0} size='xs' leftIcon={<EditIcon />} variant='none' onClick={onOpen}>レビューを書く</Button>\n\n            <Modal\n                initialFocusRef={initialRef}\n                isOpen={isOpen}\n                onClose={onClose}\n            >\n                <ModalOverlay />\n                <ModalContent>\n                <ModalHeader>アニメレビュー</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody pb={6}>\n                    <Box>\n                        <VStack align='left'>\n                            <Text>レビュー評価</Text>\n                            <ReactStars value={rating} size={30} half={false} onChange={getRating}/>\n                        </VStack>\n                    </Box>\n                    {/* <FormControl>\n                        <FormLabel>レビュー評価</FormLabel>\n                    </FormControl> */}\n                    <form onSubmit={handleSubmit(onSubmitReview)}>\n                        <FormControl mt={4} id='reviewArea' isRequired isInvalid={errors.comment ? true : false}>\n                            <FormLabel>レビューコメント</FormLabel>\n                            <Textarea \n                                // name='reviewArea'\n                                {...register('comment', {required: 'レビューコメントを入力してください', maxLength: {value: 500, message: '500文字以下で入力してください'}})}\n                            />\n                            <FormErrorMessage>\n                                {errors.comment && errors.comment.message}\n                            </FormErrorMessage>\n                        </FormControl>\n                    </form>\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button type='submit' colorScheme='blue' size={8}　mr={3} disabled={!formState.isValid} isLoading={formState.isSubmitting}　spinner={<BeatLoader size={8} color=\"white\" />}　_hover={{opacity: 0.8}}>\n                        Save\n                    </Button>\n                    <Button onClick={onClose}>Cancel</Button>\n                </ModalFooter>\n                </ModalContent>\n            </Modal>\n        </>\n    )\n})\n\nexport default ReviewModal"]},"metadata":{},"sourceType":"module"}