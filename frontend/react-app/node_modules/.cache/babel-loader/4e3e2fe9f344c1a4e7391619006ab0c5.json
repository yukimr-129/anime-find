{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { client } from \"../lib/api/client\";\nimport { useCourFactory } from './useCourFactory';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { Year } from '../store/Year';\nimport { Cour } from '../store/Cour';\nimport { ApiKeyValue } from '../store/ApiKeyValue';\nimport { useMessage } from './message/useMessage';\nexport const useAnimeApiSearch = () => {\n  _s();\n\n  const selectYear = useRecoilValue(Year);\n  const selectCour = useRecoilValue(Cour);\n  const [apiKeyValue, setApiKeyValue] = useRecoilState(ApiKeyValue);\n  const {\n    showMessage\n  } = useMessage();\n  const {\n    current_season\n  } = useCourFactory();\n  const testData = 'Hello';\n  useEffect(() => {\n    const getAnimes = async () => {\n      try {\n        const filter_season = `${apiKeyValue.year}-${apiKeyValue.cour}`;\n        const getanime = await client.get('/api/annicts/search', {\n          params: {\n            filter_season\n          }\n        });\n        console.log(getanime);\n      } catch (error) {\n        showMessage({\n          title: 'アニメ一覧の取得に失敗しました',\n          status: \"error\"\n        });\n      }\n    }; //  getAnimes(selectYear, current_season)\n    // return () => {\n    // }    \n\n  }, [apiKeyValue]);\n  return {\n    getAnimes\n  };\n};\n\n_s(useAnimeApiSearch, \"TEEUmP/feqN5NjMZ4HwlCAY7v/w=\", false, function () {\n  return [useRecoilValue, useRecoilValue, useRecoilState, useMessage, useCourFactory];\n});","map":{"version":3,"sources":["/usr/src/app/react-app/src/customHooks/useAnimeApiSearch.ts"],"names":["useEffect","client","useCourFactory","useRecoilState","useRecoilValue","Year","Cour","ApiKeyValue","useMessage","useAnimeApiSearch","selectYear","selectCour","apiKeyValue","setApiKeyValue","showMessage","current_season","testData","getAnimes","filter_season","year","cour","getanime","get","params","console","log","error","title","status"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,QAA/C;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AACnC,QAAMC,UAAU,GAAGN,cAAc,CAACC,IAAD,CAAjC;AACA,QAAMM,UAAU,GAAGP,cAAc,CAACE,IAAD,CAAjC;AACA,QAAM,CAAEM,WAAF,EAAeC,cAAf,IAAkCV,cAAc,CAACI,WAAD,CAAtD;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAkBN,UAAU,EAAlC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAqBb,cAAc,EAAzC;AACA,QAAMc,QAAQ,GAAG,OAAjB;AACAhB,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMiB,SAAS,GAAG,YAAW;AACzB,UAAI;AACA,cAAMC,aAAa,GAAI,GAAEN,WAAW,CAACO,IAAK,IAAGP,WAAW,CAACQ,IAAK,EAA9D;AACA,cAAMC,QAAQ,GAAG,MAAMpB,MAAM,CAACqB,GAAP,CAAW,qBAAX,EAAkC;AACrDC,UAAAA,MAAM,EAAE;AACJL,YAAAA;AADI;AAD6C,SAAlC,CAAvB;AAKAM,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AAEH,OATD,CASE,OAAOK,KAAP,EAAc;AACZZ,QAAAA,WAAW,CAAC;AAACa,UAAAA,KAAK,EAAE,iBAAR;AAA2BC,UAAAA,MAAM,EAAE;AAAnC,SAAD,CAAX;AACH;AACH,KAbF,CAFY,CAgBZ;AAEA;AACA;;AACH,GApBQ,EAoBN,CAAChB,WAAD,CApBM,CAAT;AAuBA,SAAO;AAAEK,IAAAA;AAAF,GAAP;AACH,CA/BM;;GAAMR,iB;UACUL,c,EACAA,c,EACqBD,c,EAChBK,U,EACGN,c","sourcesContent":["import { useEffect } from 'react'\nimport axios from \"axios\"\nimport { client } from \"../lib/api/client\"\nimport { useCourFactory } from './useCourFactory'\nimport { useYearFactory } from './useYearFactory'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { Year } from '../store/Year'\nimport { Cour } from '../store/Cour'\nimport { ApiKeyValue } from '../store/ApiKeyValue'\nimport { useMessage } from './message/useMessage'\n\nexport const useAnimeApiSearch = () => {\n    const selectYear = useRecoilValue(Year)\n    const selectCour = useRecoilValue(Cour)\n    const [ apiKeyValue, setApiKeyValue ] = useRecoilState(ApiKeyValue)\n    const { showMessage } = useMessage()\n    const { current_season } = useCourFactory()\n    const testData = 'Hello'\n    useEffect(() => {\n\n        const getAnimes = async() => {\n            try {\n                const filter_season = `${apiKeyValue.year}-${apiKeyValue.cour}`\n                const getanime = await client.get('/api/annicts/search', {\n                    params: {\n                        filter_season,\n                    }\n                })\n                console.log(getanime);\n            \n            } catch (error) {\n                showMessage({title: 'アニメ一覧の取得に失敗しました', status: \"error\"})\n            }\n         }\n        //  getAnimes(selectYear, current_season)\n\n        // return () => {\n        // }    \n    }, [apiKeyValue])    \n\n\n    return { getAnimes }\n}"]},"metadata":{},"sourceType":"module"}