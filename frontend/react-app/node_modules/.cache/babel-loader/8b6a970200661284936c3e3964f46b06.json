{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-app/src/components/pages/auth/UserProfile.tsx\",\n    _s = $RefreshSig$();\n\nimport { IconButton, Box, Button, Divider, Flex, FormControl, FormErrorMessage, FormLabel, Heading, Input, VStack } from \"@chakra-ui/react\";\nimport { useForm } from \"react-hook-form\";\nimport { MdPhotoCamera } from \"react-icons/md\";\nimport { BeatLoader } from \"react-spinners\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserProfile = () => {\n  _s();\n\n  var _errors$name, _errors$name2;\n\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    formState\n  } = useForm({\n    mode: 'all',\n    defaultValues: {\n      name: '',\n      email: ''\n    }\n  });\n\n  const handleUpdateProfile = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      justify: \"center\",\n      align: \"center\",\n      h: \"100%\",\n      mt: \"90px\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        bg: \"white\",\n        w: \"2xl\",\n        p: 4,\n        borderRadius: \"10px\",\n        shadow: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h1\",\n          size: \"lg\",\n          textAlign: \"center\",\n          children: \"\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u7DE8\\u96C6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          my: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(handleUpdateProfile),\n          children: /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 5,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"avatar\",\n              color: \"link\",\n              whiteSpace: \"nowrap\",\n              border: \"1px\",\n              borderColor: \"link\",\n              borderRadius: \"999px\",\n              display: \"inline-block\",\n              padding: \"7px\",\n              height: \"200px\",\n              width: \"200px\",\n              cursor: \"pointer\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                display: \"none\",\n                type: \"file\",\n                id: \"avatar\",\n                name: \"avatar\",\n                placeholder: \"\\u30D8\\u30C3\\u30C0\\u30FC\",\n                accept: \"image/*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                id: \"avatar\",\n                \"aria-label\": \"upload picture\",\n                children: /*#__PURE__*/_jsxDEV(MdPhotoCamera, {\n                  size: \"30px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              id: \"name\",\n              isRequired: true,\n              isInvalid: errors.name ? true : false,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u30CD\\u30FC\\u30E0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                ...register('name', {\n                  required: true,\n                  maxLength: 10\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                children: [((_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.type) === 'required' && 'ユーザーネームは必須です。', ((_errors$name2 = errors.name) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.type) === 'maxLength' && 'ユーザーネームは10文字以内で設定してください。']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              id: \"email\",\n              isRequired: true,\n              isInvalid: errors.email ? true : false,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"email\" // name='email' \n                ,\n                placeholder: \"test@example.com\",\n                ...register('email', {\n                  required: 'メールアドレスは必須です。',\n                  pattern: {\n                    value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                    message: \"メールアドレス形式で入力してください。\"\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                children: errors.email && errors.email.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              disabled: !formState.isValid,\n              isLoading: formState.isSubmitting,\n              w: \"100%\",\n              color: \"white\",\n              bg: \"blue.400\",\n              _hover: {\n                opacity: 0.8\n              },\n              spinner: /*#__PURE__*/_jsxDEV(BeatLoader, {\n                size: 8,\n                color: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 186\n              }, this),\n              children: \"\\u66F4\\u65B0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(UserProfile, \"TiZ76tct4yXAOi2D2ASdWxp8NPw=\", false, function () {\n  return [useForm];\n});\n\n_c = UserProfile;\nexport default UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["/usr/src/app/react-app/src/components/pages/auth/UserProfile.tsx"],"names":["IconButton","Box","Button","Divider","Flex","FormControl","FormErrorMessage","FormLabel","Heading","Input","VStack","useForm","MdPhotoCamera","BeatLoader","UserProfile","register","formState","errors","handleSubmit","mode","defaultValues","name","email","handleUpdateProfile","required","maxLength","type","pattern","value","message","isValid","isSubmitting","opacity"],"mappings":"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","sourcesContent":["import { IconButton, Box, Button, Divider, Flex, FormControl, FormErrorMessage, FormLabel, Heading, Input, VStack } from \"@chakra-ui/react\"\nimport { VFC } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { MdPhotoCamera } from \"react-icons/md\";\nimport { BeatLoader } from \"react-spinners\"\nimport { UserProfileUpdate } from \"types/form/FormInputs\"\n\nconst UserProfile: VFC = () => {\n    const { register, formState: { errors }, handleSubmit, formState } = useForm<UserProfileUpdate>({\n        mode: 'all',\n        defaultValues: {\n            name: '',\n            email: '',\n          }\n    })\n\n    const handleUpdateProfile = () => {\n\n    }\n\n    return (\n        <>\n            <Flex justify='center' align='center' h='100%' mt='90px'>\n                <Box bg='white' w='2xl' p={4} borderRadius='10px' shadow='md'>\n                    <Heading as='h1' size='lg' textAlign='center'>プロフィール編集</Heading>\n                    <Divider my={4}/>\n                    <form onSubmit={handleSubmit(handleUpdateProfile)}>\n                        <VStack spacing={5}>\n                            <FormLabel\n                                htmlFor=\"avatar\"\n                                color=\"link\"\n                                whiteSpace=\"nowrap\"\n                                border=\"1px\"\n                                borderColor=\"link\"\n                                borderRadius=\"999px\"\n                                display=\"inline-block\"\n                                padding=\"7px\"\n                                height=\"200px\"\n                                width=\"200px\"\n                                cursor=\"pointer\"\n                                >\n                                <Input\n                                    display=\"none\"\n                                    type=\"file\"\n                                    id=\"avatar\"\n                                    name=\"avatar\"\n                                    placeholder=\"ヘッダー\"\n                                    accept=\"image/*\"\n                                />\n                                <IconButton id=\"avatar\" aria-label='upload picture'>\n                                    <MdPhotoCamera size='30px'/>\n                                </IconButton>\n                            </FormLabel>\n                            <FormControl id='name' isRequired isInvalid={errors.name ? true : false}>\n                                <FormLabel>ユーザーネーム</FormLabel>\n                                <Input \n                                    type='text'\n                                    {...register('name', {required: true, maxLength: 10})}\n                                />\n                                <FormErrorMessage>\n                                    {errors.name?.type === 'required' && 'ユーザーネームは必須です。' }\n                                    {errors.name?.type === 'maxLength' && 'ユーザーネームは10文字以内で設定してください。' }\n                                </FormErrorMessage>\n                            </FormControl>\n                            <FormControl id='email' isRequired isInvalid={errors.email ? true : false}>\n                                <FormLabel>メールアドレス</FormLabel>\n                                <Input \n                                    type='email'\n                                    // name='email' \n                                    placeholder='test@example.com' \n                                    {...register('email', { required: 'メールアドレスは必須です。', pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"メールアドレス形式で入力してください。\"}, })}\n                                />\n                                <FormErrorMessage>\n                                    {errors.email && errors.email.message}\n                                </FormErrorMessage>\n                            </FormControl>\n                            {/* <FormControl id='password' isRequired isInvalid={errors.password ? true : false}>\n                                <FormLabel>パスワード</FormLabel>\n                                <Input \n                                    type='password' \n                                    // name='password'\n                                    {...register('password', {required: 'パスワードは必須です。'})}\n                                />\n                                <FormErrorMessage>\n                                    {errors.password && errors.password.message}\n                                </FormErrorMessage>\n                            </FormControl> */}\n                            <Button type=\"submit\" disabled={!formState.isValid} isLoading={formState.isSubmitting} w='100%' color='white' bg='blue.400' _hover={{opacity: 0.8}} spinner={<BeatLoader size={8} color=\"white\" />}>更新</Button>\n                        </VStack>\n                    </form>\n                </Box>\n            </Flex>\n        </>\n    )\n}\n\nexport default UserProfile"]},"metadata":{},"sourceType":"module"}