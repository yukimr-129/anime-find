{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-app/src/components/pages/favorites/FavoriteAnime.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Center, Text, Wrap, WrapItem } from \"@chakra-ui/react\";\nimport Cookies from \"js-cookie\";\nimport { client } from \"lib/api/client\";\nimport { useEffect } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { Loding } from \"store/loding/Loding\";\nimport { DefaultSpiner } from \"util/DefaultSpiner\";\nimport FavoriteAnimeCard from \"./FavoriteAnimeCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FavoriteAnime = () => {\n  _s();\n\n  const [loding, setLoding] = useRecoilState(Loding);\n  const [favoriteAnimeList, setFavoriteAnimeList] = useRecoilState(Fa);\n  useEffect(() => {\n    setLoding(true);\n\n    const getFavoriteAnime = async () => {\n      try {\n        const FavoriteAnime = await client.get('/favorites', {\n          headers: {\n            \"access-token\": Cookies.get(\"_access_token\"),\n            \"client\": Cookies.get(\"_client\"),\n            \"uid\": Cookies.get(\"_uid\")\n          }\n        });\n      } catch (error) {\n        throw error;\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      w: {\n        base: '98%',\n        md: '70%'\n      },\n      h: \"100vh\",\n      bg: \"#ffff\",\n      m: \"100px auto 20px auto\",\n      borderRadius: \"10px\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        justify: \"center\",\n        align: \"center\",\n        m: \"30px 10px 0\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontWeight: \"700\",\n          fontSize: \"1.17em\",\n          pt: \"30px\",\n          children: \"\\u30FC\\u3000\\u304A\\u6C17\\u306B\\u5165\\u308A\\u30A2\\u30CB\\u30E1\\u3000\\u30FC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), true ? /*#__PURE__*/_jsxDEV(Center, {\n        mt: \"100px\",\n        children: /*#__PURE__*/_jsxDEV(DefaultSpiner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Wrap, {\n        p: {\n          base: 3,\n          md: 4\n        },\n        w: \"100%\",\n        spacing: 5,\n        justify: \"center\",\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(WrapItem, {\n          children: /*#__PURE__*/_jsxDEV(FavoriteAnimeCard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(FavoriteAnime, \"hngDx+VLmrwZssWTf+a5UdIrxY8=\", false, function () {\n  return [useRecoilState, useRecoilState];\n});\n\n_c = FavoriteAnime;\nexport default FavoriteAnime;\n\nvar _c;\n\n$RefreshReg$(_c, \"FavoriteAnime\");","map":{"version":3,"sources":["/usr/src/app/react-app/src/components/pages/favorites/FavoriteAnime.tsx"],"names":["Box","Center","Text","Wrap","WrapItem","Cookies","client","useEffect","useRecoilState","Loding","DefaultSpiner","FavoriteAnimeCard","FavoriteAnime","loding","setLoding","favoriteAnimeList","setFavoriteAnimeList","Fa","getFavoriteAnime","get","headers","error","base","md"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,IAA5B,EAAkCC,QAAlC,QAAkD,kBAAlD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,SAAT,QAA+B,OAA/B;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;;;AAEA,MAAMC,aAAkB,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAAEC,MAAF,EAAUC,SAAV,IAAwBN,cAAc,CAACC,MAAD,CAA5C;AACA,QAAM,CAAEM,iBAAF,EAAqBC,oBAArB,IAA8CR,cAAc,CAACS,EAAD,CAAlE;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,SAAS,CAAC,IAAD,CAAT;;AACA,UAAMI,gBAAgB,GAAG,YAAW;AAChC,UAAI;AACA,cAAMN,aAAa,GAAG,MAAMN,MAAM,CAACa,GAAP,CAAW,YAAX,EAAyB;AAAEC,UAAAA,OAAO,EAAE;AAC5D,4BAAgBf,OAAO,CAACc,GAAR,CAAY,eAAZ,CAD4C;AAE5D,sBAAUd,OAAO,CAACc,GAAR,CAAY,SAAZ,CAFkD;AAG5D,mBAAOd,OAAO,CAACc,GAAR,CAAY,MAAZ;AAHqD;AAAX,SAAzB,CAA5B;AAMH,OAPD,CAOE,OAAOE,KAAP,EAAc;AACZ,cAAMA,KAAN;AACH;AACJ,KAXD;AAYH,GAdQ,EAcN,EAdM,CAAT;AAgBA,sBACI;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,CAAC,EAAE;AAACC,QAAAA,IAAI,EAAE,KAAP;AAAcC,QAAAA,EAAE,EAAE;AAAlB,OAAR;AAAkC,MAAA,CAAC,EAAC,OAApC;AAA4C,MAAA,EAAE,EAAC,OAA/C;AAAuD,MAAA,CAAC,EAAC,sBAAzD;AAAgF,MAAA,YAAY,EAAC,MAA7F;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,OAAO,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,QAA5B;AAAqC,QAAA,CAAC,EAAC,aAAvC;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,UAAU,EAAC,KAAjB;AAAuB,UAAA,QAAQ,EAAC,QAAhC;AAAyC,UAAA,EAAE,EAAC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAMK,oBACG,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,OAAX;AAAA,+BACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADH,gBAKG,QAAC,IAAD;AAAM,QAAA,CAAC,EAAE;AAACD,UAAAA,IAAI,EAAE,CAAP;AAAUC,UAAAA,EAAE,EAAE;AAAd,SAAT;AAA2B,QAAA,CAAC,EAAC,MAA7B;AAAoC,QAAA,OAAO,EAAE,CAA7C;AAAgD,QAAA,OAAO,EAAC,QAAxD;AAAiE,QAAA,KAAK,EAAC,QAAvE;AAAA,+BACI,QAAC,QAAD;AAAA,iCACI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAsBH,CA1CD;;GAAMX,a;UAC4BJ,c,EACsBA,c;;;KAFlDI,a;AA4CN,eAAeA,aAAf","sourcesContent":["import { Box, Center, Text, Wrap, WrapItem } from \"@chakra-ui/react\";\nimport Cookies from \"js-cookie\";\nimport { client } from \"lib/api/client\";\nimport { useEffect, VFC } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { Loding } from \"store/loding/Loding\";\nimport { DefaultSpiner } from \"util/DefaultSpiner\";\nimport FavoriteAnimeCard from \"./FavoriteAnimeCard\";\n\nconst FavoriteAnime: VFC = () => {\n    const [ loding, setLoding ] = useRecoilState(Loding)\n    const [ favoriteAnimeList, setFavoriteAnimeList ] = useRecoilState(Fa)\n\n    useEffect(() => {\n        setLoding(true)\n        const getFavoriteAnime = async() => {\n            try {\n                const FavoriteAnime = await client.get('/favorites', { headers: {\n                    \"access-token\": Cookies.get(\"_access_token\"),\n                    \"client\": Cookies.get(\"_client\"),\n                    \"uid\": Cookies.get(\"_uid\")\n                  }})\n\n            } catch (error) {\n                throw error\n            }\n        }\n    }, [])\n\n    return (\n        <>\n            <Box w={{base: '98%', md: '70%'}} h='100vh' bg='#ffff' m='100px auto 20px auto' borderRadius='10px'>\n                <Box justify='center' align='center' m='30px 10px 0'>\n                    <Text fontWeight='700' fontSize='1.17em' pt='30px'>\n                        ー　お気に入りアニメ　ー\n                    </Text>\n                </Box>\n                {true ? (\n                    <Center mt='100px'>\n                        <DefaultSpiner />\n                    </Center>\n                ) : (\n                    <Wrap p={{base: 3, md: 4}} w='100%' spacing={5} justify='center' align='center'>\n                        <WrapItem>\n                            <FavoriteAnimeCard />\n                        </WrapItem>\n                    </Wrap>\n                )}\n            </Box>\n        </>\n    )\n}\n\nexport default FavoriteAnime"]},"metadata":{},"sourceType":"module"}