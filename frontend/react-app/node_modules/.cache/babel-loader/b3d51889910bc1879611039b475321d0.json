{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-app/src/components/molecules/animeCard/AnimeCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useState, useEffect, useMemo } from 'react';\nimport { Image } from '@chakra-ui/image';\nimport { Box, Flex, Link, Text } from '@chakra-ui/layout';\nimport { BsHeartFill, BsHeart } from \"react-icons/bs\";\nimport { motion, useAnimation } from 'framer-motion';\nimport { Icon, Tag } from '@chakra-ui/react';\nimport { Link as RouteLink } from \"react-router-dom\";\nimport { FaTwitter } from \"react-icons/fa\";\nimport { useRecoilValue } from 'recoil';\nimport { CurrentUser, IsSignedIn } from 'store/auth/Auth';\nimport { useMessage } from 'customHooks/message/useMessage';\nimport ReviewModal from '../reviewModal/ReviewModal';\nimport ReactStars from 'react-stars';\nimport { useGetReviewCount } from 'customHooks/useGetReviewCount';\nimport { IconContext } from 'react-icons/lib';\nimport { cleateFavorite, confirmFavorite, deleteFavorite } from 'lib/api/favorite/favorite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AnimeCard = /*#__PURE__*/memo(_c = _s(props => {\n  _s();\n\n  const {\n    animeList\n  } = props;\n  const [isLike, setIsLike] = useState(false);\n  const currentUser = useRecoilValue(CurrentUser);\n  const isSignedIn = useRecoilValue(IsSignedIn);\n  const controls = useAnimation();\n  const {\n    showMessage\n  } = useMessage();\n  const {\n    count,\n    rate\n  } = useGetReviewCount(animeList.id);\n  const image = animeList.images.recommended_url !== '' ? animeList.images.recommended_url : `${process.env.PUBLIC_URL}/no_image.png`;\n  const like = useMemo(() => isLike, [isLike]);\n\n  const toggleLike = () => {\n    //ログインしているか確認\n    if (currentUser && isSignedIn) {\n      //お気に入り登録済か\n      if (isLike === false) {\n        try {\n          const createLike = async () => {\n            const favoriteParams = {\n              user_id: currentUser.id,\n              title: animeList.title,\n              official_url: animeList.official_site_url,\n              image_url: animeList.images.recommended_url,\n              twitter_username: animeList.twitter_username,\n              season: animeList.season_name_text,\n              api_id: animeList.id,\n              media_text: animeList.media_text\n            };\n            const res = await cleateFavorite(favoriteParams);\n            res.status === 200 ? setIsLike(true) : console.error('status error'); // controls.start({ scale: [0, 0.5, 1] })\n          };\n\n          createLike();\n          setIsLike(true);\n        } catch (error) {\n          showMessage({\n            title: 'お気に入り登録に失敗しました',\n            status: \"error\"\n          });\n        }\n      } else {\n        try {\n          const deleteLike = async () => {\n            const res = await deleteFavorite(animeList.id);\n            res.status === 200 ? setIsLike(false) : console.error('status error');\n          };\n\n          deleteLike();\n        } catch (error) {\n          showMessage({\n            title: 'お気に入り削除に失敗しました',\n            status: \"error\"\n          });\n        }\n      }\n    } else {\n      showMessage({\n        title: 'ログインが必要です',\n        status: \"error\"\n      });\n    }\n  };\n\n  const handleOfficialSite = e => {\n    e.preventDefault();\n\n    if (animeList.official_site_url) {\n      window.open(animeList.official_site_url, '_blank');\n    } else {\n      showMessage({\n        title: '公式URLが存在しません',\n        status: 'warning'\n      });\n    }\n  }; //お気に入り確認反映(初回、再レンダリング時)\n\n\n  useEffect(() => {\n    //メモリリーク対策\n    let isMounted = true;\n\n    const getLikeAnime = async () => {\n      try {\n        const res = await confirmFavorite(animeList.id);\n        console.log(res);\n        res.status === 200 ? setIsLike(res.data) : console.error('status error');\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    isMounted && getLikeAnime();\n    return () => {\n      isMounted = false;\n    };\n  }, [like]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      w: {\n        base: '300px',\n        md: '500px'\n      },\n      h: {\n        base: '270px',\n        md: '360px'\n      },\n      bg: \"white\",\n      borderRadius: \"10px\",\n      m: \"15px 5px\",\n      p: \"0 0 10px 0\",\n      border: \"solid 1px #e0e0e0\",\n      position: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        position: \"absolute\",\n        top: \"10px\",\n        right: \"10px\",\n        _hover: {\n          opacity: 0.9\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          as: \"a\",\n          href: `${process.env.REACT_APP_TWITTER_URL}${animeList.twitter_username}`,\n          target: \"_blank\",\n          children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n            value: {\n              color: '#1DA1F2',\n              size: '30px'\n            },\n            children: /*#__PURE__*/_jsxDEV(FaTwitter, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        as: \"a\",\n        onClick: handleOfficialSite,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"block\",\n          m: \"0 0 8px\",\n          overflow: \"hidden\",\n          borderRadius: \"10px 10px 0 0\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: image,\n            w: \"calc(100% + 20px)\",\n            objectFit: \"cover\",\n            maxH: {\n              base: '200px',\n              md: '260px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          align: \"center\",\n          m: \"10px 15px 0\",\n          children: [/*#__PURE__*/_jsxDEV(Tag, {\n            size: \"sm\",\n            variant: \"solid\",\n            colorScheme: \"teal\",\n            mr: 2,\n            children: animeList.media_text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            as: \"h1\",\n            fontSize: {\n              base: 'xs',\n              md: 'md'\n            },\n            fontWeight: \"800\",\n            children: animeList.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          justify: \"space-between\",\n          w: \"100%\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            position: \"absolute\",\n            bottom: \"5px\",\n            right: \"5px\",\n            children: /*#__PURE__*/_jsxDEV(motion.div, {\n              onClick: toggleLike,\n              animate: controls,\n              transition: !isLike ? {\n                duration: 0.2,\n                ease: \"easeIn\"\n              } : {\n                duration: 0.6,\n                ease: \"easeIn\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                as: isLike ? BsHeartFill : BsHeart,\n                fontSize: \"20px\",\n                color: isLike ? '#FF1493' : '',\n                cursor: \"pointer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            position: \"absolute\",\n            bottom: \"5px\",\n            left: \"15px\",\n            children: [/*#__PURE__*/_jsxDEV(RouteLink, {\n              to: {\n                pathname: `/review/${animeList.id}`,\n                state: animeList.images.recommended_url\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(Flex, {\n                  align: \"center\",\n                  _hover: {\n                    cursor: 'pointer'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(ReactStars, {\n                    edit: false,\n                    value: rate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    as: \"p\",\n                    fontWeight: \"bold\",\n                    ml: 1,\n                    fontSize: {\n                      base: '3px',\n                      md: '4px'\n                    },\n                    children: `(レビュー件数：${count}件)`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ReviewModal, {\n              id: animeList.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}, \"w5XAAW5yFuThsf5I+XMhuezV0W0=\", false, function () {\n  return [useRecoilValue, useRecoilValue, useAnimation, useMessage, useGetReviewCount];\n}));\n_c2 = AnimeCard;\nexport default AnimeCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AnimeCard$memo\");\n$RefreshReg$(_c2, \"AnimeCard\");","map":{"version":3,"sources":["/usr/src/app/react-app/src/components/molecules/animeCard/AnimeCard.tsx"],"names":["React","memo","useState","useEffect","useMemo","Image","Box","Flex","Link","Text","BsHeartFill","BsHeart","motion","useAnimation","Icon","Tag","RouteLink","FaTwitter","useRecoilValue","CurrentUser","IsSignedIn","useMessage","ReviewModal","ReactStars","useGetReviewCount","IconContext","cleateFavorite","confirmFavorite","deleteFavorite","AnimeCard","props","animeList","isLike","setIsLike","currentUser","isSignedIn","controls","showMessage","count","rate","id","image","images","recommended_url","process","env","PUBLIC_URL","like","toggleLike","createLike","favoriteParams","user_id","title","official_url","official_site_url","image_url","twitter_username","season","season_name_text","api_id","media_text","res","status","console","error","deleteLike","handleOfficialSite","e","preventDefault","window","open","isMounted","getLikeAnime","log","data","base","md","opacity","REACT_APP_TWITTER_URL","color","size","duration","ease","pathname","state","cursor"],"mappings":"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","sourcesContent":["import React, { memo, VFC, useState, useEffect, useMemo } from 'react'\n\nimport { Image } from '@chakra-ui/image'\nimport { Box, Flex, Link, Text } from '@chakra-ui/layout'\nimport { BsHeartFill, BsHeart } from \"react-icons/bs\";\nimport { motion, useAnimation } from 'framer-motion';\nimport { Icon, Tag } from '@chakra-ui/react';\nimport { Link as RouteLink } from \"react-router-dom\"\nimport { FaTwitter } from \"react-icons/fa\";\n\nimport { AnnictApiType } from '../../../types/api/AnnictApiType';\nimport { useRecoilValue } from 'recoil';\nimport { CurrentUser, IsSignedIn } from 'store/auth/Auth';\nimport { useMessage } from 'customHooks/message/useMessage';\nimport { FavoriteType } from 'types/favoriteAnime/FavoriteAnimeType';\nimport ReviewModal from '../reviewModal/ReviewModal';\nimport ReactStars from 'react-stars';\nimport { useGetReviewCount } from 'customHooks/useGetReviewCount';\nimport { IconContext } from 'react-icons/lib';\nimport { cleateFavorite, confirmFavorite, deleteFavorite } from 'lib/api/favorite/favorite';\n\ntype Props = {\n    animeList: AnnictApiType;\n}\n\nconst AnimeCard: VFC<Props> = memo((props) => {\n    const { animeList } = props\n    const [ isLike, setIsLike ] = useState(false)\n    const currentUser = useRecoilValue(CurrentUser)\n    const isSignedIn = useRecoilValue(IsSignedIn)\n    const controls = useAnimation()\n    const { showMessage } = useMessage()\n    const { count, rate } = useGetReviewCount(animeList.id)\n\n    const image = animeList.images.recommended_url !== '' ? animeList.images.recommended_url : `${process.env.PUBLIC_URL}/no_image.png`\n\n    const like = useMemo(() => isLike, [isLike])\n    \n    const toggleLike = () => {\n        //ログインしているか確認\n        if (currentUser && isSignedIn) {\n            //お気に入り登録済か\n            if (isLike === false) {\n                try {\n                    const createLike = async() => {\n                        const favoriteParams: FavoriteType = {\n                            user_id: currentUser.id,\n                            title: animeList.title,\n                            official_url: animeList.official_site_url,\n                            image_url: animeList.images.recommended_url,\n                            twitter_username: animeList.twitter_username,\n                            season: animeList.season_name_text,\n                            api_id: animeList.id,\n                            media_text: animeList.media_text,\n                        }\n            \n                        const res = await cleateFavorite(favoriteParams)\n                        res.status === 200 ? setIsLike(true) : console.error('status error')\n                        // controls.start({ scale: [0, 0.5, 1] })\n                    }\n                    createLike()\n                    setIsLike(true)\n                    \n                } catch (error) {\n                    showMessage({title: 'お気に入り登録に失敗しました', status: \"error\"})\n                }\n            } else {\n                try {\n                    const deleteLike = async() => {        \n                        const res = await deleteFavorite(animeList.id)  \n                        res.status === 200 ? setIsLike(false) : console.error('status error')\n                    }   \n                    deleteLike()\n                } catch (error) {\n                    showMessage({title: 'お気に入り削除に失敗しました', status: \"error\"})\n                }\n            }\n        } else {\n            showMessage({title: 'ログインが必要です', status: \"error\"})\n        }\n    }\n\n    const handleOfficialSite = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n        e.preventDefault()\n        if(animeList.official_site_url) {\n            window.open(animeList.official_site_url, '_blank')\n        } else {\n            showMessage({title: '公式URLが存在しません', status: 'warning'})\n        }\n    }\n\n    //お気に入り確認反映(初回、再レンダリング時)\n    useEffect(() => {\n        //メモリリーク対策\n        let isMounted = true\n        const getLikeAnime = async() => {\n            try {\n                const res = await confirmFavorite(animeList.id)\n                console.log(res);\n                \n                res.status === 200 ? setIsLike(res.data) : console.error('status error')\n            } catch (error) {\n                console.error(error)\n            }\n        }\n        isMounted && getLikeAnime()\n\n        return () => {\n            isMounted = false\n        }\n    }, [like])\n\n    return (\n        <>\n            <Box w={{base: '300px', md: '500px'}} h={{base: '270px', md: '360px'}} bg='white' borderRadius='10px' m='15px 5px' p='0 0 10px 0' border='solid 1px #e0e0e0' position='relative'>\n                <Box position='absolute' top='10px' right='10px' _hover={{opacity: 0.9}} >\n                    <Link as='a' href={`${process.env.REACT_APP_TWITTER_URL}${animeList.twitter_username}`} target='_blank'>\n                        <IconContext.Provider value={{ color: '#1DA1F2', size: '30px' }}>\n                            <FaTwitter />\n                        </IconContext.Provider>\n                    </Link>\n                </Box>\n                <Link as='a' onClick={handleOfficialSite} >\n                    <Box display='block' m='0 0 8px' overflow='hidden' borderRadius='10px 10px 0 0'>\n                        <Image src={image}  w='calc(100% + 20px)' objectFit='cover' maxH={{base: '200px', md: '260px'}}/>\n                    </Box>\n                </Link>\n                <Box>\n                    <Flex align='center' m='10px 15px 0'>\n                        <Tag size='sm' variant='solid' colorScheme='teal' mr={2}>\n                            {animeList.media_text}\n                        </Tag>\n                        <Text as='h1' fontSize={{base: 'xs', md: 'md'}} fontWeight='800'>{animeList.title}</Text>\n                    </Flex>\n                    <Flex justify='space-between' w='100%'>\n                        <Box position='absolute' bottom='5px' right='5px'>\n                            <motion.div\n                                onClick={toggleLike}\n                                animate={controls}\n                                transition={!isLike ? { duration: 0.2 , ease: \"easeIn\"} : { duration: 0.6 , ease: \"easeIn\"}}\n                            >\n                                <Icon\n                                    as={isLike ? BsHeartFill : BsHeart }\n                                    fontSize='20px' \n                                    color={isLike ? '#FF1493': ''}\n                                    cursor='pointer'\n                                />\n                            </motion.div>\n                        </Box>\n                        <Box position='absolute' bottom='5px' left='15px'>\n                            <RouteLink to={{pathname: `/review/${animeList.id}`, state: animeList.images.recommended_url}}>\n                                    <Box>\n                                        <Flex align='center' _hover={{cursor: 'pointer'}}>\n                                            <ReactStars edit={false} value={rate}/>\n                                            <Text as='p' fontWeight='bold' ml={1} fontSize={{base: '3px', md: '4px'}}>{`(レビュー件数：${count}件)`}</Text>\n                                        </Flex>\n                                    </Box>\n                            </RouteLink>\n                            <ReviewModal id={animeList.id} />\n                        </Box>\n                    </Flex>\n                </Box>\n            </Box>\n        </>\n    )\n})\n\nexport default AnimeCard"]},"metadata":{},"sourceType":"module"}