{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { Year } from '../store/Year';\nconst [selectYear, setSelectyear] = useRecoilState(Year);\nexport const useYearFactory = useCallback(_s(() => {\n  _s();\n\n  const current_year = new Date().getFullYear();\n  const year = [];\n  const handleChangeYear = useCallback(e => {\n    console.log(e);\n    setSelectyear(e.target.value);\n  }, [year]);\n\n  for (let y = current_year; y >= 2014; y--) {\n    year.push(y);\n  }\n\n  return {\n    year,\n    handleChangeYear\n  };\n}, \"GbfpmYRwYVLOF0cB4OILhf1/EKY=\"), [year, handleChangeYear]);","map":{"version":3,"sources":["/usr/src/app/react-app/src/customHooks/useYearFactory.ts"],"names":["useCallback","useRecoilState","Year","selectYear","setSelectyear","useYearFactory","current_year","Date","getFullYear","year","handleChangeYear","e","console","log","target","value","y","push"],"mappings":";;AAAA,SAAsBA,WAAtB,QAAyC,OAAzC;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,IAAT,QAAqB,eAArB;AAIA,MAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCH,cAAc,CAACC,IAAD,CAApD;AACA,OAAO,MAAMG,cAAc,GAAGL,WAAW,IAAC,MAAM;AAAA;;AAC5C,QAAMM,YAAY,GAAI,IAAIC,IAAJ,EAAD,CAAaC,WAAb,EAArB;AACA,QAAMC,IAAc,GAAG,EAAvB;AAEA,QAAMC,gBAAkC,GAAGV,WAAW,CAAEW,CAAD,IAAO;AAC1DC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAP,IAAAA,aAAa,CAACO,CAAC,CAACG,MAAF,CAASC,KAAV,CAAb;AACH,GAHqD,EAGnD,CAACN,IAAD,CAHmD,CAAtD;;AAKA,OAAK,IAAIO,CAAC,GAAGV,YAAb,EAA2BU,CAAC,IAAI,IAAhC,EAAsCA,CAAC,EAAvC,EAA2C;AACvCP,IAAAA,IAAI,CAACQ,IAAL,CAAUD,CAAV;AACH;;AAED,SAAO;AAAEP,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAP;AACH,CAdwC,mCActC,CAAED,IAAF,EAAQC,gBAAR,CAdsC,CAAlC","sourcesContent":["import { ChangeEvent, useCallback } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { Year } from '../store/Year'\n\ntype handleChangeYear = (e: ChangeEvent<HTMLSelectElement>) => void\n\nconst [ selectYear, setSelectyear ] = useRecoilState(Year)\nexport const useYearFactory = useCallback(() => {\n    const current_year = (new Date()).getFullYear();\n    const year: number[] = []\n\n    const handleChangeYear: handleChangeYear = useCallback((e) => {\n        console.log(e);\n        setSelectyear(e.target.value)\n    }, [year])\n\n    for (let y = current_year; y >= 2014; y--) {\n        year.push(y)\n    }\n\n    return { year, handleChangeYear }\n}, [ year, handleChangeYear])"]},"metadata":{},"sourceType":"module"}