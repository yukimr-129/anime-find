{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-app/src/components/molecules/reviewModal/ReviewModal.tsx\",\n    _s = $RefreshSig$();\n\nimport { EditIcon } from \"@chakra-ui/icons\";\nimport { Box, Button, Text, FormControl, FormLabel, Input, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Textarea, useDisclosure, VStack, FormErrorMessage } from \"@chakra-ui/react\";\nimport { useMessage } from \"customHooks/message/useMessage\";\nimport { useGetSize } from \"customHooks/useGetSize\";\nimport { createReview } from \"lib/api/review/review\";\nimport { memo, useRef, useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { BeatLoader } from \"react-spinners\";\nimport ReactStars from 'react-stars';\nimport { useRecoilValue } from \"recoil\";\nimport { CurrentUser } from \"store/auth/Auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ReviewModal = /*#__PURE__*/memo(_c = _s(props => {\n  _s();\n\n  const {\n    id\n  } = props;\n  const currentUser = useRecoilValue(CurrentUser);\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const initialRef = useRef(null);\n  const [rating, setRating] = useState(0);\n  const [errorMessage, setErrorMessage] = useState('');\n  const {\n    partsSize\n  } = useGetSize();\n  const {\n    showMessage\n  } = useMessage();\n  const {\n    register,\n    reset,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    formState\n  } = useForm({\n    mode: 'all',\n    defaultValues: {\n      title: '',\n      comment: ''\n    }\n  }); //レビュー初期値\n\n  const getRating = rate => {\n    setRating(rate);\n  }; //レビュー送信\n\n\n  const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n  const isEmptyError = rating === 0;\n\n  const onSubmitReview = async data => {\n    //星レビュー必須\n    if (isEmptyError) {\n      console.log(isEmptyError);\n      setErrorMessage('評価を選択してください');\n      return;\n    }\n\n    const {\n      title,\n      comment\n    } = data;\n    const formData = new FormData();\n    const rate = rating;\n    formData.set('title', title);\n    formData.set('comment', comment);\n    formData.set('rate', String(rate));\n    formData.set('anime_id', String(id));\n    console.log(formData);\n    const params = {\n      title: title,\n      comment: comment,\n      rate: String(rate),\n      anime_id: String(id),\n      user_id: currentUser.id\n    };\n\n    try {\n      const res = await createReview(params);\n\n      if (res.status === 200) {\n        showMessage({\n          title: 'レビューを投稿しました。',\n          status: 'success'\n        });\n      } else {\n        showMessage({\n          title: 'レビュー投稿に失敗しました。',\n          status: 'error'\n        });\n      }\n    } catch (error) {\n      showMessage({\n        title: 'レビュー投稿に失敗しました。',\n        status: 'error'\n      });\n    }\n  }; //モーダルを閉じた場合、評価を初期化\n\n\n  useEffect(() => {\n    if (!isOpen) {\n      setRating(0);\n      reset();\n      setErrorMessage('');\n    }\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      pl: 0,\n      size: \"xs\",\n      leftIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 48\n      }, this),\n      variant: \"none\",\n      onClick: onOpen,\n      children: \"\\u30EC\\u30D3\\u30E5\\u30FC\\u3092\\u66F8\\u304F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      initialFocusRef: initialRef,\n      isOpen: isOpen,\n      onClose: onClose,\n      size: partsSize,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"\\u30A2\\u30CB\\u30E1\\u30EC\\u30D3\\u30E5\\u30FC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmitReview),\n          children: [/*#__PURE__*/_jsxDEV(ModalBody, {\n            pb: 6,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(VStack, {\n                align: \"left\",\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  children: \"\\u30EC\\u30D3\\u30E5\\u30FC\\u8A55\\u4FA1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(ReactStars, {\n                  value: rating,\n                  size: 30,\n                  half: false,\n                  onChange: getRating\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 33\n                }, this), isEmptyError && /*#__PURE__*/_jsxDEV(Text, {\n                  color: \"#E53E3E\",\n                  fontSize: \"0.875rem\",\n                  children: errorMessage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 51\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              mt: 4,\n              id: \"reviewArea\",\n              isRequired: true,\n              isInvalid: errors.title ? true : false,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"\\u30BF\\u30A4\\u30C8\\u30EB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Input, { ...register('title', {\n                  required: 'タイトルを入力してください',\n                  maxLength: {\n                    value: 20,\n                    message: '20文字以下で入力してください'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                children: errors.title && errors.title.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              mt: 4,\n              id: \"reviewArea\",\n              isRequired: true,\n              isInvalid: errors.comment ? true : false,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"\\u30EC\\u30D3\\u30E5\\u30FC\\u30B3\\u30E1\\u30F3\\u30C8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Textarea // name='reviewArea'\n              , { ...register('comment', {\n                  required: 'レビューコメントを入力してください',\n                  maxLength: {\n                    value: 500,\n                    message: '500文字以下で入力してください'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                children: errors.comment && errors.comment.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              colorScheme: \"blue\",\n              mr: 3,\n              disabled: !formState.isValid,\n              isLoading: formState.isSubmitting,\n              spinner: /*#__PURE__*/_jsxDEV(BeatLoader, {\n                size: 8,\n                color: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 147\n              }, this),\n              _hover: {\n                opacity: 0.8\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onClose,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}, \"cLFKuiQOai4SOTO0DYG9mV+hm2U=\", false, function () {\n  return [useRecoilValue, useDisclosure, useGetSize, useMessage, useForm];\n}));\n_c2 = ReviewModal;\nexport default ReviewModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReviewModal$memo\");\n$RefreshReg$(_c2, \"ReviewModal\");","map":{"version":3,"sources":["/usr/src/app/react-app/src/components/molecules/reviewModal/ReviewModal.tsx"],"names":["EditIcon","Box","Button","Text","FormControl","FormLabel","Input","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","Textarea","useDisclosure","VStack","FormErrorMessage","useMessage","useGetSize","createReview","memo","useRef","useState","useEffect","useForm","BeatLoader","ReactStars","useRecoilValue","CurrentUser","ReviewModal","props","id","currentUser","isOpen","onOpen","onClose","initialRef","rating","setRating","errorMessage","setErrorMessage","partsSize","showMessage","register","reset","formState","errors","handleSubmit","mode","defaultValues","title","comment","getRating","rate","sleep","ms","Promise","resolve","setTimeout","isEmptyError","onSubmitReview","data","console","log","formData","FormData","set","String","params","anime_id","user_id","res","status","error","required","maxLength","value","message","isValid","isSubmitting","opacity"],"mappings":"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","sourcesContent":["import { EditIcon } from \"@chakra-ui/icons\";\nimport { Box, Button, Text, FormControl, FormLabel, Input, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Textarea, useDisclosure, VStack, FormErrorMessage } from \"@chakra-ui/react\";\nimport { useMessage } from \"customHooks/message/useMessage\";\nimport { useGetSize } from \"customHooks/useGetSize\";\nimport { createReview } from \"lib/api/review/review\";\nimport { memo, useRef, useState, VFC, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { BeatLoader } from \"react-spinners\";\nimport ReactStars from 'react-stars'\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { CurrentUser } from \"store/auth/Auth\";\n\nimport { Submitreview, Submitreviews } from \"types/form/FormInputs\";\n\ntype  Props = {\n    id: number\n}\n\nconst ReviewModal: VFC<Props> = memo((props) => {\n    const { id } = props\n    const currentUser = useRecoilValue(CurrentUser)\n    const { isOpen, onOpen, onClose } = useDisclosure()\n    const initialRef = useRef<HTMLInputElement>(null)\n    const [ rating, setRating ] = useState(0)\n    const [ errorMessage, setErrorMessage ] = useState('')\n    const { partsSize } = useGetSize()\n    const { showMessage } = useMessage()\n    const { register, reset, formState: { errors }, handleSubmit, formState } = useForm<Submitreview>({\n        mode: 'all',\n        defaultValues: {\n            title: '',\n            comment: '',\n        }\n    })    \n    \n\n    //レビュー初期値\n    const getRating = (rate: number) => {        \n        setRating(rate)       \n    }\n\n    //レビュー送信\n    const sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n    const isEmptyError = rating === 0\n    const onSubmitReview = async(data: Submitreview) => {\n        //星レビュー必須\n        if (isEmptyError){\n            console.log(isEmptyError);\n            \n            setErrorMessage('評価を選択してください')\n            return;\n        } \n        const { title, comment } = data\n        const formData = new FormData()\n        const rate = rating\n        formData.set('title', title)\n        formData.set('comment', comment)\n        formData.set('rate', String(rate))\n        formData.set('anime_id', String(id))\n        console.log(formData);\n\n        const params = {\n            title: title,\n            comment: comment,\n            rate: String(rate),\n            anime_id: String(id),\n            user_id: currentUser.id\n        }\n\n        try {\n            const res = await createReview(params)\n            if(res.status === 200){\n                showMessage({title: 'レビューを投稿しました。', status: 'success'})\n            }else {\n                showMessage({title: 'レビュー投稿に失敗しました。', status: 'error'})\n            }\n\n        } catch (error) {\n            showMessage({title: 'レビュー投稿に失敗しました。', status: 'error'})\n        }\n        \n        \n    }\n    \n    //モーダルを閉じた場合、評価を初期化\n    useEffect(() => {\n        if(!isOpen){\n            setRating(0)\n            reset()\n            setErrorMessage('')\n        }\n    }, [isOpen])\n\n    return (\n        <>\n            <Button pl={0} size='xs' leftIcon={<EditIcon />} variant='none' onClick={onOpen}>レビューを書く</Button>\n\n            <Modal\n                initialFocusRef={initialRef}\n                isOpen={isOpen}\n                onClose={onClose}\n                size={partsSize}\n            >\n                <ModalOverlay />\n                <ModalContent>\n                <ModalHeader>アニメレビュー</ModalHeader>\n                <ModalCloseButton />\n                <form onSubmit={handleSubmit(onSubmitReview)}>\n                    <ModalBody pb={6}>\n                        <Box>\n                            <VStack align='left'>\n                                <Text>レビュー評価</Text>\n                                <ReactStars value={rating} size={30} half={false} onChange={getRating}/>\n                                { isEmptyError && <Text color='#E53E3E' fontSize='0.875rem'>{errorMessage}</Text>}\n                            </VStack>\n                        </Box>\n\n                        <FormControl mt={4} id='reviewArea' isRequired isInvalid={errors.title ? true : false}>\n                            <FormLabel>タイトル</FormLabel>\n                            <Input {...register('title', {required: 'タイトルを入力してください', maxLength: {value: 20, message: '20文字以下で入力してください'}})}/>\n                            <FormErrorMessage>\n                                {errors.title && errors.title.message}\n                            </FormErrorMessage>\n                        </FormControl>\n\n                        <FormControl mt={4} id='reviewArea' isRequired isInvalid={errors.comment ? true : false}>\n                            <FormLabel>レビューコメント</FormLabel>\n                            <Textarea \n                                // name='reviewArea'\n                                {...register('comment', {required: 'レビューコメントを入力してください', maxLength: {value: 500, message: '500文字以下で入力してください'}})}\n                            />\n                            <FormErrorMessage>\n                                {errors.comment && errors.comment.message}\n                            </FormErrorMessage>\n                            </FormControl>\n                    </ModalBody>\n\n                    <ModalFooter>\n                        <Button type='submit' colorScheme='blue' mr={3} disabled={!formState.isValid} isLoading={formState.isSubmitting}　spinner={<BeatLoader size={8} color=\"white\" />}　_hover={{opacity: 0.8}}>\n                            Save\n                        </Button>\n                        <Button onClick={onClose}>Cancel</Button>\n                    </ModalFooter>\n                </form>\n                </ModalContent>\n            </Modal>\n        </>\n    )\n})\n\nexport default ReviewModal"]},"metadata":{},"sourceType":"module"}