{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-app/src/components/pages/auth/SigninForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Divider, Flex, FormControl, FormLabel, Heading, Input, VStack } from \"@chakra-ui/react\";\nimport { useForm } from \"react-hook-form\";\nimport { BeatLoader } from \"react-spinners\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SigninForm = () => {\n  _s();\n\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    formState\n  } = useForm({\n    mode: 'all' // defaultValues: {\n    //     email: '',\n    //     password: '',\n    //   }\n\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      justify: \"center\",\n      align: \"center\",\n      h: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        bg: \"white\",\n        w: \"sm\",\n        p: 4,\n        borderRadius: \"10px\",\n        shadow: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h1\",\n          size: \"lg\",\n          textAlign: \"center\",\n          children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          my: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 5,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              isRequired: true,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                id: \"email\",\n                children: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input // type=\"email\" \n              , {\n                name: \"email\",\n                placeholder: \"test@example.com\",\n                ref: register({\n                  required: \"メールアドレスは必須です。\"\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                children: errors.inputText2 && errors.inputText2.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 39\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                id: \"password\",\n                children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              w: \"100%\",\n              color: \"white\",\n              bg: \"blue.400\",\n              _hover: {\n                opacity: 0.8\n              },\n              isLoading: false,\n              spinner: /*#__PURE__*/_jsxDEV(BeatLoader, {\n                size: 8,\n                color: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 129\n              }, this),\n              children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(SigninForm, \"TiZ76tct4yXAOi2D2ASdWxp8NPw=\", false, function () {\n  return [useForm];\n});\n\n_c = SigninForm;\nexport default SigninForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SigninForm\");","map":{"version":3,"sources":["/usr/src/app/react-app/src/components/pages/auth/SigninForm.tsx"],"names":["Box","Button","Divider","Flex","FormControl","FormLabel","Heading","Input","VStack","useForm","BeatLoader","SigninForm","register","formState","errors","handleSubmit","mode","required","inputText2","message","opacity"],"mappings":"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","sourcesContent":["import { Box, Button, Divider, Flex, FormControl, FormLabel, Heading, Input, Text, VStack } from \"@chakra-ui/react\"\nimport { useForm } from \"react-hook-form\"\nimport { BeatLoader } from \"react-spinners\"\n\ntype FormInputs = {\n    email: string;\n    password: string;\n  };\n\nconst SigninForm = () => {\n    const { register, formState: { errors }, handleSubmit, formState } = useForm<FormInputs>({\n        mode: 'all',\n        // defaultValues: {\n        //     email: '',\n        //     password: '',\n        //   }\n    })\n    return (\n        <>\n            {/* <Header /> */}\n            {/* <Box> */}\n                <Flex justify='center' align='center' h='100vh'>\n                    <Box bg='white' w='sm' p={4} borderRadius='10px' shadow='md'>\n                        <Heading as='h1' size='lg' textAlign='center'>ログイン</Heading>\n                        <Divider my={4}/>\n                        <form>\n                            <VStack spacing={5}>\n                                <FormControl isRequired>\n                                    <FormLabel id=\"email\">メールアドレス</FormLabel>\n                                    <Input \n                                        // type=\"email\" \n                                        name='email' \n                                        placeholder=\"test@example.com\" \n                                        ref={register({\n                                            required: \"メールアドレスは必須です。\",\n                                        })}\n                                    />\n                                      <FormErrorMessage>\n                                            {errors.inputText2 && errors.inputText2.message}\n                                        </FormErrorMessage>\n                                </FormControl>\n                                <FormControl>\n                                    <FormLabel id=\"password\">パスワード</FormLabel>\n                                    <Input type=\"text\" name='password'/>\n                                </FormControl>\n                                <Button w='100%' color='white' bg='blue.400' _hover={{opacity: 0.8}} isLoading={false} spinner={<BeatLoader size={8} color=\"white\" />}>ログイン</Button>\n                            </VStack>\n                        </form>\n                        \n                    </Box>\n                </Flex>  \n            {/* </Box> */}\n\n        </>\n    )\n}\n\nexport default SigninForm"]},"metadata":{},"sourceType":"module"}