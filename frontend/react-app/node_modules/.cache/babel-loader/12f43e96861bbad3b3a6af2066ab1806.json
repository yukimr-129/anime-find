{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-app/src/components/molecules/animeCard/AnimeCard.tsx\",\n    _s = $RefreshSig$();\n\nimport { Image } from '@chakra-ui/image';\nimport { Box, Flex, Link, Text } from '@chakra-ui/layout';\nimport React, { memo, useState, useEffect } from 'react';\nimport { BsHeartFill, BsHeart } from \"react-icons/bs\";\nimport { motion, useAnimation } from 'framer-motion';\nimport { Icon } from '@chakra-ui/react';\nimport { client } from 'lib/api/client';\nimport { useRecoilValue } from 'recoil';\nimport { CurrentUser, IsSignedIn } from 'store/auth/Auth';\nimport { useMessage } from 'customHooks/message/useMessage';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AnimeCard = /*#__PURE__*/memo(_c = _s(props => {\n  _s();\n\n  const {\n    animeList\n  } = props;\n  const [isLike, setIsLike] = useState(false);\n  const [toggleLike, setToggleLike] = useState(false);\n  const currentUser = useRecoilValue(CurrentUser);\n  const isSignedIn = useRecoilValue(IsSignedIn);\n  const {\n    showMessage\n  } = useMessage();\n  const controls = useAnimation();\n  const image = animeList.images.recommended_url !== '' ? animeList.images.recommended_url : 'https://lab.esprlog.net/annict/img/no_image.png';\n\n  const toggleSetLike = () => {\n    //ログインしているか確認\n    if (currentUser && isSignedIn) {\n      //お気に入り登録済か\n      if (!isLike) {\n        try {\n          const createLike = async () => {\n            const favoriteParams = {\n              user_id: currentUser.id,\n              title: animeList.title,\n              official_url: animeList.official_site_url,\n              image_url: animeList.images.recommended_url,\n              twitter_username: animeList.twitter_username,\n              season: animeList.season_name_text,\n              api_id: animeList.id\n            };\n            const res = await client.post('/favorites/create', favoriteParams); // console.log(res);\n          };\n\n          createLike();\n          setToggleLike(!toggleLike);\n          controls.start({\n            scale: [0, 0.5, 1]\n          });\n        } catch (error) {\n          showMessage({\n            title: 'お気に入り登録に失敗しました',\n            status: \"error\"\n          });\n        }\n      } else {\n        try {\n          const deleteLike = async () => {\n            const res = await client.delete(`/favorites/destroy/${animeList.id}`, {\n              headers: {\n                \"access-token\": Cookies.get(\"_access_token\"),\n                \"client\": Cookies.get(\"_client\"),\n                \"uid\": Cookies.get(\"_uid\")\n              }\n            });\n            console.log(res);\n          };\n\n          deleteLike();\n          setToggleLike(!toggleLike);\n          controls.start({\n            translateX: [0, 0, 0, -7, 0, -7, 0, 0]\n          });\n        } catch (error) {\n          showMessage({\n            title: 'お気に入り削除に失敗しました',\n            status: \"error\"\n          });\n        }\n      }\n    } else {\n      showMessage({\n        title: 'ログインが必要です',\n        status: \"error\"\n      });\n    }\n  }; ///お気に入り有無反映\n\n\n  useEffect(() => {\n    const getLikeAnime = async () => {\n      const isLikeData = await client.get(`/favorites/confirm/${animeList.id}`, {\n        headers: {\n          \"access-token\": Cookies.get(\"_access_token\"),\n          \"client\": Cookies.get(\"_client\"),\n          \"uid\": Cookies.get(\"_uid\")\n        }\n      });\n      console.log(isLikeData.data);\n      let isLike = isLikeData.data;\n      setIsLike(isLike);\n    };\n\n    getLikeAnime();\n  }, [toggleLike]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      w: {\n        base: '365px',\n        md: '500px'\n      },\n      h: {\n        base: '280px',\n        md: '330px'\n      },\n      bg: \"white\",\n      borderRadius: \"10px\",\n      m: \"15px 5px\",\n      p: \"0 0 10px 0\",\n      border: \"solid 1px #e0e0e0\",\n      position: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        as: \"a\",\n        href: animeList.official_site_url,\n        target: \"_blank\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"block\",\n          m: \"0 0 8px\",\n          overflow: \"hidden\",\n          borderRadius: \"10px 10px 0 0\",\n          children: [/*#__PURE__*/_jsxDEV(motion.div, {\n            whileHover: {\n              opacity: 1,\n              scale: 1.1,\n              transition: {\n                duration: 0.3\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              src: image,\n              w: \"calc(100% + 20px)\",\n              objectFit: \"cover\",\n              maxH: {\n                base: '200px',\n                md: '260px'\n              },\n              _hover: {\n                filter: 'blur(3px)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              opacity: \"0\",\n              color: \"red\",\n              fontWeight: \"700\",\n              fontSize: \"25px\",\n              position: \"absolute\",\n              top: \"40%\",\n              right: \"30%\",\n              children: \"View Official Site\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        align: \"flex-start\",\n        m: \"10px 15px 0\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          as: \"h1\",\n          fontSize: \"md\",\n          fontWeight: \"800\",\n          children: animeList.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justify: \"flex-end\",\n        w: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          position: \"absolute\",\n          bottom: \"5px\",\n          right: \"5px\",\n          children: /*#__PURE__*/_jsxDEV(motion.div, {\n            onClick: toggleSetLike,\n            animate: controls,\n            transition: !isLike ? {\n              duration: 0.2,\n              ease: \"easeIn\"\n            } : {\n              duration: 0.6,\n              ease: \"easeIn\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              as: isLike ? BsHeartFill : BsHeart,\n              fontSize: \"20px\",\n              color: isLike ? '#FF1493' : '',\n              cursor: \"pointer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}, \"W4zTvkjPSd3TdBlwyHjVoCPDt7c=\", false, function () {\n  return [useRecoilValue, useRecoilValue, useMessage, useAnimation];\n}));\n_c2 = AnimeCard;\nexport default AnimeCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AnimeCard$memo\");\n$RefreshReg$(_c2, \"AnimeCard\");","map":{"version":3,"sources":["/usr/src/app/react-app/src/components/molecules/animeCard/AnimeCard.tsx"],"names":["Image","Box","Flex","Link","Text","React","memo","useState","useEffect","BsHeartFill","BsHeart","motion","useAnimation","Icon","client","useRecoilValue","CurrentUser","IsSignedIn","useMessage","Cookies","AnimeCard","props","animeList","isLike","setIsLike","toggleLike","setToggleLike","currentUser","isSignedIn","showMessage","controls","image","images","recommended_url","toggleSetLike","createLike","favoriteParams","user_id","id","title","official_url","official_site_url","image_url","twitter_username","season","season_name_text","api_id","res","post","start","scale","error","status","deleteLike","delete","headers","get","console","log","translateX","getLikeAnime","isLikeData","data","base","md","opacity","transition","duration","filter","ease"],"mappings":"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","sourcesContent":["import { Image } from '@chakra-ui/image'\nimport { Box, Flex, Link, Text } from '@chakra-ui/layout'\nimport React, { memo, VFC, useState, useEffect } from 'react'\nimport { useHistory } from 'react-router'\nimport { BsHeartFill, BsHeart } from \"react-icons/bs\";\nimport { motion, useAnimation } from 'framer-motion';\nimport { Icon } from '@chakra-ui/react';\n\nimport { AnnictApiType } from '../../../types/api/AnnictApiType';\nimport { client } from 'lib/api/client';\nimport { useRecoilValue } from 'recoil';\nimport { CurrentUser, IsSignedIn } from 'store/auth/Auth';\nimport { useMessage } from 'customHooks/message/useMessage';\nimport Cookies from 'js-cookie';\n\ntype Props = {\n    animeList: AnnictApiType;\n}\n\ntype favorites = {\n    user_id: number;\n    title: string;\n    official_url: string;\n    image_url: string;\n    twitter_username: string;\n    season: string;\n    api_id: number;\n}\n\nconst AnimeCard: VFC<Props> = memo((props) => {\n    const { animeList } = props\n    const [ isLike, setIsLike ] = useState(false)\n    const [ toggleLike, setToggleLike ] = useState(false)\n    const currentUser = useRecoilValue(CurrentUser)\n    const isSignedIn = useRecoilValue(IsSignedIn)\n    const { showMessage } = useMessage()\n    const controls = useAnimation()\n\n    const image = animeList.images.recommended_url !== '' ? animeList.images.recommended_url : 'https://lab.esprlog.net/annict/img/no_image.png'\n\n    const toggleSetLike = () => {\n        //ログインしているか確認\n        if (currentUser && isSignedIn) {\n            //お気に入り登録済か\n            if (!isLike) {\n                try {\n                    const createLike = async() => {\n                        const favoriteParams: favorites = {\n                            user_id: currentUser.id,\n                            title: animeList.title,\n                            official_url: animeList.official_site_url,\n                            image_url: animeList.images.recommended_url,\n                            twitter_username: animeList.twitter_username,\n                            season: animeList.season_name_text,\n                            api_id: animeList.id,\n                        }\n            \n                        const res = await client.post('/favorites/create', favoriteParams)\n                        // console.log(res);\n                        \n                    }\n                    createLike()\n                    setToggleLike(!toggleLike)\n                    controls.start({ scale: [0, 0.5, 1] })\n                } catch (error) {\n                    showMessage({title: 'お気に入り登録に失敗しました', status: \"error\"})\n                }\n            } else {\n                try {\n                    const deleteLike = async() => {        \n                        const res = await client.delete(`/favorites/destroy/${animeList.id}`, { headers: {\n                            \"access-token\": Cookies.get(\"_access_token\"),\n                            \"client\": Cookies.get(\"_client\"),\n                            \"uid\": Cookies.get(\"_uid\")\n                          }})\n                        console.log(res);\n                        \n                    }\n                    \n                    deleteLike()\n                    setToggleLike(!toggleLike)\n                    controls.start({ translateX: [0, 0, 0, -7, 0, -7, 0, 0] })\n                } catch (error) {\n                    showMessage({title: 'お気に入り削除に失敗しました', status: \"error\"})\n                }\n            }\n        } else {\n            showMessage({title: 'ログインが必要です', status: \"error\"})\n        }\n    }\n\n    ///お気に入り有無反映\n    useEffect(() => {\n        const getLikeAnime = async() => {\n            const isLikeData = await client.get(`/favorites/confirm/${animeList.id}`, { headers: {\n                \"access-token\": Cookies.get(\"_access_token\"),\n                \"client\": Cookies.get(\"_client\"),\n                \"uid\": Cookies.get(\"_uid\")\n              }})\n            console.log(isLikeData.data);\n            let isLike = isLikeData.data\n            setIsLike(isLike)\n        }\n        getLikeAnime()\n    }, [toggleLike])\n\n    return (\n        <>\n            <Box w={{base: '365px', md: '500px'}} h={{base: '280px', md: '330px'}} bg='white' borderRadius='10px' m='15px 5px' p='0 0 10px 0' border='solid 1px #e0e0e0' position='relative'>\n                <Link as='a' href={animeList.official_site_url} target='_blank'>\n                    <Box display='block' m='0 0 8px' overflow='hidden' borderRadius='10px 10px 0 0'>\n                        <motion.div  whileHover={{opacity: 1, scale: 1.1, transition: { duration: 0.3 }}} >\n                            <Image src={image}  w='calc(100% + 20px)' objectFit='cover' maxH={{base: '200px', md: '260px'}} _hover={{filter: 'blur(3px)'}} />\n                        </motion.div>\n                        <Box>\n                            <Text opacity='0'color='red' fontWeight='700' fontSize='25px' position='absolute' top='40%' right='30%'>View Official Site</Text>\n                        </Box>\n                    </Box>\n                </Link>\n                <Flex align='flex-start' m='10px 15px 0'>\n                    <Text as='h1' fontSize=\"md\" fontWeight='800'>{animeList.title}</Text>\n                </Flex> \n                <Flex justify='flex-end' w='100%'>\n                    <Box position='absolute' bottom='5px' right='5px'>\n                        <motion.div\n                            onClick={toggleSetLike}\n                            animate={controls}\n                            transition={!isLike ? { duration: 0.2 , ease: \"easeIn\"} : { duration: 0.6 , ease: \"easeIn\"}}\n                        >\n                            <Icon\n                                as={isLike ? BsHeartFill : BsHeart }\n                                fontSize='20px' \n                                color={isLike ? '#FF1493': ''}\n                                cursor='pointer'\n                            />\n                        </motion.div>\n                    </Box>\n                </Flex>\n            </Box>\n        </>\n    )\n})\n\nexport default AnimeCard"]},"metadata":{},"sourceType":"module"}