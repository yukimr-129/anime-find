{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-app/src/components/molecules/animeCard/AnimeCard.tsx\",\n    _s = $RefreshSig$();\n\nimport { Image } from '@chakra-ui/image';\nimport { Box, Flex, Link, Text } from '@chakra-ui/layout';\nimport React, { memo, useState, useEffect } from 'react';\nimport { BsHeartFill, BsHeart } from \"react-icons/bs\";\nimport { motion, useAnimation } from 'framer-motion';\nimport { Icon } from '@chakra-ui/react';\nimport { client } from 'lib/api/client';\nimport { useRecoilValue } from 'recoil';\nimport { CurrentUser, IsSignedIn } from 'store/auth/Auth';\nimport { useMessage } from 'customHooks/message/useMessage';\nimport Cookies from 'js-cookie';\nimport { scale } from 'lib/motionVariants/variants';\nimport ReviewModal from '../reviewModal/ReviewModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AnimeCard = /*#__PURE__*/memo(_c = _s(props => {\n  _s();\n\n  const {\n    animeList\n  } = props;\n  const [isLike, setIsLike] = useState(false);\n  const [toggleLike, setToggleLike] = useState(false);\n  const currentUser = useRecoilValue(CurrentUser);\n  const isSignedIn = useRecoilValue(IsSignedIn);\n  const {\n    showMessage\n  } = useMessage();\n  const controls = useAnimation();\n  const image = animeList.images.recommended_url !== '' ? animeList.images.recommended_url : 'https://lab.esprlog.net/annict/img/no_image.png';\n  console.log(animeList);\n\n  const toggleSetLike = () => {\n    //ログインしているか確認\n    if (currentUser && isSignedIn) {\n      //お気に入り登録済か\n      if (isLike === false) {\n        try {\n          const createLike = async () => {\n            const favoriteParams = {\n              user_id: currentUser.id,\n              title: animeList.title,\n              official_url: animeList.official_site_url,\n              image_url: animeList.images.recommended_url,\n              twitter_username: animeList.twitter_username,\n              season: animeList.season_name_text,\n              api_id: animeList.id\n            };\n            const res = await client.post('/favorites/create', favoriteParams);\n          };\n\n          createLike();\n          setIsLike(true);\n          controls.start({\n            scale: [0, 0.5, 1]\n          });\n        } catch (error) {\n          showMessage({\n            title: 'お気に入り登録に失敗しました',\n            status: \"error\"\n          });\n        }\n      } else {\n        try {\n          const deleteLike = async () => {\n            const res = await client.delete(`/favorites/destroy/${animeList.id}`, {\n              headers: {\n                \"access-token\": Cookies.get(\"_access_token\"),\n                \"client\": Cookies.get(\"_client\"),\n                \"uid\": Cookies.get(\"_uid\")\n              }\n            });\n            console.log(res);\n          };\n\n          deleteLike();\n          setIsLike(false);\n          controls.start({\n            translateX: [0, 0, 0, -7, 0, -7, 0, 0]\n          });\n        } catch (error) {\n          showMessage({\n            title: 'お気に入り削除に失敗しました',\n            status: \"error\"\n          });\n        }\n      }\n    } else {\n      showMessage({\n        title: 'ログインが必要です',\n        status: \"error\"\n      });\n    }\n  }; ///お気に入り有無反映\n\n\n  useEffect(() => {\n    //メモリリーク対策\n    let isMounted = true;\n\n    const getLikeAnime = async () => {\n      const isLikeData = await client.get(`/favorites/confirm/${animeList.id}`, {\n        headers: {\n          \"access-token\": Cookies.get(\"_access_token\"),\n          \"client\": Cookies.get(\"_client\"),\n          \"uid\": Cookies.get(\"_uid\")\n        }\n      });\n      let isLike = isLikeData.data;\n      setIsLike(isLike);\n    };\n\n    if (isMounted) getLikeAnime();\n    return () => {\n      isMounted = false;\n    };\n  }, [isLike]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      w: {\n        base: '300px',\n        md: '500px'\n      },\n      h: {\n        base: '240px',\n        md: '330px'\n      },\n      bg: \"white\",\n      borderRadius: \"10px\",\n      m: \"15px 5px\",\n      p: \"0 0 10px 0\",\n      border: \"solid 1px #e0e0e0\",\n      position: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        as: \"a\",\n        href: animeList.official_site_url,\n        target: \"_blank\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"block\",\n          m: \"0 0 8px\",\n          overflow: \"hidden\",\n          borderRadius: \"10px 10px 0 0\",\n          children: /*#__PURE__*/_jsxDEV(motion.div, {\n            variants: scale,\n            whileHover: \"hoverAction\",\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              src: image,\n              w: \"calc(100% + 20px)\",\n              objectFit: \"cover\",\n              maxH: {\n                base: '200px',\n                md: '260px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        align: \"flex-start\",\n        flexDirection: \"column\",\n        m: \"10px 15px 0\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          as: \"h1\",\n          fontSize: \"md\",\n          fontWeight: \"800\",\n          children: animeList.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReviewModal, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justify: \"flex-end\",\n        w: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          position: \"absolute\",\n          bottom: \"5px\",\n          right: \"5px\",\n          children: /*#__PURE__*/_jsxDEV(motion.div, {\n            onClick: toggleSetLike,\n            animate: controls,\n            transition: !isLike ? {\n              duration: 0.2,\n              ease: \"easeIn\"\n            } : {\n              duration: 0.6,\n              ease: \"easeIn\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              as: isLike ? BsHeartFill : BsHeart,\n              fontSize: \"20px\",\n              color: isLike ? '#FF1493' : '',\n              cursor: \"pointer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}, \"W4zTvkjPSd3TdBlwyHjVoCPDt7c=\", false, function () {\n  return [useRecoilValue, useRecoilValue, useMessage, useAnimation];\n}));\n_c2 = AnimeCard;\nexport default AnimeCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AnimeCard$memo\");\n$RefreshReg$(_c2, \"AnimeCard\");","map":{"version":3,"sources":["/usr/src/app/react-app/src/components/molecules/animeCard/AnimeCard.tsx"],"names":["Image","Box","Flex","Link","Text","React","memo","useState","useEffect","BsHeartFill","BsHeart","motion","useAnimation","Icon","client","useRecoilValue","CurrentUser","IsSignedIn","useMessage","Cookies","scale","ReviewModal","AnimeCard","props","animeList","isLike","setIsLike","toggleLike","setToggleLike","currentUser","isSignedIn","showMessage","controls","image","images","recommended_url","console","log","toggleSetLike","createLike","favoriteParams","user_id","id","title","official_url","official_site_url","image_url","twitter_username","season","season_name_text","api_id","res","post","start","error","status","deleteLike","delete","headers","get","translateX","isMounted","getLikeAnime","isLikeData","data","base","md","duration","ease"],"mappings":"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","sourcesContent":["import { Image } from '@chakra-ui/image'\nimport { Box, Flex, Link, Text } from '@chakra-ui/layout'\nimport React, { memo, VFC, useState, useEffect, useRef } from 'react'\nimport { BsHeartFill, BsHeart } from \"react-icons/bs\";\nimport { motion, useAnimation } from 'framer-motion';\nimport { Icon, VStack } from '@chakra-ui/react';\n\nimport { AnnictApiType } from '../../../types/api/AnnictApiType';\nimport { client } from 'lib/api/client';\nimport { useRecoilValue } from 'recoil';\nimport { CurrentUser, IsSignedIn } from 'store/auth/Auth';\nimport { useMessage } from 'customHooks/message/useMessage';\nimport Cookies from 'js-cookie';\nimport { FavoriteType } from 'types/FavoriteAnime/FavoriteAnimeType';\nimport { scale, visible } from 'lib/motionVariants/variants';\nimport ReviewModal from '../reviewModal/ReviewModal';\n\ntype Props = {\n    animeList: AnnictApiType;\n}\n\nconst AnimeCard: VFC<Props> = memo((props) => {\n    const { animeList } = props\n    const [ isLike, setIsLike ] = useState(false)\n    const [ toggleLike, setToggleLike ] = useState(false)\n    const currentUser = useRecoilValue(CurrentUser)\n    const isSignedIn = useRecoilValue(IsSignedIn)\n    const { showMessage } = useMessage()\n    const controls = useAnimation()\n\n    const image = animeList.images.recommended_url !== '' ? animeList.images.recommended_url : 'https://lab.esprlog.net/annict/img/no_image.png'\n    console.log(animeList);\n    \n    const toggleSetLike = () => {\n        //ログインしているか確認\n        if (currentUser && isSignedIn) {\n            //お気に入り登録済か\n            if (isLike === false) {\n                try {\n                    const createLike = async() => {\n                        const favoriteParams: FavoriteType = {\n                            user_id: currentUser.id,\n                            title: animeList.title,\n                            official_url: animeList.official_site_url,\n                            image_url: animeList.images.recommended_url,\n                            twitter_username: animeList.twitter_username,\n                            season: animeList.season_name_text,\n                            api_id: animeList.id,\n                        }\n            \n                        const res = await client.post('/favorites/create', favoriteParams)\n                        \n                    }\n                    createLike()\n                    setIsLike(true)\n                    controls.start({ scale: [0, 0.5, 1] })\n                } catch (error) {\n                    showMessage({title: 'お気に入り登録に失敗しました', status: \"error\"})\n                }\n            } else {\n                try {\n                    const deleteLike = async() => {        \n                        const res = await client.delete(`/favorites/destroy/${animeList.id}`, { headers: {\n                            \"access-token\": Cookies.get(\"_access_token\"),\n                            \"client\": Cookies.get(\"_client\"),\n                            \"uid\": Cookies.get(\"_uid\")\n                          }})\n                        console.log(res);\n                        \n                    }\n                    \n                    deleteLike()\n                    setIsLike(false)\n                    controls.start({ translateX: [0, 0, 0, -7, 0, -7, 0, 0] })\n                } catch (error) {\n                    showMessage({title: 'お気に入り削除に失敗しました', status: \"error\"})\n                }\n            }\n        } else {\n            showMessage({title: 'ログインが必要です', status: \"error\"})\n        }\n    }\n\n    ///お気に入り有無反映\n    useEffect(() => {\n        //メモリリーク対策\n        let isMounted = true\n\n        const getLikeAnime = async() => {\n            const isLikeData = await client.get(`/favorites/confirm/${animeList.id}`, { headers: {\n                \"access-token\": Cookies.get(\"_access_token\"),\n                \"client\": Cookies.get(\"_client\"),\n                \"uid\": Cookies.get(\"_uid\")\n              }})\n            let isLike = isLikeData.data\n            setIsLike(isLike)\n        }\n        if(isMounted) getLikeAnime()\n\n        return () => {\n            isMounted = false\n        }\n    }, [isLike])\n\n    return (\n        <>\n            <Box w={{base: '300px', md: '500px'}} h={{base: '240px', md: '330px'}} bg='white' borderRadius='10px' m='15px 5px' p='0 0 10px 0' border='solid 1px #e0e0e0' position='relative'>\n                <Link as='a' href={animeList.official_site_url} target='_blank'>\n                    <Box display='block' m='0 0 8px' overflow='hidden' borderRadius='10px 10px 0 0'>\n                        <motion.div variants={scale} whileHover='hoverAction' >\n                            <Image src={image}  w='calc(100% + 20px)' objectFit='cover' maxH={{base: '200px', md: '260px'}}/>\n                            {/* <motion.h1 variants={visible} initial='hidden' whileHover='hoverAction'>\n                                View Official Site\n                            </motion.h1> */}\n                        </motion.div>\n                    </Box>\n                </Link>\n                <Flex align='flex-start' flexDirection='column' m='10px 15px 0'>\n                    <Text as='h1' fontSize=\"md\" fontWeight='800'>{animeList.title}</Text>\n                    <ReviewModal />\n                </Flex> \n                <Flex justify='flex-end' w='100%'>\n                    <Box position='absolute' bottom='5px' right='5px'>\n                        <motion.div\n                            onClick={toggleSetLike}\n                            animate={controls}\n                            transition={!isLike ? { duration: 0.2 , ease: \"easeIn\"} : { duration: 0.6 , ease: \"easeIn\"}}\n                        >\n                            <Icon\n                                as={isLike ? BsHeartFill : BsHeart }\n                                fontSize='20px' \n                                color={isLike ? '#FF1493': ''}\n                                cursor='pointer'\n                            />\n                        </motion.div>\n                    </Box>\n                </Flex>\n            </Box>\n        </>\n    )\n})\n\nexport default AnimeCard"]},"metadata":{},"sourceType":"module"}