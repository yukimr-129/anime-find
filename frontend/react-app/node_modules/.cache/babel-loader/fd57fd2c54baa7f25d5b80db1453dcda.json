{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useEffect } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { client } from \"../lib/api/client\";\nimport { ApiKeyValue } from '../store/ApiKeyValue';\nimport { useMessage } from './message/useMessage';\nimport { AnimeLists } from '../store/AnimeLists';\nexport const useAnimeApiSearch = () => {\n  _s();\n\n  const [apiKeyValue, setApiKeyValue] = useRecoilState(ApiKeyValue);\n  const [animeLists, setAnimeLists] = useRecoilState(AnimeLists);\n  const {\n    showMessage\n  } = useMessage();\n  const getAnimes = useCallback(async page => {\n    try {\n      const filter_season = `${apiKeyValue.year}-${apiKeyValue.cour}`;\n      const page = 1;\n      const getanime = await client.get('/api/annicts/search', {\n        params: {\n          filter_season,\n          page\n        }\n      });\n      const animeDate = getanime.data.works;\n      setAnimeLists(animeDate);\n    } catch (error) {\n      showMessage({\n        title: 'アニメ一覧の取得に失敗しました',\n        status: \"error\"\n      });\n    }\n  }, [apiKeyValue.year, apiKeyValue.cour]);\n  useEffect(() => {\n    getAnimes();\n  }, [apiKeyValue]);\n  return {\n    animeLists,\n    getAnimes\n  };\n};\n\n_s(useAnimeApiSearch, \"gsh0Q9uzo+Qb+5edze09A/QvClw=\", false, function () {\n  return [useRecoilState, useRecoilState, useMessage];\n});","map":{"version":3,"sources":["/usr/src/app/react-app/src/customHooks/useAnimeApiSearch.ts"],"names":["useCallback","useEffect","useRecoilState","client","ApiKeyValue","useMessage","AnimeLists","useAnimeApiSearch","apiKeyValue","setApiKeyValue","animeLists","setAnimeLists","showMessage","getAnimes","page","filter_season","year","cour","getanime","get","params","animeDate","data","works","error","title","status"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,SAASC,cAAT,QAA+C,QAA/C;AAEA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,SAASC,UAAT,QAA2B,qBAA3B;AAOA,OAAO,MAAMC,iBAAiC,GAAG,MAAM;AAAA;;AACnD,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCP,cAAc,CAACE,WAAD,CAAtD;AACA,QAAM,CAAEM,UAAF,EAAcC,aAAd,IAAgCT,cAAc,CAACI,UAAD,CAApD;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAkBP,UAAU,EAAlC;AAEI,QAAMQ,SAAS,GAAGb,WAAW,CAAC,MAAMc,IAAN,IAAuB;AACjD,QAAI;AACA,YAAMC,aAAa,GAAI,GAAEP,WAAW,CAACQ,IAAK,IAAGR,WAAW,CAACS,IAAK,EAA9D;AACA,YAAMH,IAAI,GAAG,CAAb;AACA,YAAMI,QAAQ,GAAG,MAAMf,MAAM,CAACgB,GAAP,CAAW,qBAAX,EAAkC;AACrDC,QAAAA,MAAM,EAAE;AACJL,UAAAA,aADI;AAEJD,UAAAA;AAFI;AAD6C,OAAlC,CAAvB;AAMA,YAAMO,SAA0B,GAAGH,QAAQ,CAACI,IAAT,CAAcC,KAAjD;AACAZ,MAAAA,aAAa,CAACU,SAAD,CAAb;AAEH,KAZD,CAYE,OAAOG,KAAP,EAAc;AACZZ,MAAAA,WAAW,CAAC;AAACa,QAAAA,KAAK,EAAE,iBAAR;AAA2BC,QAAAA,MAAM,EAAE;AAAnC,OAAD,CAAX;AACH;AACH,GAhB2B,EAgBzB,CAAClB,WAAW,CAACQ,IAAb,EAAmBR,WAAW,CAACS,IAA/B,CAhByB,CAA7B;AAkBAhB,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,SAAS;AACZ,GAFQ,EAEN,CAACL,WAAD,CAFM,CAAT;AAIJ,SAAO;AAAEE,IAAAA,UAAF;AAAcG,IAAAA;AAAd,GAAP;AACH,CA5BM;;GAAMN,iB;UAC+BL,c,EACFA,c,EACdG,U","sourcesContent":["import { useCallback, useEffect } from 'react'\nimport { useRecoilState, useRecoilValue } from 'recoil'\n\nimport { client } from \"../lib/api/client\"\nimport { ApiKeyValue } from '../store/ApiKeyValue'\nimport { useMessage } from './message/useMessage'\nimport { AnnictApiType } from '../types/api/AnnictApiType'\nimport { AnimeLists } from '../store/AnimeLists'\n\ntype AnimeApiSearch = () => {\n        animeLists: AnnictApiType[];\n        getAnimes: (page: number) => void\n}\n\nexport const useAnimeApiSearch: AnimeApiSearch = () => {\n    const [ apiKeyValue, setApiKeyValue ] = useRecoilState(ApiKeyValue)\n    const [ animeLists, setAnimeLists ] = useRecoilState(AnimeLists)\n    const { showMessage } = useMessage()\n        \n        const getAnimes = useCallback(async(page: number) => {\n            try {\n                const filter_season = `${apiKeyValue.year}-${apiKeyValue.cour}`\n                const page = 1\n                const getanime = await client.get('/api/annicts/search', {\n                    params: {\n                        filter_season,\n                        page\n                    }\n                })\n                const animeDate: AnnictApiType[] = getanime.data.works\n                setAnimeLists(animeDate)\n            \n            } catch (error) {\n                showMessage({title: 'アニメ一覧の取得に失敗しました', status: \"error\"})\n            }\n         }, [apiKeyValue.year, apiKeyValue.cour])\n\n        useEffect(() => {\n            getAnimes()        \n        }, [apiKeyValue])\n\n    return { animeLists, getAnimes }\n}"]},"metadata":{},"sourceType":"module"}