{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { getReviewsList } from \"lib/api/review/review\";\nimport { AnimeReviewList } from \"store/AnimeReviewList\";\nimport { useMessage } from \"./message/useMessage\";\nexport const useGetAnimeReviews = id => {\n  _s();\n\n  const [reviewsList, setReviewsList] = useRecoilState(AnimeReviewList);\n  const [loadFlag, setLoadFlag] = useState(false);\n  const {\n    showMessage\n  } = useMessage();\n  useEffect(() => {\n    let isMounted = true;\n\n    const getReviews = async id => {\n      try {\n        const res = await getReviewsList(id);\n        setReviewsList(res.data);\n        setLoadFlag(true);\n      } catch (error) {\n        showMessage({\n          title: 'アニメ一覧の取得に失敗しました',\n          status: \"error\"\n        });\n      }\n    };\n\n    isMounted && getReviews(id);\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  return {\n    reviewsList,\n    loadFlag\n  };\n};\n\n_s(useGetAnimeReviews, \"gEUKPjiW4ekc5Sq6fSJ+hOGDJgc=\", false, function () {\n  return [useRecoilState, useMessage];\n});","map":{"version":3,"sources":["/usr/src/app/react-app/src/customHooks/useGetAnimeReviews.ts"],"names":["useEffect","useState","useRecoilState","getReviewsList","AnimeReviewList","useMessage","useGetAnimeReviews","id","reviewsList","setReviewsList","loadFlag","setLoadFlag","showMessage","isMounted","getReviews","res","data","error","title","status"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,QAA/B;AAEA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAOA,OAAO,MAAMC,kBAAkB,GAAIC,EAAD,IAAgB;AAAA;;AAC9C,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCP,cAAc,CAACE,eAAD,CAAtD;AACA,QAAM,CAAEM,QAAF,EAAYC,WAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAkBP,UAAU,EAAlC;AAGAL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIa,SAAS,GAAG,IAAhB;;AACA,UAAMC,UAAU,GAAG,MAAMP,EAAN,IAAqB;AACpC,UAAI;AACA,cAAMQ,GAAG,GAAG,MAAMZ,cAAc,CAACI,EAAD,CAAhC;AACAE,QAAAA,cAAc,CAACM,GAAG,CAACC,IAAL,CAAd;AACAL,QAAAA,WAAW,CAAC,IAAD,CAAX;AACH,OAJD,CAIE,OAAOM,KAAP,EAAc;AACZL,QAAAA,WAAW,CAAC;AAACM,UAAAA,KAAK,EAAE,iBAAR;AAA2BC,UAAAA,MAAM,EAAE;AAAnC,SAAD,CAAX;AACH;AACJ,KARD;;AAUAN,IAAAA,SAAS,IAAIC,UAAU,CAACP,EAAD,CAAvB;AAEA,WAAO,MAAM;AAAEM,MAAAA,SAAS,GAAG,KAAZ;AAAmB,KAAlC;AACH,GAfQ,EAeN,EAfM,CAAT;AAmBA,SAAO;AAAEL,IAAAA,WAAF;AAAeE,IAAAA;AAAf,GAAP;AACH,CA1BM;;GAAMJ,kB;UAC+BJ,c,EAEhBG,U","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useRecoilState } from \"recoil\"\n\nimport { getReviewsList } from \"lib/api/review/review\"\nimport { AnimeReviewList } from \"store/AnimeReviewList\"\nimport { useMessage } from \"./message/useMessage\"\nimport { AnimeReviewType } from \"types/review/AnimeReviewType\"\n\ntype AnimeApiSearch = () => {\n    reviewsList: AnimeReviewType[];\n}\n\nexport const useGetAnimeReviews = (id: string) => {\n    const [ reviewsList, setReviewsList ] = useRecoilState(AnimeReviewList)\n    const [ loadFlag, setLoadFlag ] = useState(false)\n    const { showMessage } = useMessage()\n\n    \n    useEffect(() => {\n        let isMounted = true\n        const getReviews = async(id: string) => {\n            try {\n                const res = await getReviewsList(id)                \n                setReviewsList(res.data)\n                setLoadFlag(true)\n            } catch (error) {\n                showMessage({title: 'アニメ一覧の取得に失敗しました', status: \"error\"})\n            }\n        }\n\n        isMounted && getReviews(id)\n\n        return () => { isMounted = false }\n    }, [])\n\n\n\n    return { reviewsList, loadFlag }\n}"]},"metadata":{},"sourceType":"module"}