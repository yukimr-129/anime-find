{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-app/src/components/pages/auth/EditPassword.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Divider, Flex, FormControl, FormErrorMessage, FormLabel, Heading, Input, VStack } from \"@chakra-ui/react\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditPassword = () => {\n  _s();\n\n  var _errors$name, _errors$name2;\n\n  const {\n    register,\n    watch,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: 'all',\n    defaultValues: {\n      password: '',\n      passwordConfirmation: ''\n    }\n  });\n\n  const handleUpdatePassword = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      justify: \"center\",\n      align: \"center\",\n      h: \"100%\",\n      mt: \"90px\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        bg: \"white\",\n        w: \"2xl\",\n        p: 4,\n        borderRadius: \"10px\",\n        shadow: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h1\",\n          size: \"lg\",\n          textAlign: \"center\",\n          children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u5909\\u66F4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          my: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(handleUpdatePassword),\n          children: /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 5,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              id: \"password\",\n              isRequired: true,\n              isInvalid: errors.password ? true : false,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u30CD\\u30FC\\u30E0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"password\",\n                ...register('password', {\n                  required: true,\n                  maxLength: 10\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                children: [((_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.type) === 'required' && 'ユーザーネームは必須です。', ((_errors$name2 = errors.name) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.type) === 'maxLength' && 'ユーザーネームは10文字以内で設定してください。']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              id: \"passwordConfirmation\",\n              isRequired: true,\n              isInvalid: errors.password ? true : false,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"password\" // name='email' \n                ,\n                ...register('passwordConfirmation', {\n                  required: 'メールアドレスは必須です。',\n                  pattern: {\n                    value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                    message: \"メールアドレス形式で入力してください。\"\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                children: errors.email && errors.email.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              disabled: !formState.isValid,\n              isLoading: formState.isSubmitting,\n              w: \"100%\",\n              color: \"white\",\n              bg: \"blue.400\",\n              _hover: {\n                opacity: 0.8\n              },\n              spinner: /*#__PURE__*/_jsxDEV(BeatLoader, {\n                size: 8,\n                color: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 186\n              }, this),\n              children: \"\\u66F4\\u65B0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(EditPassword, \"2W603LzNd6L7EeJL0fimpiKCN4s=\", false, function () {\n  return [useForm];\n});\n\n_c = EditPassword;\nexport default EditPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPassword\");","map":{"version":3,"sources":["/usr/src/app/react-app/src/components/pages/auth/EditPassword.tsx"],"names":["Box","Button","Divider","Flex","FormControl","FormErrorMessage","FormLabel","Heading","Input","VStack","useForm","EditPassword","register","watch","handleSubmit","formState","errors","mode","defaultValues","password","passwordConfirmation","handleUpdatePassword","required","maxLength","name","type","pattern","value","message","email","isValid","isSubmitting","opacity"],"mappings":"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","sourcesContent":["import { Box, Button, Center, Divider, Flex, FormControl, FormErrorMessage, FormLabel, Heading, Input, VStack } from \"@chakra-ui/react\"\nimport { useForm } from \"react-hook-form\"\nimport { EditPasswordUpdate } from \"types/form/FormInputs\"\n\nconst EditPassword = () => {\n    const { register, watch, handleSubmit, formState: {errors} } = useForm<EditPasswordUpdate>({\n        mode: 'all',\n        defaultValues: {\n            password: '',\n            passwordConfirmation: ''\n        }\n    })\n\n    const handleUpdatePassword = () => {\n\n    }\n    return (\n        <>\n            <Flex justify='center' align='center' h='100%' mt='90px'>\n                <Box bg='white' w='2xl' p={4} borderRadius='10px' shadow='md'>\n                    <Heading as='h1' size='lg' textAlign='center'>パスワード変更</Heading>\n                    <Divider my={4}/>\n                    <form onSubmit={handleSubmit(handleUpdatePassword)}>\n                        <VStack spacing={5}>\n                            <FormControl id='password' isRequired isInvalid={errors.password ? true : false}>\n                                <FormLabel>ユーザーネーム</FormLabel>\n                                <Input \n                                    type='password'\n                                    {...register('password', {required: true, maxLength: 10})}\n                                />\n                                <FormErrorMessage>\n                                    {errors.name?.type === 'required' && 'ユーザーネームは必須です。' }\n                                    {errors.name?.type === 'maxLength' && 'ユーザーネームは10文字以内で設定してください。' }\n                                </FormErrorMessage>\n                            </FormControl>\n                            <FormControl id='passwordConfirmation' isRequired isInvalid={errors.password ? true : false}>\n                                <FormLabel>メールアドレス</FormLabel>\n                                <Input \n                                   type='password'\n                                    // name='email' \n                                    {...register('passwordConfirmation', { required: 'メールアドレスは必須です。', pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"メールアドレス形式で入力してください。\"}, })}\n                                />\n                                <FormErrorMessage>\n                                    {errors.email && errors.email.message}\n                                </FormErrorMessage>\n                            </FormControl>\n                            <Button type=\"submit\" disabled={!formState.isValid} isLoading={formState.isSubmitting} w='100%' color='white' bg='blue.400' _hover={{opacity: 0.8}} spinner={<BeatLoader size={8} color=\"white\" />}>更新</Button>\n                        </VStack>\n                    </form>\n                </Box>\n            </Flex>\n\n        </>\n    )\n}\n\nexport default EditPassword"]},"metadata":{},"sourceType":"module"}