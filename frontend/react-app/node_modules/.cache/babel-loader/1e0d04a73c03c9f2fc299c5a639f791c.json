{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-app/src/components/pages/review/ReviewPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { memo, useState, useEffect, useRef } from \"react\";\nimport { Box, Button, Center, Image, Text, VStack } from \"@chakra-ui/react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport ReviewList from \"components/organisms/ReviewList\";\nimport { useGetAnimeReviews } from \"customHooks/useGetAnimeReviews\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewPage = /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n\n  const [loadIndex, setLoadIndex] = useState(4);\n  const [isEmpty, setIsEmpty] = useState(true);\n  const {\n    state\n  } = useLocation();\n  const {\n    anime_id\n  } = useParams();\n  const latestCount = useRef(listCount);\n  const {\n    reviewsList,\n    loadFlag,\n    listCount\n  } = useGetAnimeReviews(anime_id);\n  const image = state ? state : 'https://lab.esprlog.net/annict/img/no_image.png'; //「さらに表示」ボタンの制御\n\n  const displayMore = () => {\n    if (loadIndex < listCount) {\n      setLoadIndex(prevState => prevState + 4);\n    }\n  }; //レビューリスト取得後stateをセット\n\n\n  useEffect(() => {\n    let isMounted = true;\n\n    if (loadFlag) {\n      const list = [...reviewsList];\n      isMounted && setListCount(list.length);\n      latestCount.current = listCount;\n\n      const checkLodaList = () => {\n        loadIndex > latestCount.current && setIsEmpty(true);\n      };\n\n      isMounted && checkLodaList();\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, [loadFlag]); //レビューリストを全て表示したらボタンを非活性\n\n  useEffect(() => {\n    let isMounted = true;\n\n    if (loadFlag) {\n      latestCount.current = listCount;\n\n      const checkLodaList = () => {\n        loadIndex > latestCount.current ? setIsEmpty(true) : setIsEmpty(false);\n      };\n\n      isMounted && checkLodaList();\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, [loadIndex]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    w: {\n      base: '80%',\n      md: '60%'\n    },\n    h: \"100%\",\n    bg: \"#ffff\",\n    m: \"100px auto 20px auto\",\n    borderRadius: \"10px\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      w: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        src: image,\n        borderRadius: \"10px 10px 0 0\",\n        w: \"100%\",\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        as: \"h2\",\n        fontWeight: \"bold\",\n        children: \"\\u30EC\\u30D3\\u30E5\\u30FC\\u4E00\\u89A7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 5,\n        align: \"start\",\n        children: reviewsList ? reviewsList.slice(0, loadIndex).map((review, key) => /*#__PURE__*/_jsxDEV(ReviewList, {\n          review: review\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this)) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Center, {\n        mt: 10,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"teal\",\n          disabled: isEmpty,\n          onClick: displayMore,\n          variant: \"solid\",\n          children: \"\\u3055\\u3089\\u306B\\u8868\\u793A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}, \"x+WlLA58O089GJmnH9imphZoyd4=\", false, function () {\n  return [useLocation, useParams, useGetAnimeReviews];\n}));\n_c2 = ReviewPage;\nexport default ReviewPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReviewPage$memo\");\n$RefreshReg$(_c2, \"ReviewPage\");","map":{"version":3,"sources":["/usr/src/app/react-app/src/components/pages/review/ReviewPage.tsx"],"names":["memo","useState","useEffect","useRef","Box","Button","Center","Image","Text","VStack","useLocation","useParams","ReviewList","useGetAnimeReviews","ReviewPage","loadIndex","setLoadIndex","isEmpty","setIsEmpty","state","anime_id","latestCount","listCount","reviewsList","loadFlag","image","displayMore","prevState","isMounted","list","setListCount","length","current","checkLodaList","base","md","slice","map","review","key"],"mappings":"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","sourcesContent":["import { memo, useState, VFC, useEffect, useCallback, useRef } from \"react\";\n\nimport { Box, Button, Center, Image, Text, VStack } from \"@chakra-ui/react\";\nimport { useLocation, useParams } from \"react-router-dom\";\n\nimport ReviewList from \"components/organisms/ReviewList\";\nimport { useGetAnimeReviews } from \"customHooks/useGetAnimeReviews\";\n\nconst ReviewPage: VFC = memo(() => {\n    const [ loadIndex, setLoadIndex ] = useState(4)\n    const [ isEmpty, setIsEmpty ] = useState(true);\n    const { state } = useLocation<string>()\n    const { anime_id } = useParams<{anime_id: string}>()\n    const latestCount = useRef(listCount)\n\n    const { reviewsList, loadFlag, listCount } = useGetAnimeReviews(anime_id)\n\n    const image = state ? state : 'https://lab.esprlog.net/annict/img/no_image.png'\n    \n    //「さらに表示」ボタンの制御\n    const displayMore = () => {\n        if(loadIndex < listCount) {\n            setLoadIndex((prevState) => prevState + 4);\n        }\n    }\n\n    //レビューリスト取得後stateをセット\n    useEffect(() => {\n        let isMounted = true \n        \n        if(loadFlag){\n            const list = [...reviewsList]\n            isMounted && setListCount(list.length)\n            latestCount.current = listCount\n            const checkLodaList = () => {\n                loadIndex > latestCount.current && setIsEmpty(true)\n            }\n            isMounted && checkLodaList()\n        }\n        return () => { isMounted = false }\n    }, [ loadFlag ])\n\n    //レビューリストを全て表示したらボタンを非活性\n    useEffect(() => {\n        let isMounted = true \n\n        if(loadFlag){\n            latestCount.current = listCount\n            \n            const checkLodaList = () => {\n                loadIndex > latestCount.current ? setIsEmpty(true) : setIsEmpty(false)\n            }\n            isMounted && checkLodaList()\n        }\n        return () => { isMounted = false }\n    }, [ loadIndex ])\n\n\n    return (\n        <Box w={{base: '80%', md: '60%'}} h='100%' bg='#ffff' m='100px auto 20px auto' borderRadius='10px'>\n            <Box w='100%'>\n                <Image src={image} borderRadius='10px 10px 0 0' w='100%' objectFit='cover'/>\n            </Box>\n\n            <Box p={3}>\n                <Text as='h2' fontWeight='bold'>レビュー一覧</Text>\n                <VStack spacing={5} align='start'>\n                    {reviewsList ? (\n                        reviewsList.slice(0, loadIndex).map((review, key) => (\n                            <ReviewList key={key} review={review}/>\n                        ))\n                        ) : null }\n                </VStack>\n                <Center mt={10}>\n                    <Button\n                    colorScheme='teal'\n                    disabled={isEmpty}\n                    onClick={displayMore}\n                    variant=\"solid\"\n                    >\n                        さらに表示\n                    </Button>\n                </Center>\n            </Box>\n        </Box>\n    )\n})\n\nexport default ReviewPage"]},"metadata":{},"sourceType":"module"}