{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from 'react';\nimport { getReviewCount } from 'lib/api/review/review';\nexport const useGetReviewCount = id => {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const [rate, setRate] = useState(0);\n  const getReviewStatus = useCallback(async () => {\n    try {\n      const reviewCount = await getReviewCount(id);\n      const {\n        review_count,\n        average_rate\n      } = reviewCount.data;\n      review_count && setCount(review_count);\n      average_rate && setRate(average_rate);\n    } catch (error) {\n      console.error(error);\n    }\n  }, [count, rate]);\n  useEffect(() => {\n    let isMounted = true;\n    isMounted && getReviewStatus();\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  return {\n    count,\n    rate\n  };\n};\n\n_s(useGetReviewCount, \"4XoHu8kyMYjLkwn9vU34KJC6uDI=\");","map":{"version":3,"sources":["/usr/src/app/react-app/src/customHooks/useGetReviewCount.ts"],"names":["useCallback","useEffect","useState","getReviewCount","useGetReviewCount","id","count","setCount","rate","setRate","getReviewStatus","reviewCount","review_count","average_rate","data","error","console","isMounted"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAIA,SAASC,cAAT,QAA+B,uBAA/B;AAOA,OAAO,MAAMC,iBAA8B,GAAIC,EAAD,IAAgB;AAAA;;AAC1D,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBL,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAAEM,IAAF,EAAQC,OAAR,IAAmBP,QAAQ,CAAC,CAAD,CAAjC;AAEA,QAAMQ,eAAe,GAAGV,WAAW,CAAC,YAAW;AAC3C,QAAI;AACA,YAAMW,WAAW,GAAG,MAAMR,cAAc,CAACE,EAAD,CAAxC;AACA,YAAM;AAAEO,QAAAA,YAAF;AAAgBC,QAAAA;AAAhB,UAAiCF,WAAW,CAACG,IAAnD;AAEAF,MAAAA,YAAY,IAAIL,QAAQ,CAACK,YAAD,CAAxB;AACAC,MAAAA,YAAY,IAAIJ,OAAO,CAACI,YAAD,CAAvB;AAEH,KAPD,CAOE,OAAOE,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ,GAXkC,EAWhC,CAACT,KAAD,EAAQE,IAAR,CAXgC,CAAnC;AAaAP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgB,SAAS,GAAG,IAAhB;AACAA,IAAAA,SAAS,IAAIP,eAAe,EAA5B;AACA,WAAO,MAAM;AACTO,MAAAA,SAAS,GAAG,KAAZ;AACH,KAFD;AAGH,GANQ,EAMN,EANM,CAAT;AAQA,SAAO;AAAEX,IAAAA,KAAF;AAASE,IAAAA;AAAT,GAAP;AACH,CA1BM;;GAAMJ,iB","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\n\nimport Cookies from \"js-cookie\"\nimport { client } from \"lib/api/client\"\nimport { getReviewCount } from 'lib/api/review/review'\n\ntype ReviewCount = (id: number) => {\n    count: number;\n    rate: number;\n}\n\nexport const useGetReviewCount: ReviewCount = (id: number) => {\n    const [ count, setCount ] = useState(0)\n    const [ rate, setRate] = useState(0)\n\n    const getReviewStatus = useCallback(async() => {\n        try {\n            const reviewCount = await getReviewCount(id)\n            const { review_count, average_rate } = reviewCount.data\n\n            review_count && setCount(review_count)\n            average_rate && setRate(average_rate)\n            \n        } catch (error) {\n            console.error(error)\n        }\n    }, [count, rate])\n\n    useEffect(() => {\n        let isMounted = true\n        isMounted && getReviewStatus()\n        return () => {\n            isMounted = false\n        }\n    }, [])\n\n    return { count, rate }\n}"]},"metadata":{},"sourceType":"module"}