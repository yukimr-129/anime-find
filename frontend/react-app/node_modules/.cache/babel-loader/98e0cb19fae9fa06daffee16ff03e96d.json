{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-app/src/components/pages/TopPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box } from \"@chakra-ui/react\";\nimport { useCallback, useEffect, memo } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { Cour } from \"../../store/Cour\";\nimport { Year } from \"../../store/Year\";\nimport { ApiKeyValue } from \"../../store/ApiKeyValue\";\nimport AnimeCardList from \"../organisms/AnimeCardList\";\nimport Search from \"../organisms/Search\";\nimport { useCourFactory } from \"../../customHooks/useCourFactory\";\nimport { useAnimeApiSearch } from \"../../customHooks/useAnimeApiSearch\";\nimport { useLocation } from \"react-router-dom\";\nimport { useMessage } from \"customHooks/message/useMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TopPage = /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n\n  const [apiKeyValue, setApiKeyValue] = useRecoilState(ApiKeyValue);\n  const selectYear = useRecoilValue(Year);\n  const selectCour = useRecoilValue(Cour);\n  const {\n    select_season\n  } = useCourFactory();\n  const {\n    animeLists,\n    getAnimes\n  } = useAnimeApiSearch();\n  const location = useLocation();\n  const {\n    showMessage\n  } = useMessage();\n  console.log(location);\n  const onClickAnimeSearch = useCallback(() => {\n    const rep = {\n      year: selectYear,\n      cour: select_season\n    };\n    setApiKeyValue(rep);\n  }, [selectYear, select_season]);\n  useEffect(() => {\n    getAnimes();\n  }, [apiKeyValue]);\n  console.log(animeLists);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      w: {\n        base: '98%',\n        md: '70%'\n      },\n      h: \"100%\",\n      bg: \"#ffff\",\n      m: \"100px auto 20px auto\",\n      borderRadius: \"10px\",\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        onClickAnimeSearch: onClickAnimeSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AnimeCardList, {\n        animeLists: animeLists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}, \"Xu+Lj7vMWpYMas6zY4pQnXsm/pg=\", false, function () {\n  return [useRecoilState, useRecoilValue, useRecoilValue, useCourFactory, useAnimeApiSearch, useLocation, useMessage];\n}));\n_c2 = TopPage;\nexport default TopPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TopPage$memo\");\n$RefreshReg$(_c2, \"TopPage\");","map":{"version":3,"sources":["/usr/src/app/react-app/src/components/pages/TopPage.tsx"],"names":["Box","useCallback","useEffect","memo","useRecoilState","useRecoilValue","Cour","Year","ApiKeyValue","AnimeCardList","Search","useCourFactory","useAnimeApiSearch","useLocation","useMessage","TopPage","apiKeyValue","setApiKeyValue","selectYear","selectCour","select_season","animeLists","getAnimes","location","showMessage","console","log","onClickAnimeSearch","rep","year","cour","base","md"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,kBAApB;AACA,SAAcC,WAAd,EAA2BC,SAA3B,EAAsCC,IAAtC,QAAkD,OAAlD;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,QAA/C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,iBAAT,QAAkC,qCAAlC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,QAA2B,gCAA3B;;;AAEA,MAAMC,OAAY,gBAAGZ,IAAI,SAAC,MAAM;AAAA;;AAC5B,QAAM,CAAEa,WAAF,EAAeC,cAAf,IAAiCb,cAAc,CAACI,WAAD,CAArD;AACA,QAAMU,UAAU,GAAGb,cAAc,CAACE,IAAD,CAAjC;AACA,QAAMY,UAAU,GAAGd,cAAc,CAACC,IAAD,CAAjC;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAoBT,cAAc,EAAxC;AACA,QAAM;AAAEU,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA4BV,iBAAiB,EAAnD;AACA,QAAMW,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAkBV,UAAU,EAAlC;AAEAW,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,QAAMI,kBAAkB,GAAG1B,WAAW,CAAC,MAAM;AACzC,UAAM2B,GAAG,GAAG;AAACC,MAAAA,IAAI,EAAEX,UAAP;AAAmBY,MAAAA,IAAI,EAAEV;AAAzB,KAAZ;AACAH,IAAAA,cAAc,CAACW,GAAD,CAAd;AACH,GAHqC,EAGnC,CAACV,UAAD,EAAaE,aAAb,CAHmC,CAAtC;AAOAlB,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,SAAS;AACZ,GAFQ,EAEN,CAACN,WAAD,CAFM,CAAT;AAKAS,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACA,sBACI;AAAA,2BAEI,QAAC,GAAD;AAAK,MAAA,CAAC,EAAE;AAACU,QAAAA,IAAI,EAAE,KAAP;AAAcC,QAAAA,EAAE,EAAE;AAAlB,OAAR;AAAkC,MAAA,CAAC,EAAC,MAApC;AAA2C,MAAA,EAAE,EAAC,OAA9C;AAAsD,MAAA,CAAC,EAAC,sBAAxD;AAA+E,MAAA,YAAY,EAAC,MAA5F;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,kBAAkB,EAAEL;AAA5B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,aAAD;AAAe,QAAA,UAAU,EAAEN;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADJ;AASH,CAjCwB;AAAA,UACkBjB,cADlB,EAEFC,cAFE,EAGFA,cAHE,EAIKM,cAJL,EAKaC,iBALb,EAMJC,WANI,EAOGC,UAPH;AAAA,GAAzB;MAAMC,O;AAmCN,eAAeA,OAAf","sourcesContent":["import { Box } from \"@chakra-ui/react\";\nimport { VFC, useCallback, useEffect, memo } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { Cour } from \"../../store/Cour\";\nimport { Year } from \"../../store/Year\";\nimport { ApiKeyValue } from \"../../store/ApiKeyValue\";\nimport AnimeCardList from \"../organisms/AnimeCardList\";\nimport Header from \"../organisms/Header\";\nimport Search from \"../organisms/Search\";\nimport { useCourFactory } from \"../../customHooks/useCourFactory\";\nimport { useAnimeApiSearch } from \"../../customHooks/useAnimeApiSearch\";\nimport { useLocation } from \"react-router-dom\";\nimport { useMessage } from \"customHooks/message/useMessage\";\n\nconst TopPage: VFC = memo(() => {\n    const [ apiKeyValue, setApiKeyValue] = useRecoilState(ApiKeyValue)\n    const selectYear = useRecoilValue(Year)\n    const selectCour = useRecoilValue(Cour)\n    const { select_season } = useCourFactory()\n    const { animeLists, getAnimes } = useAnimeApiSearch()\n    const location = useLocation()\n    const { showMessage } = useMessage()\n\n    console.log(location);\n    \n    const onClickAnimeSearch = useCallback(() => {\n        const rep = {year: selectYear, cour: select_season}\n        setApiKeyValue(rep)  \n    }, [selectYear, select_season])\n\n    \n\n    useEffect(() => {\n        getAnimes()        \n    }, [apiKeyValue])\n    \n    \n    console.log(animeLists);\n    return (\n        <>\n            {/* <Header /> */}\n            <Box w={{base: '98%', md: '70%'}} h='100%' bg='#ffff' m='100px auto 20px auto' borderRadius='10px'>\n                <Search onClickAnimeSearch={onClickAnimeSearch}/>\n                <AnimeCardList animeLists={animeLists} />\n            </Box>\n        </>\n    )\n})\n\nexport default TopPage"]},"metadata":{},"sourceType":"module"}