{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-app/src/index.tsx\";\nimport { ChakraProvider } from '@chakra-ui/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { RecoilRoot } from 'recoil';\nimport App from './App';\nimport theme from './defaultStyle/theme';\nimport reportWebVitals from './reportWebVitals';\nimport RecoilStatePersist from './RecoilStatePersist'; // const initializeState = ({set}) => {\n//   // for(const [key, value] of Storage.entries()) {\n//   //   set(myLookupOfAtomWithKey(key), JSON.parse(value).value);\n//   // }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(Storage.en);\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(RecoilRoot, {\n      children: [/*#__PURE__*/_jsxDEV(RecoilStatePersist, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChakraProvider, {\n        theme: theme,\n        children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/usr/src/app/react-app/src/index.tsx"],"names":["ChakraProvider","React","ReactDOM","BrowserRouter","RecoilRoot","App","theme","reportWebVitals","RecoilStatePersist","console","log","Storage","en","render","document","getElementById"],"mappings":";AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B,C,CAEA;AACA;AACA;AACA;AACA;;;AACAC,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,EAApB;AAGAV,QAAQ,CAACW,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,aAAD;AAAA,2BACE,QAAC,UAAD;AAAA,8BACE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAEP,KAAvB;AAAA,+BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAWEQ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAXF,E,CAcA;AACA;AACA;;AACAR,eAAe","sourcesContent":["import { ChakraProvider } from '@chakra-ui/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { RecoilRoot } from 'recoil';\nimport App from './App';\nimport theme from './defaultStyle/theme';\nimport reportWebVitals from './reportWebVitals';\nimport RecoilStatePersist from './RecoilStatePersist';\n\n// const initializeState = ({set}) => {\n//   // for(const [key, value] of Storage.entries()) {\n//   //   set(myLookupOfAtomWithKey(key), JSON.parse(value).value);\n//   // }\n// }\nconsole.log(Storage.en);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <RecoilRoot>\n        <RecoilStatePersist />\n        <ChakraProvider theme={theme}>\n          <App />\n        </ChakraProvider>\n      </RecoilRoot>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}