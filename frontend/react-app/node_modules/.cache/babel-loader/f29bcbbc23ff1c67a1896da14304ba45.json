{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useMessage } from \"customHooks/message/useMessage\";\nimport Cookies from \"js-cookie\";\nimport { useHistory } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport { CurrentUser, IsSignedIn } from \"store/auth/Auth\";\nimport { AuthLoding } from \"store/loding/AuthLoding\";\nimport { signOut } from \"./auth\";\nexport const libSignOut = async text => {\n  _s();\n\n  const history = useHistory();\n  const [isSignedIn, setIsSignedIn] = useRecoilState(IsSignedIn);\n  const [authLoding, setAuthLoding] = useRecoilState(AuthLoding);\n  const [currentUser, setCurrentUser] = useRecoilState(CurrentUser);\n  const {\n    showMessage\n  } = useMessage();\n  const res = await signOut();\n\n  if (res.data.success === true) {\n    // サインアウト時には各Cookieを削除\n    Cookies.remove(\"_access_token\");\n    Cookies.remove(\"_client\");\n    Cookies.remove(\"_uid\");\n    setIsSignedIn(false);\n    setAuthLoding(true);\n    setCurrentUser(undefined);\n    history.push('/signin');\n    showMessage({\n      title: `${text}`,\n      status: 'info'\n    });\n  }\n};\n\n_s(libSignOut, \"y8YHpJM870XgEZmUFGwjX3Haor4=\", false, function () {\n  return [useHistory, useRecoilState, useRecoilState, useRecoilState, useMessage];\n});","map":{"version":3,"sources":["/usr/src/app/react-app/src/lib/api/auth/libSignOut.ts"],"names":["useMessage","Cookies","useHistory","useRecoilState","CurrentUser","IsSignedIn","AuthLoding","signOut","libSignOut","text","history","isSignedIn","setIsSignedIn","authLoding","setAuthLoding","currentUser","setCurrentUser","showMessage","res","data","success","remove","undefined","push","title","status"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,gCAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,iBAAxC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,OAAT,QAAwB,QAAxB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAMC,IAAN,IAAuB;AAAA;;AAC7C,QAAMC,OAAO,GAAGR,UAAU,EAA1B;AACA,QAAM,CAAES,UAAF,EAAcC,aAAd,IAAgCT,cAAc,CAACE,UAAD,CAApD;AACA,QAAM,CAAEQ,UAAF,EAAcC,aAAd,IAA+BX,cAAc,CAACG,UAAD,CAAnD;AACA,QAAM,CAAES,WAAF,EAAeC,cAAf,IAAiCb,cAAc,CAACC,WAAD,CAArD;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAkBjB,UAAU,EAAlC;AAEA,QAAMkB,GAAG,GAAG,MAAMX,OAAO,EAAzB;;AAEA,MAAIW,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqB,IAAzB,EAA8B;AACzB;AACDnB,IAAAA,OAAO,CAACoB,MAAR,CAAe,eAAf;AACApB,IAAAA,OAAO,CAACoB,MAAR,CAAe,SAAf;AACApB,IAAAA,OAAO,CAACoB,MAAR,CAAe,MAAf;AAEAT,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,IAAAA,aAAa,CAAC,IAAD,CAAb;AAEAE,IAAAA,cAAc,CAACM,SAAD,CAAd;AACAZ,IAAAA,OAAO,CAACa,IAAR,CAAa,SAAb;AAEAN,IAAAA,WAAW,CAAC;AAACO,MAAAA,KAAK,EAAG,GAAEf,IAAK,EAAhB;AAAmBgB,MAAAA,MAAM,EAAE;AAA3B,KAAD,CAAX;AACH;AACJ,CAvBM;;GAAMjB,U;UACON,U,EACsBC,c,EACDA,c,EACEA,c,EACfH,U","sourcesContent":["import { useMessage } from \"customHooks/message/useMessage\"\nimport Cookies from \"js-cookie\"\nimport { useHistory } from \"react-router-dom\"\nimport { useRecoilState } from \"recoil\"\nimport { CurrentUser, IsSignedIn } from \"store/auth/Auth\"\nimport { AuthLoding } from \"store/loding/AuthLoding\"\nimport { signOut } from \"./auth\"\n\nexport const libSignOut = async(text: string) => {\n    const history = useHistory()\n    const [ isSignedIn, setIsSignedIn ] = useRecoilState(IsSignedIn)\n    const [ authLoding, setAuthLoding] = useRecoilState(AuthLoding)\n    const [ currentUser, setCurrentUser] = useRecoilState(CurrentUser)\n    const { showMessage } = useMessage()\n\n    const res = await signOut()\n            \n    if (res.data.success === true){\n         // サインアウト時には各Cookieを削除\n        Cookies.remove(\"_access_token\")\n        Cookies.remove(\"_client\")\n        Cookies.remove(\"_uid\")\n\n        setIsSignedIn(false)\n        setAuthLoding(true)\n        \n        setCurrentUser(undefined)\n        history.push('/signin')\n\n        showMessage({title: `${text}`, status: 'info'})\n    }\n}"]},"metadata":{},"sourceType":"module"}