{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-app/src/components/molecules/animeCard/AnimeCard.tsx\",\n    _s = $RefreshSig$();\n\nimport { Image } from '@chakra-ui/image';\nimport { Box, Flex, Link, Text } from '@chakra-ui/layout';\nimport React, { useState } from 'react';\nimport { BsHeartFill, BsHeart } from \"react-icons/bs\";\nimport { motion, useAnimation } from 'framer-motion';\nimport { Icon } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AnimeCard = () => {\n  _s();\n\n  const [isLike, setIsLike] = useState(false);\n  const controls = useAnimation();\n\n  const BsHeartFillIcon = /*#__PURE__*/_jsxDEV(BsHeartFill, {\n    size: \"30px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 29\n  }, this);\n\n  const BsHeartIcon = /*#__PURE__*/_jsxDEV(BsHeart, {\n    size: \"30px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 25\n  }, this);\n\n  const toggleLike = () => {\n    setIsLike(!isLike);\n    controls.start({\n      scale: [0, 0.5, 1]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      _hover: {\n        opacity: 0.8\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        w: {\n          base: '300px',\n          md: '500px'\n        },\n        h: {\n          base: '200px',\n          md: '300px'\n        },\n        bg: \"white\",\n        borderRadius: \"10px\",\n        m: \"15px 5px\",\n        p: \"0 0 10px 0\",\n        border: \"solid 1px #e0e0e0\",\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          bg: \"red\",\n          borderRadius: \"10px 10px 0 0\",\n          w: \"100%\",\n          h: \"80%\",\n          objectFit: \"cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          align: \"flex-start\",\n          m: \"5px 15px 0\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"xl\",\n            children: \"\\u30BF\\u30A4\\u30C8\\u30EB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          justify: \"flex-end\",\n          mr: 4,\n          mb: 3,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(motion.div, {\n              onClick: toggleLike,\n              animate: controls,\n              transition: {\n                duration: 0.2\n              },\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                as: isLike ? {} : BsHeartIcon,\n                size: \"100px\",\n                color: isLike ? '#FF1493' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AnimeCard, \"MtZTNL9Hjy4BAAvQopYjkaqPekQ=\", false, function () {\n  return [useAnimation];\n});\n\n_c = AnimeCard;\nexport default AnimeCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimeCard\");","map":{"version":3,"sources":["/usr/src/app/react-app/src/components/molecules/animeCard/AnimeCard.tsx"],"names":["Image","Box","Flex","Link","Text","React","useState","BsHeartFill","BsHeart","motion","useAnimation","Icon","AnimeCard","isLike","setIsLike","controls","BsHeartFillIcon","BsHeartIcon","toggleLike","start","scale","opacity","base","md","duration"],"mappings":"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","sourcesContent":["import { Image } from '@chakra-ui/image'\nimport { Badge, Box, Divider, Flex, HStack, Link, Stack, Text } from '@chakra-ui/layout'\nimport React, { memo, useCallback, VFC, useState } from 'react'\nimport { useHistory } from 'react-router'\nimport { BsHeartFill, BsHeart } from \"react-icons/bs\";\nimport { motion, useAnimation } from 'framer-motion';\nimport { Icon } from '@chakra-ui/react';\n\nconst AnimeCard: VFC = () => {\n    const [ isLike, setIsLike ] = useState(false)\n    const controls = useAnimation()\n\n    const BsHeartFillIcon = <BsHeartFill size='30px' />\n    const BsHeartIcon = <BsHeart size='30px' />\n\n    const toggleLike = () => {\n        setIsLike(!isLike)\n        controls.start({ scale: [0, 0.5, 1] })\n      }\n\n    return (\n        <>\n            <Link _hover={{opacity: 0.8}} >\n                <Box w={{base: '300px', md: '500px'}} h={{base: '200px', md: '300px'}} bg='white' borderRadius='10px' m='15px 5px' p='0 0 10px 0' border='solid 1px #e0e0e0'　>\n                    <Image bg='red' borderRadius='10px 10px 0 0' w='100%'　h='80%' objectFit='cover'/>\n                    <Flex align='flex-start' m='5px 15px 0'>\n                        <Text fontSize=\"xl\">タイトル</Text>\n                    </Flex>\n                    <Flex justify='flex-end' mr={4} mb={3} >\n                        <Box>\n                            <motion.div\n                                onClick={toggleLike}\n                                animate={controls}\n                                transition={{ duration: 0.2 }}\n                            >\n                                <Icon\n                                    as={isLike ? {} : BsHeartIcon }\n                                    size='100px' \n                                    color={isLike ? '#FF1493': ''}\n                                />\n                            </motion.div>\n                        </Box>\n                    </Flex>\n                </Box>\n            </Link>\n        </>\n    )\n}\n\nexport default AnimeCard"]},"metadata":{},"sourceType":"module"}