{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-app/src/components/atoms/form/YearInput.tsx\",\n    _s = $RefreshSig$();\n\nimport { FormLabel, Select } from \"@chakra-ui/react\";\nimport { useRecoilState } from \"recoil\";\nimport { Year } from '../../../store/Year';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst YearInput = () => {\n  _s();\n\n  const [selectYear, setSelectyear] = useRecoilState(Year);\n\n  const handleChangeYear = e => {\n    console.log(e);\n    setSelectyear(e.target.value);\n  };\n\n  for (let y = current_year; y >= 2014; y--) {\n    year.push(y);\n  }\n\n  console.log(selectYear);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      children: \"\\u897F\\u66A6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      onChange: handleChangeYear,\n      children: year.map((year, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: year\n      }, year, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(YearInput, \"fxuVBdTRF+ZJth42BnLsLKbbXIg=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = YearInput;\nexport default YearInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"YearInput\");","map":{"version":3,"sources":["/usr/src/app/react-app/src/components/atoms/form/YearInput.tsx"],"names":["FormLabel","Select","useRecoilState","Year","YearInput","selectYear","setSelectyear","handleChangeYear","e","console","log","target","value","y","current_year","year","push","map","index"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,kBAAlC;AAEA,SAASC,cAAT,QAA+B,QAA/B;AAEA,SAASC,IAAT,QAAqB,qBAArB;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCJ,cAAc,CAACC,IAAD,CAApD;;AAEA,QAAMI,gBAAkC,GAAIC,CAAD,IAAO;AAC9CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AAEAF,IAAAA,aAAa,CAACE,CAAC,CAACG,MAAF,CAASC,KAAV,CAAb;AACH,GAJD;;AAMA,OAAK,IAAIC,CAAC,GAAGC,YAAb,EAA2BD,CAAC,IAAI,IAAhC,EAAsCA,CAAC,EAAvC,EAA2C;AACvCE,IAAAA,IAAI,CAACC,IAAL,CAAUH,CAAV;AACH;;AACDJ,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AAEA,sBACI;AAAA,4BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEE,gBAAlB;AAAA,gBACKQ,IAAI,CAACE,GAAL,CAAS,CAACF,IAAD,EAAOG,KAAP,kBACN;AAAA,kBAAoBH;AAApB,SAAaA,IAAb;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAUH,CAxBD;;GAAMX,S;UACoCF,c;;;KADpCE,S;AA0BN,eAAeA,SAAf","sourcesContent":["import { FormLabel, Select } from \"@chakra-ui/react\"\nimport { ChangeEvent, ChangeEventHandler } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { useCurrentYearFactory } from \"../../../customHooks/useYearFactory\";\nimport { Year } from '../../../store/Year'\n\nconst YearInput = () => {\n    const [ selectYear, setSelectyear ] = useRecoilState(Year)\n\n    const handleChangeYear: handleChangeYear = (e) => {\n        console.log(e);\n        \n        setSelectyear(e.target.value)\n    }\n\n    for (let y = current_year; y >= 2014; y--) {\n        year.push(y)\n    }\n    console.log(selectYear);\n    \n    return (\n        <>\n            <FormLabel>西暦</FormLabel>\n            <Select onChange={handleChangeYear}>\n                {year.map((year, index) => (\n                    <option key={year}>{year}</option>\n                ))}\n            </Select>\n        </>\n    )\n}\n\nexport default YearInput"]},"metadata":{},"sourceType":"module"}