{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-app/src/components/pages/auth/SigninForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Divider, Flex, FormControl, FormLabel, Heading, Input } from \"@chakra-ui/react\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SigninForm = () => {\n  _s();\n\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    formState\n  } = useForm({\n    mode: 'all',\n    defaultValues: {\n      email: '',\n      password: ''\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      justify: \"center\",\n      align: \"center\",\n      h: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        bg: \"white\",\n        w: \"sm\",\n        p: 4,\n        borderRadius: \"10px\",\n        shadow: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h1\",\n          size: \"lg\",\n          textAlign: \"center\",\n          children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          my: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              id: \"email\",\n              children: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"test@example.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              id: \"email\",\n              children: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"test@example.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(SigninForm, \"TiZ76tct4yXAOi2D2ASdWxp8NPw=\", false, function () {\n  return [useForm];\n});\n\n_c = SigninForm;\nexport default SigninForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SigninForm\");","map":{"version":3,"sources":["/usr/src/app/react-app/src/components/pages/auth/SigninForm.tsx"],"names":["Box","Button","Divider","Flex","FormControl","FormLabel","Heading","Input","useForm","SigninForm","register","formState","errors","handleSubmit","mode","defaultValues","email","password"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,OAAtB,EAA+BC,IAA/B,EAAqCC,WAArC,EAAkDC,SAAlD,EAA6DC,OAA7D,EAAsEC,KAAtE,QAAyF,kBAAzF;AAEA,SAASC,OAAT,QAAwB,iBAAxB;;;;AAOA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF,KAAvB;AAAmCC,IAAAA,YAAnC;AAAiDF,IAAAA;AAAjD,MAA+DH,OAAO,CAAa;AACrFM,IAAAA,IAAI,EAAE,KAD+E;AAErFC,IAAAA,aAAa,EAAE;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC;AAFsE,GAAb,CAA5E;AAOA,sBACI;AAAA,2BAGQ,QAAC,IAAD;AAAM,MAAA,OAAO,EAAC,QAAd;AAAuB,MAAA,KAAK,EAAC,QAA7B;AAAsC,MAAA,CAAC,EAAC,OAAxC;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,OAAR;AAAgB,QAAA,CAAC,EAAC,IAAlB;AAAuB,QAAA,CAAC,EAAE,CAA1B;AAA6B,QAAA,YAAY,EAAC,MAA1C;AAAiD,QAAA,MAAM,EAAC,IAAxD;AAAA,gCACI,QAAC,OAAD;AAAS,UAAA,EAAE,EAAC,IAAZ;AAAiB,UAAA,IAAI,EAAC,IAAtB;AAA2B,UAAA,SAAS,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,OAAD;AAAS,UAAA,EAAE,EAAE;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,kCACI,QAAC,WAAD;AAAA,oCACI,QAAC,SAAD;AAAW,cAAA,EAAE,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,OAAZ;AAAoB,cAAA,IAAI,EAAC,OAAzB;AAAiC,cAAA,WAAW,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI,QAAC,WAAD;AAAA,oCACI,QAAC,SAAD;AAAW,cAAA,EAAE,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,OAAZ;AAAoB,cAAA,IAAI,EAAC,OAAzB;AAAiC,cAAA,WAAW,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eASI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAHR,mBADJ;AA0BH,CAlCD;;GAAMR,U;UACmED,O;;;KADnEC,U;AAoCN,eAAeA,UAAf","sourcesContent":["import { Box, Button, Divider, Flex, FormControl, FormLabel, Heading, Input, Text } from \"@chakra-ui/react\"\nimport Header from \"components/organisms/Header\"\nimport { useForm } from \"react-hook-form\"\n\ntype FormInputs = {\n    email: string;\n    password: string;\n  };\n\nconst SigninForm = () => {\n    const { register, formState: { errors }, handleSubmit, formState } = useForm<FormInputs>({\n        mode: 'all',\n        defaultValues: {\n            email: '',\n            password: '',\n          }\n    })\n    return (\n        <>\n            {/* <Header /> */}\n            {/* <Box> */}\n                <Flex justify='center' align='center' h='100vh'>\n                    <Box bg='white' w='sm' p={4} borderRadius='10px' shadow='md'>\n                        <Heading as='h1' size='lg' textAlign='center'>ログイン</Heading>\n                        <Divider my={4}/>\n                        <form>\n                            <FormControl>\n                                <FormLabel id=\"email\">メールアドレス</FormLabel>\n                                <Input type=\"email\" name='email' placeholder=\"test@example.com\"/>\n                            </FormControl>\n                            <FormControl>\n                                <FormLabel id=\"email\">メールアドレス</FormLabel>\n                                <Input type=\"email\" name='email' placeholder=\"test@example.com\"/>\n                            </FormControl>\n                            <Button>ログイン</Button>\n                        </form>\n                        \n                    </Box>\n                </Flex>  \n            {/* </Box> */}\n\n        </>\n    )\n}\n\nexport default SigninForm"]},"metadata":{},"sourceType":"module"}