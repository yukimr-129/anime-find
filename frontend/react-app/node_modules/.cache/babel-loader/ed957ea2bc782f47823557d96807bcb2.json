{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-app/src/components/atoms/form/YearInput.tsx\",\n    _s = $RefreshSig$();\n\nimport { FormLabel, Select } from \"@chakra-ui/react\";\nimport { useRecoilState } from \"recoil\";\nimport { Year } from '../';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst YearInput = () => {\n  _s();\n\n  const current_year = new Date().getFullYear();\n  const year = [];\n  const [selectYear, setSelectyear] = useRecoilState(Year);\n\n  for (let y = current_year; y >= 2014; y--) {\n    year.push(y);\n  }\n\n  console.log(current_year);\n  console.log(year);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      children: \"\\u897F\\u66A6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      children: year.map((year, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: year\n      }, year, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(YearInput, \"fxuVBdTRF+ZJth42BnLsLKbbXIg=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = YearInput;\nexport default YearInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"YearInput\");","map":{"version":3,"sources":["/usr/src/app/react-app/src/components/atoms/form/YearInput.tsx"],"names":["FormLabel","Select","useRecoilState","Year","YearInput","current_year","Date","getFullYear","year","selectYear","setSelectyear","y","push","console","log","map","index"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,kBAAlC;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,IAAT,QAAqB,KAArB;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAMC,YAAY,GAAI,IAAIC,IAAJ,EAAD,CAAaC,WAAb,EAArB;AACA,QAAMC,IAAc,GAAG,EAAvB;AACA,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCR,cAAc,CAACC,IAAD,CAApD;;AAEA,OAAK,IAAIQ,CAAC,GAAGN,YAAb,EAA2BM,CAAC,IAAI,IAAhC,EAAsCA,CAAC,EAAvC,EAA2C;AACvCH,IAAAA,IAAI,CAACI,IAAL,CAAUD,CAAV;AACH;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAYT,YAAZ;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAEA,sBACI;AAAA,4BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAA,gBACKA,IAAI,CAACO,GAAL,CAAS,CAACP,IAAD,EAAOQ,KAAP,kBACN;AAAA,kBAAoBR;AAApB,SAAaA,IAAb;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAUH,CArBD;;GAAMJ,S;UAGoCF,c;;;KAHpCE,S;AAuBN,eAAeA,SAAf","sourcesContent":["import { FormLabel, Select } from \"@chakra-ui/react\"\nimport { useRecoilState } from \"recoil\";\nimport { Year } from '../'\n\nconst YearInput = () => {\n    const current_year = (new Date()).getFullYear();\n    const year: number[] = []\n    const [ selectYear, setSelectyear ] = useRecoilState(Year)\n\n    for (let y = current_year; y >= 2014; y--) {\n        year.push(y)\n    }\n    console.log(current_year);\n    console.log(year);\n    \n    return (\n        <>\n            <FormLabel>西暦</FormLabel>\n            <Select>\n                {year.map((year, index) => (\n                    <option key={year}>{year}</option>\n                ))}\n            </Select>\n        </>\n    )\n}\n\nexport default YearInput"]},"metadata":{},"sourceType":"module"}