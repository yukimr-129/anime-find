{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useMessage } from \"customHooks/message/useMessage\";\nimport Cookies from \"js-cookie\";\nimport { signOut } from \"lib/api/auth/auth\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSetRecoilState } from \"recoil\";\nimport { CurrentUser, IsSignedIn } from \"store/auth/Auth\";\nimport { AuthLoding } from \"store/loding/AuthLoding\";\nexport const useSignOut = text => {\n  _s();\n\n  const history = useHistory();\n  const setIsSignedIn = useSetRecoilState(IsSignedIn);\n  const setAuthLoding = useSetRecoilState(AuthLoding);\n  const setCurrentUser = useSetRecoilState(CurrentUser);\n  const {\n    showMessage\n  } = useMessage();\n\n  const executionSignOut = async () => {\n    const res = await signOut();\n\n    if (res.data.success === true) {\n      // サインアウト時には各Cookieを削除\n      Cookies.remove(\"_access_token\");\n      Cookies.remove(\"_client\");\n      Cookies.remove(\"_uid\");\n      setIsSignedIn(false);\n      setAuthLoding(true);\n      setCurrentUser(undefined);\n      history.push('/signin');\n      showMessage({\n        title: `${text}`,\n        status: 'info'\n      });\n    }\n  };\n\n  return {\n    executionSignOut\n  };\n};\n\n_s(useSignOut, \"Kp6iguArI2hrq1htvzR0I6lq01o=\", false, function () {\n  return [useHistory, useSetRecoilState, useSetRecoilState, useSetRecoilState, useMessage];\n});","map":{"version":3,"sources":["/usr/src/app/react-app/src/customHooks/auth/useSignOut.ts"],"names":["useMessage","Cookies","signOut","useHistory","useSetRecoilState","CurrentUser","IsSignedIn","AuthLoding","useSignOut","text","history","setIsSignedIn","setAuthLoding","setCurrentUser","showMessage","executionSignOut","res","data","success","remove","undefined","push","title","status"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,gCAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAyBC,iBAAzB,QAAkD,QAAlD;AAEA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,iBAAxC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AAEA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAkB;AAAA;;AACxC,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAMQ,aAAa,GAAGP,iBAAiB,CAACE,UAAD,CAAvC;AACA,QAAMM,aAAa,GAAGR,iBAAiB,CAACG,UAAD,CAAvC;AACA,QAAMM,cAAc,GAAGT,iBAAiB,CAACC,WAAD,CAAxC;AACA,QAAM;AAAES,IAAAA;AAAF,MAAkBd,UAAU,EAAlC;;AAEA,QAAMe,gBAAgB,GAAG,YAAW;AAChC,UAAMC,GAAG,GAAG,MAAMd,OAAO,EAAzB;;AAEA,QAAIc,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqB,IAAzB,EAA8B;AACzB;AACDjB,MAAAA,OAAO,CAACkB,MAAR,CAAe,eAAf;AACAlB,MAAAA,OAAO,CAACkB,MAAR,CAAe,SAAf;AACAlB,MAAAA,OAAO,CAACkB,MAAR,CAAe,MAAf;AAEAR,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAC,MAAAA,aAAa,CAAC,IAAD,CAAb;AAEAC,MAAAA,cAAc,CAACO,SAAD,CAAd;AACAV,MAAAA,OAAO,CAACW,IAAR,CAAa,SAAb;AAEAP,MAAAA,WAAW,CAAC;AAACQ,QAAAA,KAAK,EAAG,GAAEb,IAAK,EAAhB;AAAmBc,QAAAA,MAAM,EAAE;AAA3B,OAAD,CAAX;AACH;AACJ,GAjBD;;AAmBA,SAAO;AAAER,IAAAA;AAAF,GAAP;AACH,CA3BM;;GAAMP,U;UACOL,U,EACMC,iB,EACAA,iB,EACCA,iB,EACCJ,U","sourcesContent":["import { useMessage } from \"customHooks/message/useMessage\"\nimport Cookies from \"js-cookie\"\nimport { signOut } from \"lib/api/auth/auth\"\nimport { useHistory } from \"react-router-dom\"\nimport { useRecoilState, useSetRecoilState } from \"recoil\"\n\nimport { CurrentUser, IsSignedIn } from \"store/auth/Auth\"\nimport { AuthLoding } from \"store/loding/AuthLoding\"\n\nexport const useSignOut = (text: string) => {\n    const history = useHistory()\n    const setIsSignedIn = useSetRecoilState(IsSignedIn)\n    const setAuthLoding = useSetRecoilState(AuthLoding)\n    const setCurrentUser = useSetRecoilState(CurrentUser)\n    const { showMessage } = useMessage()\n\n    const executionSignOut = async() => {\n        const res = await signOut()\n                \n        if (res.data.success === true){\n             // サインアウト時には各Cookieを削除\n            Cookies.remove(\"_access_token\")\n            Cookies.remove(\"_client\")\n            Cookies.remove(\"_uid\")\n    \n            setIsSignedIn(false)\n            setAuthLoding(true)\n            \n            setCurrentUser(undefined)\n            history.push('/signin')\n    \n            showMessage({title: `${text}`, status: 'info'})\n        }\n    }\n    \n    return { executionSignOut }\n}"]},"metadata":{},"sourceType":"module"}