{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-app/src/routing/Router.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport TopPage from \"../components/pages/TopPage\";\nimport SignUpForm from '../components/pages/auth/SignUpForm';\nimport SigninForm from '../components/pages/auth/SigninForm';\nimport { AuthLoding } from \"store/loding/AuthLoding\";\nimport { CurrentUser, IsSignedIn } from \"store/auth/Auth\";\nimport { useRecoilState } from \"recoil\";\nimport { getCurrentUser } from \"lib/api/auth/auth\";\nimport CommonLayout from 'components/templates/CommonLayout';\nimport FavoriteAnime from 'components/pages/favorites/FavoriteAnime';\nimport UserProfile from 'components/pages/auth/UserProfile';\nimport EditPassword from 'components/pages/auth/EditPassword';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Router = () => {\n  _s();\n\n  const [loding, setLoding] = useState(true);\n  const [authLoding, setAuthLoding] = useRecoilState(AuthLoding);\n  const [isSignedIn, setIsSignedIn] = useRecoilState(IsSignedIn);\n  const [currentUser, setCurrentUser] = useRecoilState(CurrentUser); // 認証済みのユーザーがいるかどうかチェック\n  // 確認できた場合はそのユーザーの情報を取得\n\n  const handleGetCurrentUser = async () => {\n    try {\n      const res = await getCurrentUser();\n      console.log(res);\n\n      if ((res === null || res === void 0 ? void 0 : res.data.is_login) === true) {\n        setIsSignedIn(true);\n        setCurrentUser(res === null || res === void 0 ? void 0 : res.data.data);\n        console.log(currentUser);\n      } else {\n        setIsSignedIn(false);\n        setCurrentUser(undefined);\n        console.log(\"No current user\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n\n    setAuthLoding(false);\n    console.log(authLoding);\n    console.log(isSignedIn);\n  };\n\n  useEffect(() => {\n    handleGetCurrentUser();\n  }, [isSignedIn]);\n  return /*#__PURE__*/_jsxDEV(CommonLayout, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/signup\",\n        render: () => /*#__PURE__*/_jsxDEV(SignUpForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/signin\",\n        render: () => /*#__PURE__*/_jsxDEV(SigninForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), !authLoding && isSignedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: () => /*#__PURE__*/_jsxDEV(TopPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/like/:user_id\",\n          render: () => /*#__PURE__*/_jsxDEV(FavoriteAnime, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile/:user_id\",\n          render: () => /*#__PURE__*/_jsxDEV(UserProfile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/edit-password/:user_id\",\n          render: () => /*#__PURE__*/_jsxDEV(EditPassword, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/signin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Router, \"ud+F8OgIzYG23cE648WX8ISxWKo=\", false, function () {\n  return [useRecoilState, useRecoilState, useRecoilState];\n});\n\n_c = Router;\nexport default Router;\n\nvar _c;\n\n$RefreshReg$(_c, \"Router\");","map":{"version":3,"sources":["/usr/src/app/react-app/src/routing/Router.tsx"],"names":["useEffect","useState","Redirect","Route","Switch","TopPage","SignUpForm","SigninForm","AuthLoding","CurrentUser","IsSignedIn","useRecoilState","getCurrentUser","CommonLayout","FavoriteAnime","UserProfile","EditPassword","Router","loding","setLoding","authLoding","setAuthLoding","isSignedIn","setIsSignedIn","currentUser","setCurrentUser","handleGetCurrentUser","res","console","log","data","is_login","undefined","err"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport { Redirect, Route, Switch } from \"react-router-dom\"\n\n\nimport TopPage from \"../components/pages/TopPage\"\nimport SignUpForm from '../components/pages/auth/SignUpForm'\nimport SigninForm from '../components/pages/auth/SigninForm'\nimport { AuthLoding } from \"store/loding/AuthLoding\"\nimport { CurrentUser, IsSignedIn } from \"store/auth/Auth\"\nimport { useRecoilState } from \"recoil\"\nimport { getCurrentUser } from \"lib/api/auth/auth\"\nimport CommonLayout from 'components/templates/CommonLayout'\nimport FavoriteAnime from 'components/pages/favorites/FavoriteAnime'\nimport UserProfile from 'components/pages/auth/UserProfile'\nimport EditPassword from 'components/pages/auth/EditPassword'\n\nconst Router = () => {\n    const [ loding, setLoding ] = useState(true)\n    const [ authLoding, setAuthLoding] = useRecoilState(AuthLoding)\n    const [ isSignedIn, setIsSignedIn ] = useRecoilState(IsSignedIn)\n    const [ currentUser, setCurrentUser ] = useRecoilState(CurrentUser)\n\n    // 認証済みのユーザーがいるかどうかチェック\n    // 確認できた場合はそのユーザーの情報を取得\n    const handleGetCurrentUser = async () => {\n        try {\n        const res = await getCurrentUser()\n        console.log(res);\n            \n            if (res?.data.is_login === true) {\n                setIsSignedIn(true)\n                setCurrentUser(res?.data.data)\n                console.log(currentUser)\n            } else {\n                setIsSignedIn(false)\n                setCurrentUser(undefined)\n                console.log(\"No current user\")\n            }\n        } catch (err) {\n            console.log(err)\n        }\n        \n        setAuthLoding(false)\n        console.log(authLoding);\n        console.log(isSignedIn);\n    }\n\n    useEffect(() => {\n        handleGetCurrentUser()\n    }, [isSignedIn])\n\n    return (\n        <CommonLayout>\n            <Switch>\n                <Route exact path=\"/signup\" render={() => (\n                    <SignUpForm />\n                )} />\n\n                <Route exact path=\"/signin\" render={() => (\n                    <SigninForm />\n                )} />\n                    \n                {!authLoding && isSignedIn ? (\n                    <>\n                        <Route exact path='/' render={() => (\n                            <TopPage />\n                        )} />\n                        <Route path='/like/:user_id' render={() => (\n                            <FavoriteAnime />\n                        )} />\n                        <Route path='/profile/:user_id' render={() => (\n                            <UserProfile />\n                        )} />\n                        <Route path='/edit-password/:user_id' render={() => (\n                            <EditPassword />\n                        )} />\n                    </>\n                ) : (\n                    <Redirect to=\"/signin\" />\n                )}\n\n                {/* <Route path='' render={() => (\n                    <Login />\n                )} /> */}\n                {/* <Route path='' render={() => (\n                    <MyAccount />\n                )} /> */}\n\n            </Switch>\n        </CommonLayout>\n    )\n}\n\nexport default Router"]},"metadata":{},"sourceType":"module"}