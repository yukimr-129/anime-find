{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-app/src/components/molecules/animeCard/AnimeCard.tsx\",\n    _s = $RefreshSig$();\n\nimport { Image } from '@chakra-ui/image';\nimport { Box, Flex, Link, Text } from '@chakra-ui/layout';\nimport React, { memo, useState, useEffect, useMemo } from 'react';\nimport { BsHeartFill, BsHeart } from \"react-icons/bs\";\nimport { motion, useAnimation } from 'framer-motion';\nimport { Icon, Tag } from '@chakra-ui/react';\nimport { Link as RouteLink } from \"react-router-dom\";\nimport { client } from 'lib/api/client';\nimport { useRecoilValue } from 'recoil';\nimport { CurrentUser, IsSignedIn } from 'store/auth/Auth';\nimport { useMessage } from 'customHooks/message/useMessage';\nimport Cookies from 'js-cookie';\nimport ReviewModal from '../reviewModal/ReviewModal';\nimport ReactStars from 'react-stars';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AnimeCard = /*#__PURE__*/memo(_c = _s(props => {\n  var _animeList$official_s;\n\n  _s();\n\n  const {\n    animeList\n  } = props;\n  const [isLike, setIsLike] = useState(false); // const [ toggleLike, setToggleLike ] = useState(false)\n\n  const currentUser = useRecoilValue(CurrentUser);\n  const isSignedIn = useRecoilValue(IsSignedIn);\n  const {\n    showMessage\n  } = useMessage();\n  const controls = useAnimation();\n  const image = animeList.images.recommended_url !== '' ? animeList.images.recommended_url : 'https://lab.esprlog.net/annict/img/no_image.png';\n  const like = useMemo(() => isLike, [isLike]);\n\n  const toggleLike = () => {\n    //ログインしているか確認\n    if (currentUser && isSignedIn) {\n      //お気に入り登録済か\n      if (isLike === false) {\n        try {\n          const createLike = async () => {\n            const favoriteParams = {\n              user_id: currentUser.id,\n              title: animeList.title,\n              official_url: animeList.official_site_url,\n              image_url: animeList.images.recommended_url,\n              twitter_username: animeList.twitter_username,\n              season: animeList.season_name_text,\n              api_id: animeList.id\n            };\n            const res = await client.post('/favorites/create', favoriteParams);\n          };\n\n          createLike();\n          setIsLike(true);\n          controls.start({\n            scale: [0, 0.5, 1]\n          });\n        } catch (error) {\n          showMessage({\n            title: 'お気に入り登録に失敗しました',\n            status: \"error\"\n          });\n        }\n      } else {\n        try {\n          const deleteLike = async () => {\n            const res = await client.delete(`/favorites/destroy/${animeList.id}`, {\n              headers: {\n                \"access-token\": Cookies.get(\"_access_token\"),\n                \"client\": Cookies.get(\"_client\"),\n                \"uid\": Cookies.get(\"_uid\")\n              }\n            });\n          };\n\n          deleteLike();\n          setIsLike(false);\n        } catch (error) {\n          showMessage({\n            title: 'お気に入り削除に失敗しました',\n            status: \"error\"\n          });\n        }\n      }\n    } else {\n      showMessage({\n        title: 'ログインが必要です',\n        status: \"error\"\n      });\n    }\n  }; //お気に入り有無反映(初回、再レンダリング時)\n\n\n  useEffect(() => {\n    //メモリリーク対策\n    let isMounted = true;\n\n    const getLikeAnime = async () => {\n      const isLikeData = await client.get(`/favorites/confirm/${animeList.id}`, {\n        headers: {\n          \"access-token\": Cookies.get(\"_access_token\"),\n          \"client\": Cookies.get(\"_client\"),\n          \"uid\": Cookies.get(\"_uid\")\n        }\n      });\n      let isLike = isLikeData.data;\n      isMounted && setIsLike(isLike);\n    };\n\n    isMounted && getLikeAnime();\n    return () => {\n      isMounted = false;\n    };\n  }, [like]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      w: {\n        base: '300px',\n        md: '500px'\n      },\n      h: {\n        base: '270px',\n        md: '360px'\n      },\n      bg: \"white\",\n      borderRadius: \"10px\",\n      m: \"15px 5px\",\n      p: \"0 0 10px 0\",\n      border: \"solid 1px #e0e0e0\",\n      position: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        as: \"a\",\n        href: (_animeList$official_s = animeList.official_site_url) !== null && _animeList$official_s !== void 0 ? _animeList$official_s : '',\n        target: \"_blank\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"block\",\n          m: \"0 0 8px\",\n          overflow: \"hidden\",\n          borderRadius: \"10px 10px 0 0\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: image,\n            w: \"calc(100% + 20px)\",\n            objectFit: \"cover\",\n            maxH: {\n              base: '200px',\n              md: '260px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          align: \"flex-start\",\n          m: \"10px 15px 0\",\n          children: [/*#__PURE__*/_jsxDEV(Tag, {\n            size: \"sm\",\n            variant: \"solid\",\n            colorScheme: \"teal\",\n            mr: 2,\n            children: animeList.media_text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            as: \"h1\",\n            fontSize: {\n              base: 'xs',\n              md: 'md'\n            },\n            fontWeight: \"800\",\n            children: animeList.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          justify: \"space-between\",\n          w: \"100%\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            position: \"absolute\",\n            bottom: \"5px\",\n            right: \"5px\",\n            children: /*#__PURE__*/_jsxDEV(motion.div, {\n              onClick: toggleLike,\n              animate: controls,\n              transition: !isLike ? {\n                duration: 0.2,\n                ease: \"easeIn\"\n              } : {\n                duration: 0.6,\n                ease: \"easeIn\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                as: isLike ? BsHeartFill : BsHeart,\n                fontSize: \"20px\",\n                color: isLike ? '#FF1493' : '',\n                cursor: \"pointer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            position: \"absolute\",\n            bottom: \"5px\",\n            left: \"15px\",\n            children: [/*#__PURE__*/_jsxDEV(RouteLink, {\n              to: {\n                pathname: `/review/${animeList.id}`,\n                state: animeList.images.recommended_url\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(Flex, {\n                  align: \"center\",\n                  _hover: {\n                    cursor: 'pointer'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(ReactStars, {\n                    edit: false\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    as: \"span\",\n                    fontSize: {\n                      base: '3px',\n                      md: '4px'\n                    },\n                    children: \"(\\u4F55\\u4EF6)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 67\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ReviewModal, {\n              id: animeList.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}, \"DWIohbi3F7eXG1+ygIxq6Vh9ND8=\", false, function () {\n  return [useRecoilValue, useRecoilValue, useMessage, useAnimation];\n}));\n_c2 = AnimeCard;\nexport default AnimeCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AnimeCard$memo\");\n$RefreshReg$(_c2, \"AnimeCard\");","map":{"version":3,"sources":["/usr/src/app/react-app/src/components/molecules/animeCard/AnimeCard.tsx"],"names":["Image","Box","Flex","Link","Text","React","memo","useState","useEffect","useMemo","BsHeartFill","BsHeart","motion","useAnimation","Icon","Tag","RouteLink","client","useRecoilValue","CurrentUser","IsSignedIn","useMessage","Cookies","ReviewModal","ReactStars","AnimeCard","props","animeList","isLike","setIsLike","currentUser","isSignedIn","showMessage","controls","image","images","recommended_url","like","toggleLike","createLike","favoriteParams","user_id","id","title","official_url","official_site_url","image_url","twitter_username","season","season_name_text","api_id","res","post","start","scale","error","status","deleteLike","delete","headers","get","isMounted","getLikeAnime","isLikeData","data","base","md","media_text","duration","ease","pathname","state","cursor"],"mappings":"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","sourcesContent":["import { Image } from '@chakra-ui/image'\nimport { Box, Flex, Link, Text } from '@chakra-ui/layout'\nimport React, { memo, VFC, useState, useEffect, useMemo } from 'react'\nimport { BsHeartFill, BsHeart } from \"react-icons/bs\";\nimport { motion, useAnimation } from 'framer-motion';\nimport { Icon, Tag, VStack } from '@chakra-ui/react';\nimport { Link as RouteLink } from \"react-router-dom\"\n\nimport { AnnictApiType } from '../../../types/api/AnnictApiType';\nimport { client } from 'lib/api/client';\nimport { useRecoilValue } from 'recoil';\nimport { CurrentUser, IsSignedIn } from 'store/auth/Auth';\nimport { useMessage } from 'customHooks/message/useMessage';\nimport Cookies from 'js-cookie';\nimport { FavoriteType } from 'types/favoriteAnime/FavoriteAnimeType';\nimport { scale, visible } from 'lib/motionVariants/variants';\nimport ReviewModal from '../reviewModal/ReviewModal';\nimport ReactStars from 'react-stars';\n\ntype Props = {\n    animeList: AnnictApiType;\n}\n\nconst AnimeCard: VFC<Props> = memo((props) => {\n    const { animeList } = props\n    const [ isLike, setIsLike ] = useState(false)\n    // const [ toggleLike, setToggleLike ] = useState(false)\n    const currentUser = useRecoilValue(CurrentUser)\n    const isSignedIn = useRecoilValue(IsSignedIn)\n    const { showMessage } = useMessage()\n    const controls = useAnimation()\n\n    const image = animeList.images.recommended_url !== '' ? animeList.images.recommended_url : 'https://lab.esprlog.net/annict/img/no_image.png'\n\n    const like = useMemo(() => isLike, [isLike])\n    \n    const toggleLike = () => {\n        //ログインしているか確認\n        if (currentUser && isSignedIn) {\n            //お気に入り登録済か\n            if (isLike === false) {\n                try {\n                    const createLike = async() => {\n                        const favoriteParams: FavoriteType = {\n                            user_id: currentUser.id,\n                            title: animeList.title,\n                            official_url: animeList.official_site_url,\n                            image_url: animeList.images.recommended_url,\n                            twitter_username: animeList.twitter_username,\n                            season: animeList.season_name_text,\n                            api_id: animeList.id,\n                        }\n            \n                        const res = await client.post('/favorites/create', favoriteParams)\n                    }\n                    createLike()\n                    setIsLike(true)\n                    controls.start({ scale: [0, 0.5, 1] })\n                } catch (error) {\n                    showMessage({title: 'お気に入り登録に失敗しました', status: \"error\"})\n                }\n            } else {\n                try {\n                    const deleteLike = async() => {        \n                        const res = await client.delete(`/favorites/destroy/${animeList.id}`, { headers: {\n                            \"access-token\": Cookies.get(\"_access_token\"),\n                            \"client\": Cookies.get(\"_client\"),\n                            \"uid\": Cookies.get(\"_uid\")\n                          }})\n                        \n                    }\n                    \n                    deleteLike()\n                    setIsLike(false)\n                } catch (error) {\n                    showMessage({title: 'お気に入り削除に失敗しました', status: \"error\"})\n                }\n            }\n        } else {\n            showMessage({title: 'ログインが必要です', status: \"error\"})\n        }\n    }\n\n    //お気に入り有無反映(初回、再レンダリング時)\n    useEffect(() => {\n        //メモリリーク対策\n        let isMounted = true\n\n        const getLikeAnime = async() => {\n            const isLikeData = await client.get(`/favorites/confirm/${animeList.id}`, { headers: {\n                \"access-token\": Cookies.get(\"_access_token\"),\n                \"client\": Cookies.get(\"_client\"),\n                \"uid\": Cookies.get(\"_uid\")\n              }})\n            let isLike = isLikeData.data\n            isMounted && setIsLike(isLike)\n        }\n        isMounted && getLikeAnime()\n\n        return () => {\n            isMounted = false\n        }\n    }, [like])\n\n    return (\n        <>\n            <Box w={{base: '300px', md: '500px'}} h={{base: '270px', md: '360px'}} bg='white' borderRadius='10px' m='15px 5px' p='0 0 10px 0' border='solid 1px #e0e0e0' position='relative'>\n                <Link as='a' href={animeList.official_site_url ?? ''} target='_blank'>\n                    <Box display='block' m='0 0 8px' overflow='hidden' borderRadius='10px 10px 0 0'>\n                        <Image src={image}  w='calc(100% + 20px)' objectFit='cover' maxH={{base: '200px', md: '260px'}}/>\n                    </Box>\n                </Link>\n                <Box>\n                    <Flex align='flex-start' m='10px 15px 0'>\n                        <Tag size='sm' variant='solid' colorScheme='teal' mr={2}>\n                            {animeList.media_text}\n                        </Tag>\n                        <Text as='h1' fontSize={{base: 'xs', md: 'md'}} fontWeight='800'>{animeList.title}</Text>\n                    </Flex>\n                    <Flex justify='space-between' w='100%'>\n                        <Box position='absolute' bottom='5px' right='5px'>\n                            <motion.div\n                                onClick={toggleLike}\n                                animate={controls}\n                                transition={!isLike ? { duration: 0.2 , ease: \"easeIn\"} : { duration: 0.6 , ease: \"easeIn\"}}\n                            >\n                                <Icon\n                                    as={isLike ? BsHeartFill : BsHeart }\n                                    fontSize='20px' \n                                    color={isLike ? '#FF1493': ''}\n                                    cursor='pointer'\n                                />\n                            </motion.div>\n                        </Box>\n                        <Box position='absolute' bottom='5px' left='15px'>\n                        <RouteLink to={{pathname: `/review/${animeList.id}`, state: animeList.images.recommended_url}}>\n                                <Box>\n                                    <Flex align='center' _hover={{cursor: 'pointer'}}>\n                                        <ReactStars edit={false}/><Text as='span' fontSize={{base: '3px', md: '4px'}}>(何件)</Text>\n                                    </Flex>\n                                </Box>\n                        </RouteLink>\n                        <ReviewModal id={animeList.id} />\n                        </Box>\n                    </Flex>\n                </Box>\n            </Box>\n        </>\n    )\n})\n\nexport default AnimeCard"]},"metadata":{},"sourceType":"module"}