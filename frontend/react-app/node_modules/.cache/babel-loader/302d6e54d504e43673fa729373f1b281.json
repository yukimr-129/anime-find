{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-app/src/components/pages/review/ReviewPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Center, Image, Text, VStack } from \"@chakra-ui/react\";\nimport ReviewList from \"components/organisms/ReviewList\";\nimport { useGetAnimeReviews } from \"customHooks/useGetAnimeReviews\";\nimport { memo, useState, useEffect } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewPage = /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n\n  const [loadIndex, setLoadIndex] = useState(4);\n  const [isEmpty, setIsEmpty] = useState(false);\n  const location = useLocation();\n  const {\n    anime_id\n  } = useParams();\n  const {\n    reviewsList\n  } = useGetAnimeReviews(anime_id);\n  const images = location.state;\n  const image = images ? images : 'https://lab.esprlog.net/annict/img/no_image.png';\n  console.log(reviewsList.length);\n  console.log(loadIndex); //「さらに表示」ボタンの制御\n\n  const displayMore = () => {\n    const listLen = [...reviewsList];\n\n    if (loadIndex < reviewsList.length) {\n      setLoadIndex(prevState => prevState + 4);\n    }\n  };\n\n  useEffect(() => {\n    let isMounted = true;\n\n    const checkLodaList = () => {\n      loadIndex > reviewsList.length && setIsEmpty(true);\n    };\n\n    isMounted && checkLodaList();\n    return () => {\n      isMounted = false;\n    };\n  }, [loadIndex]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    w: {\n      base: '80%',\n      md: '60%'\n    },\n    h: \"100%\",\n    bg: \"#ffff\",\n    m: \"100px auto 20px auto\",\n    borderRadius: \"10px\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      w: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        src: image,\n        borderRadius: \"10px 10px 0 0\",\n        w: \"100%\",\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        as: \"h2\",\n        fontWeight: \"bold\",\n        children: \"\\u30EC\\u30D3\\u30E5\\u30FC\\u4E00\\u89A7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 5,\n        align: \"start\",\n        children: reviewsList ? reviewsList.slice(0, loadIndex).map((review, key) => /*#__PURE__*/_jsxDEV(ReviewList, {\n          review: review\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this)) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Center, {\n        mt: 10,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"teal\",\n          disabled: isEmpty,\n          onClick: displayMore,\n          variant: \"solid\",\n          children: \"\\u3055\\u3089\\u306B\\u8868\\u793A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}, \"8XnNnEpSEuQw6i+qkk0M+20groE=\", false, function () {\n  return [useLocation, useParams, useGetAnimeReviews];\n}));\n_c2 = ReviewPage;\nexport default ReviewPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReviewPage$memo\");\n$RefreshReg$(_c2, \"ReviewPage\");","map":{"version":3,"sources":["/usr/src/app/react-app/src/components/pages/review/ReviewPage.tsx"],"names":["Box","Button","Center","Image","Text","VStack","ReviewList","useGetAnimeReviews","memo","useState","useEffect","useLocation","useParams","ReviewPage","loadIndex","setLoadIndex","isEmpty","setIsEmpty","location","anime_id","reviewsList","images","state","image","console","log","length","displayMore","listLen","prevState","isMounted","checkLodaList","base","md","slice","map","review","key"],"mappings":"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","sourcesContent":["import { Box, Button, Center, Image, Text, VStack } from \"@chakra-ui/react\";\nimport ReviewList from \"components/organisms/ReviewList\";\nimport { useGetAnimeReviews } from \"customHooks/useGetAnimeReviews\";\nimport { memo, useState, VFC, useEffect } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\n\nconst ReviewPage: VFC = memo(() => {\n    const [ loadIndex, setLoadIndex ] = useState(4)\n    const [ isEmpty, setIsEmpty ] = useState(false);\n    const location = useLocation<string>()\n    const { anime_id } = useParams<{anime_id: string}>()\n    const { reviewsList } = useGetAnimeReviews(anime_id)\n    const images = location.state\n    \n    \n    const image = images ? images : 'https://lab.esprlog.net/annict/img/no_image.png'\n    console.log(reviewsList.length);\n    console.log(loadIndex);\n    \n    //「さらに表示」ボタンの制御\n    const displayMore = () => {\n        const listLen = [...reviewsList]\n        if(loadIndex < reviewsList.length) {\n            setLoadIndex((prevState) => prevState + 4);\n        }\n    }\n\n    useEffect(() => {\n        let isMounted = true\n        const checkLodaList = () => {\n            loadIndex > reviewsList.length && setIsEmpty(true)\n        }\n        isMounted && checkLodaList()\n        return () => { isMounted = false }\n    }, [loadIndex])\n\n    return (\n        <Box w={{base: '80%', md: '60%'}} h='100%' bg='#ffff' m='100px auto 20px auto' borderRadius='10px'>\n            <Box w='100%'>\n                <Image src={image}  borderRadius='10px 10px 0 0' w='100%' objectFit='cover'/>\n            </Box>\n\n            <Box p={3}>\n                <Text as='h2' fontWeight='bold'>レビュー一覧</Text>\n                <VStack spacing={5} align='start'>\n                    {reviewsList ? (\n                        reviewsList.slice(0, loadIndex).map((review, key) => (\n                            <ReviewList key={key} review={review}/>\n                        ))\n                        ) : null }\n                </VStack>\n                <Center mt={10}>\n                    <Button\n                    colorScheme='teal'\n                    disabled={isEmpty}\n                    onClick={displayMore}\n                    variant=\"solid\"\n                    >\n                        さらに表示\n                    </Button>\n                </Center>\n            </Box>\n        </Box>\n    )\n})\n\nexport default ReviewPage"]},"metadata":{},"sourceType":"module"}