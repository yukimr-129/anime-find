{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-app/src/components/molecules/animeCard/AnimeCard.tsx\",\n    _s = $RefreshSig$();\n\nimport { Image } from '@chakra-ui/image';\nimport { Box, Flex, Link, Text } from '@chakra-ui/layout';\nimport React, { useState } from 'react';\nimport { BsHeartFill, BsHeart } from \"react-icons/bs\";\nimport { motion, useAnimation } from 'framer-motion';\nimport { Icon } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AnimeCard = props => {\n  _s();\n\n  const {\n    animeList\n  } = props;\n  const [isLike, setIsLike] = useState(false);\n  const controls = useAnimation();\n  const image = animeList.images.recommended_url !== '' ? animeList.images.recommended_url : 'https://lab.esprlog.net/annict/img/no_image.png';\n\n  const toggleLike = () => {\n    setIsLike(!isLike);\n\n    if (!isLike) {\n      controls.start({\n        scale: [0, 0.5, 1]\n      });\n    } else {\n      controls.start({\n        translateX: [0, 0, 0, -7, 0, -7, 0, 0]\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      w: {\n        base: '365px',\n        md: '500px'\n      },\n      h: {\n        base: '280px',\n        md: '330px'\n      },\n      bg: \"white\",\n      borderRadius: \"10px\",\n      m: \"15px 5px\",\n      p: \"0 0 10px 0\",\n      border: \"solid 1px #e0e0e0\",\n      position: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        as: \"a\",\n        href: animeList.official_site_url,\n        target: \"_blank\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"block\",\n          m: \"0 0 8px\",\n          overflow: \"hidden\",\n          borderRadius: \"10px 10px 0 0\",\n          children: /*#__PURE__*/_jsxDEV(motion.div, {\n            whileHover: {\n              scale: 1.1,\n              transition: {\n                duration: 0.3\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              src: image,\n              w: \"calc(100% + 20px)\",\n              objectFit: \"cover\",\n              maxH: {\n                base: '200px',\n                md: '260px'\n              },\n              _hover: {\n                filter: 'blur(3px)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n              initial: \"hiddin\",\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                color: \"white\",\n                fontWeight: \"700\",\n                position: \"absolute\",\n                top: \"30%\",\n                right: \"70%\",\n                children: \"View Official Site\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        align: \"flex-start\",\n        m: \"10px 15px 0\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          as: \"h1\",\n          fontSize: \"md\",\n          fontWeight: \"800\",\n          children: animeList.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justify: \"flex-end\",\n        w: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          position: \"absolute\",\n          bottom: \"5px\",\n          right: \"5px\",\n          children: /*#__PURE__*/_jsxDEV(motion.div, {\n            onClick: toggleLike,\n            animate: controls,\n            transition: !isLike ? {\n              duration: 0.2,\n              ease: \"easeIn\"\n            } : {\n              duration: 0.6,\n              ease: \"easeIn\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              as: isLike ? BsHeartFill : BsHeart,\n              fontSize: \"20px\",\n              color: isLike ? '#FF1493' : '',\n              cursor: \"pointer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(AnimeCard, \"MtZTNL9Hjy4BAAvQopYjkaqPekQ=\", false, function () {\n  return [useAnimation];\n});\n\n_c = AnimeCard;\nexport default AnimeCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimeCard\");","map":{"version":3,"sources":["/usr/src/app/react-app/src/components/molecules/animeCard/AnimeCard.tsx"],"names":["Image","Box","Flex","Link","Text","React","useState","BsHeartFill","BsHeart","motion","useAnimation","Icon","AnimeCard","props","animeList","isLike","setIsLike","controls","image","images","recommended_url","toggleLike","start","scale","translateX","base","md","official_site_url","transition","duration","filter","title","ease"],"mappings":"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","sourcesContent":["import { Image } from '@chakra-ui/image'\nimport { Badge, Box, Divider, Flex, HStack, Link, Stack, Text } from '@chakra-ui/layout'\nimport React, { memo, useCallback, VFC, useState } from 'react'\nimport { useHistory } from 'react-router'\nimport { BsHeartFill, BsHeart } from \"react-icons/bs\";\nimport { motion, useAnimation } from 'framer-motion';\nimport { Icon } from '@chakra-ui/react';\nimport { AnnictApiType } from '../../../types/api/AnnictApiType';\n\ntype Props = {\n    animeList: AnnictApiType;\n}\n\nconst AnimeCard: VFC<Props> = (props) => {\n    const { animeList } = props\n    const [ isLike, setIsLike ] = useState(false)\n    const controls = useAnimation()\n\n    const image = animeList.images.recommended_url !== '' ? animeList.images.recommended_url : 'https://lab.esprlog.net/annict/img/no_image.png'\n\n    const toggleLike = () => {\n        setIsLike(!isLike)\n        \n        if(!isLike) {\n            controls.start({ scale: [0, 0.5, 1] })\n        }else {\n            controls.start({ translateX: [0, 0, 0, -7, 0, -7, 0, 0] })\n        }\n    }\n\n    return (\n        <>\n                <Box w={{base: '365px', md: '500px'}} h={{base: '280px', md: '330px'}} bg='white' borderRadius='10px' m='15px 5px' p='0 0 10px 0' border='solid 1px #e0e0e0' position='relative'>\n                    <Link as='a' href={animeList.official_site_url} target='_blank'>\n                        <Box display='block' m='0 0 8px' overflow='hidden' borderRadius='10px 10px 0 0'>\n                            <motion.div  whileHover={{scale: 1.1, transition: { duration: 0.3 }}} >\n                                {/* <Box as='span'_before={{content:`\"「\"`}} _after={{content: 'View Official Site'}}> */}\n                                <Image src={image}  w='calc(100% + 20px)' objectFit='cover' maxH={{base: '200px', md: '260px'}} _hover={{filter: 'blur(3px)'}} />\n                                <motion.div initial='hiddin'>\n                                    <Text color='white' fontWeight='700' position='absolute' top='30%' right='70%'>View Official Site</Text>\n                                </motion.div>\n                                {/* </Box> */}\n                            </motion.div>\n                        </Box>\n                    </Link>\n                    <Flex align='flex-start' m='10px 15px 0'>\n                        <Text as='h1' fontSize=\"md\" fontWeight='800'>{animeList.title}</Text>\n                    </Flex> \n                    <Flex justify='flex-end' w='100%'>\n                        <Box position='absolute' bottom='5px' right='5px'>\n                            <motion.div\n                                onClick={toggleLike}\n                                animate={controls}\n                                transition={!isLike ? { duration: 0.2 , ease: \"easeIn\"} : { duration: 0.6 , ease: \"easeIn\"}}\n                            >\n                                <Icon\n                                    as={isLike ? BsHeartFill : BsHeart }\n                                    fontSize='20px' \n                                    color={isLike ? '#FF1493': ''}\n                                    cursor='pointer'\n                                />\n                            </motion.div>\n                        </Box>\n                    </Flex>\n                </Box>\n        </>\n    )\n}\n\nexport default AnimeCard"]},"metadata":{},"sourceType":"module"}